   ▲ Next.js 14.0.4
   - Local:        http://localhost:3000
   - Environments: .env.local, .env
   - Experiments (use at your own risk):
     · instrumentationHook
     · outputFileTracingRoot

 ⚠ Invalid next.config.js options detected: 
 ⚠     "env._next_intl_trailing_slash" is missing, expected string
 ⚠ See more info here: https://nextjs.org/docs/messages/invalid-next-config
 ⚠ Disabling SWC Minifer will not be an option in the next major version. Please report any issues you may be experiencing to https://github.com/vercel/next.js/issues
 ✓ Ready in 4.3s
 ✓ Compiled /src/middleware in 132ms (241 modules)
 ○ Compiling /[locale]/create ...
Browserslist: browsers data (caniuse-lite) is 7 months old. Please run:
  npx update-browserslist-db@latest
  Why you should do it regularly: https://github.com/browserslist/update-db#readme
 ✓ Compiled /[locale]/create in 9.3s (10561 modules)
Lit is in dev mode. Not recommended for production! See https://lit.dev/msg/dev-mode for more information.
 ○ Compiling /favicon.ico ...
 ✓ Compiled /favicon.ico in 4.3s (10580 modules)
Multiple versions of Lit loaded. Loading multiple versions is not recommended. See https://lit.dev/msg/multiple-versions for more information.
 ✓ Compiled /api/auth/wallet-connect-no-sig in 492ms (5483 modules)
Wallet connect no signature request: { address: '0xde184a6809898d81186def5c0823d2107c001da2' }
 ✓ Compiled /api/auth/nonce in 354ms (5486 modules)
 ○ Compiling /api/auth/wallet-connect ...
 ✓ Compiled /api/auth/wallet-connect in 685ms (5653 modules)
Wallet connect request: {
  address: '0xeb35578e2348c3a941C64D6456f52720CcA814ba',
  signature: '0x50e2d752867793a208eabdf22f4ca750b265e6c9fbefa2dc8404aaf12ccfd6432e005197db2029928bf36673fe5d1f8cc8c2590a93802fc04a91da69dfb9c4a61b',
  message: 'Please sign to log in XAIAgent\n' +
    '\n' +
    'Nonce: 960700b78299f72e8aa6e9bbcaa65b26cd258687d0f0190a3b51b51369d7a685'
}
Extracted nonce: 960700b78299f72e8aa6e9bbcaa65b26cd258687d0f0190a3b51b51369d7a685
Stored nonce lookup result: {
  id: '8a493982-d236-493c-9a39-f87f62829465',
  nonce: '960700b78299f72e8aa6e9bbcaa65b26cd258687d0f0190a3b51b51369d7a685',
  address: '',
  createdAt: 2025-07-18T14:14:39.416Z,
  expiresAt: 2025-07-18T14:19:38.925Z
}
User: {
  id: 'a136cf7d-7054-46d1-876e-90ac458ea7f3',
  address: '0xde184a6809898d81186def5c0823d2107c001da2',
  nickname: null,
  avatar: null,
  createdAt: 2025-06-27T07:47:15.548Z,
  updatedAt: 2025-06-27T07:47:15.548Z,
  preferences: null
}
User: {
  id: 'ca23fb7c-4b0c-4bbe-ba6b-e07369594429',
  address: '0xeb35578e2348c3a941c64d6456f52720cca814ba',
  nickname: null,
  avatar: null,
  createdAt: 2025-07-18T14:14:41.563Z,
  updatedAt: 2025-07-18T14:14:41.563Z,
  preferences: null
}
 ○ Compiling /api/agents/new ...
 ✓ Compiled /api/agents/new in 963ms (6122 modules)
🔧 事件监听器配置: {
  environment: 'development',
  chainId: 19880818,
  chainName: 'DeepBrainChain Mainnet',
  rpcUrl: 'https://rpc2.dbcwallet.io...'
}
📅 接收到的时间参数: {
  startTimestamp: 1752933650,
  durationHours: 72,
  startTimestampType: 'number',
  durationHoursType: 'number',
  startTimestampDate: '2025-07-19T14:00:50.000Z',
  calculatedEndTime: '2025-07-22T14:00:50.000Z'
}
📅 接收到的时间参数: {
  startTimestamp: 1752933650,
  durationHours: 72,
  startTimestampType: 'number',
  durationHoursType: 'number',
  startTimestampDate: '2025-07-19T14:00:50.000Z',
  calculatedEndTime: '2025-07-22T14:00:50.000Z'
}
[Agent创建] 开始处理Agent 62a14d96-69f3-485f-a41c-f2cf3679797b 的创建任务...
[Agent创建] 找到Agent信息:
[Agent创建] - 名称: testm
[Agent创建] - 创建者: 0xde184a6809898d81186def5c0823d2107c001da2
[Agent创建] - Symbol: TESTM
[IAO部署] 开始部署IAO合约...
[IAO部署] 参数信息:
[IAO部署] - 持续时间: 72小时
[IAO部署] - 开始时间: 1752933650
[IAO部署] - 奖励数量: 2000000000000000000000000000
[IAO部署] - 所有者地址: 0xde184a6809898d81186def5c0823d2107c001da2
[IAO部署] 计算的奖励数量: 15000000000 (15000000000000000474191233024 Wei)
IAO deployment response: {
  code: 200,
  message: 'Deployment successful',
  data: { proxy_address: '0xec71FAC1290bb8dd67c80ac47A4468adff53fE54' }
}
[IAO部署] 部署成功:
[IAO部署] - IAO合约地址: 0xec71FAC1290bb8dd67c80ac47A4468adff53fE54
[时间计算] 详细信息:
[时间计算] - 客户端传入 startTimestamp: 1752933650 (2025-07-19T14:00:50.000Z)
[时间计算] - 客户端传入 durationHours: 72
[时间计算] - 实际使用 startTimestamp: 1752933650 (2025-07-19T14:00:50.000Z)
[时间计算] - 实际使用 durationHours: 72
[时间计算] - 计算出的 endTimestamp: 1753192850 (2025-07-22T14:00:50.000Z)
[Agent更新] 开始更新Agent状态...
[Agent更新] IAO时间: 2025-07-19T14:00:50.000Z 到 2025-07-22T14:00:50.000Z
[Agent更新] Agent状态已更新为TBA，IAO时间已保存
[事件监听] 触发监听器重新加载...
🔄 手动触发: 重新加载合约监听器...
所有事件监听已停止
事件监听器正在重启中，跳过重复启动
✅ 事件监听器已成功重启
[完成] Agent创建流程完成
 ✓ Compiled in 807ms (5215 modules)
 ✓ Compiled in 822ms (5215 modules)
 ✓ Compiled in 443ms (5215 modules)
 ○ Compiling /api/user/profile ...
 ✓ Compiled /api/user/profile in 617ms (5442 modules)
 ○ Compiling /[locale]/agent-detail/[id] ...
 ✓ Compiled /[locale]/agent-detail/[id] in 4.3s (10794 modules)
 ✓ Compiled /api/agents/[id] in 442ms (5523 modules)
[Agent详情API] 管理状态字段: {
  tokensDistributed: false,
  liquidityAdded: false,
  tokensBurned: false,
  ownerTransferred: false,
  miningOwnerTransferred: false
}
[Agent详情API] tokensDistributed类型: boolean, 值: false
[Agent详情状态计算] Agent: testm (62a14d96-69f3-485f-a41c-f2cf3679797b)
[Agent详情状态计算] 原始状态: TBA
[Agent详情状态计算] 当前时间戳: 1752848476 (2025-07-18T14:21:16.000Z)
[Agent详情状态计算] IAO开始时间: 1752933650 (2025-07-19T14:00:50.000Z)
[Agent详情状态计算] IAO结束时间: 1753192850 (2025-07-22T14:00:50.000Z)
[Agent详情状态计算] 代币地址: null
[Agent详情状态计算] 测试环境: false
[Agent详情状态计算] IAO还未开始，状态: IAO_COMING_SOON
[Agent详情状态计算] 最终状态: IAO_COMING_SOON
[Agent详情状态计算] ==========================================
 ✓ Compiled /api/agents/[id]/tasks in 476ms (5525 modules)
[Agent详情API] 管理状态字段: {
  tokensDistributed: false,
  liquidityAdded: false,
  tokensBurned: false,
  ownerTransferred: false,
  miningOwnerTransferred: false
}
[Agent详情API] tokensDistributed类型: boolean, 值: false
[Agent详情状态计算] Agent: testm (62a14d96-69f3-485f-a41c-f2cf3679797b)
[Agent详情状态计算] 原始状态: TBA
[Agent详情状态计算] 当前时间戳: 1752848477 (2025-07-18T14:21:17.000Z)
[Agent详情状态计算] IAO开始时间: 1752933650 (2025-07-19T14:00:50.000Z)
[Agent详情状态计算] IAO结束时间: 1753192850 (2025-07-22T14:00:50.000Z)
[Agent详情状态计算] 代币地址: null
[Agent详情状态计算] 测试环境: false
[Agent详情状态计算] IAO还未开始，状态: IAO_COMING_SOON
[Agent详情状态计算] 最终状态: IAO_COMING_SOON
[Agent详情状态计算] ==========================================
 ○ Compiling /favicon.ico ...
 ✓ Compiled /api/auth/wallet-connect-no-sig in 2.8s (10825 modules)
 ✓ Compiled (10918 modules)
Wallet connect no signature request: { address: '0xde184a6809898d81186def5c0823d2107c001da2' }
User: {
  id: 'a136cf7d-7054-46d1-876e-90ac458ea7f3',
  address: '0xde184a6809898d81186def5c0823d2107c001da2',
  nickname: null,
  avatar: null,
  createdAt: 2025-06-27T07:47:15.548Z,
  updatedAt: 2025-06-27T07:47:15.548Z,
  preferences: null
}
[Agent详情API] 管理状态字段: {
  tokensDistributed: false,
  liquidityAdded: false,
  tokensBurned: false,
  ownerTransferred: false,
  miningOwnerTransferred: false
}
[Agent详情API] tokensDistributed类型: boolean, 值: false
[Agent详情状态计算] Agent: testm (62a14d96-69f3-485f-a41c-f2cf3679797b)
[Agent详情状态计算] 原始状态: TBA
[Agent详情状态计算] 当前时间戳: 1752848551 (2025-07-18T14:22:31.000Z)
[Agent详情状态计算] IAO开始时间: 1752933650 (2025-07-19T14:00:50.000Z)
[Agent详情状态计算] IAO结束时间: 1753192850 (2025-07-22T14:00:50.000Z)
[Agent详情状态计算] 代币地址: null
[Agent详情状态计算] 测试环境: false
[Agent详情状态计算] IAO还未开始，状态: IAO_COMING_SOON
[Agent详情状态计算] 最终状态: IAO_COMING_SOON
[Agent详情状态计算] ==========================================
 ○ Compiling /api/agents/[id]/tasks ...
 ✓ Compiled /api/agents/[id]/tasks in 545ms (5644 modules)
[Agent详情API] 管理状态字段: {
  tokensDistributed: false,
  liquidityAdded: false,
  tokensBurned: false,
  ownerTransferred: false,
  miningOwnerTransferred: false
}
[Agent详情API] tokensDistributed类型: boolean, 值: false
[Agent详情状态计算] Agent: testm (62a14d96-69f3-485f-a41c-f2cf3679797b)
[Agent详情状态计算] 原始状态: TBA
[Agent详情状态计算] 当前时间戳: 1752848552 (2025-07-18T14:22:32.000Z)
[Agent详情状态计算] IAO开始时间: 1752933650 (2025-07-19T14:00:50.000Z)
[Agent详情状态计算] IAO结束时间: 1753192850 (2025-07-22T14:00:50.000Z)
[Agent详情状态计算] 代币地址: null
[Agent详情状态计算] 测试环境: false
[Agent详情状态计算] IAO还未开始，状态: IAO_COMING_SOON
[Agent详情状态计算] 最终状态: IAO_COMING_SOON
[Agent详情状态计算] ==========================================
Wallet connect no signature request: { address: '0xde184a6809898d81186def5c0823d2107c001da2' }
User: {
  id: 'a136cf7d-7054-46d1-876e-90ac458ea7f3',
  address: '0xde184a6809898d81186def5c0823d2107c001da2',
  nickname: null,
  avatar: null,
  createdAt: 2025-06-27T07:47:15.548Z,
  updatedAt: 2025-06-27T07:47:15.548Z,
  preferences: null
}
[Agent详情API] 管理状态字段: {
  tokensDistributed: false,
  liquidityAdded: false,
  tokensBurned: false,
  ownerTransferred: false,
  miningOwnerTransferred: false
}
[Agent详情API] tokensDistributed类型: boolean, 值: false
[Agent详情状态计算] Agent: testm (62a14d96-69f3-485f-a41c-f2cf3679797b)
[Agent详情状态计算] 原始状态: TBA
[Agent详情状态计算] 当前时间戳: 1752848621 (2025-07-18T14:23:41.000Z)
[Agent详情状态计算] IAO开始时间: 1752933650 (2025-07-19T14:00:50.000Z)
[Agent详情状态计算] IAO结束时间: 1753192850 (2025-07-22T14:00:50.000Z)
[Agent详情状态计算] 代币地址: null
[Agent详情状态计算] 测试环境: false
[Agent详情状态计算] IAO还未开始，状态: IAO_COMING_SOON
[Agent详情状态计算] 最终状态: IAO_COMING_SOON
[Agent详情状态计算] ==========================================
[Agent详情API] 管理状态字段: {
  tokensDistributed: false,
  liquidityAdded: false,
  tokensBurned: false,
  ownerTransferred: false,
  miningOwnerTransferred: false
}
[Agent详情API] tokensDistributed类型: boolean, 值: false
[Agent详情状态计算] Agent: testm (62a14d96-69f3-485f-a41c-f2cf3679797b)
[Agent详情状态计算] 原始状态: TBA
[Agent详情状态计算] 当前时间戳: 1752848622 (2025-07-18T14:23:42.000Z)
[Agent详情状态计算] IAO开始时间: 1752933650 (2025-07-19T14:00:50.000Z)
[Agent详情状态计算] IAO结束时间: 1753192850 (2025-07-22T14:00:50.000Z)
[Agent详情状态计算] 代币地址: null
[Agent详情状态计算] 测试环境: false
[Agent详情状态计算] IAO还未开始，状态: IAO_COMING_SOON
[Agent详情状态计算] 最终状态: IAO_COMING_SOON
[Agent详情状态计算] ==========================================
Wallet connect no signature request: { address: '0xf3851de68b2ac824b1d4c85878df76e7ce2bd808' }
User: {
  id: '9a958ac6-8e9d-47af-adf8-f9ea8a683f62',
  address: '0xf3851de68b2ac824b1d4c85878df76e7ce2bd808',
  nickname: null,
  avatar: null,
  createdAt: 2025-07-16T06:30:34.083Z,
  updatedAt: 2025-07-16T06:30:34.083Z,
  preferences: null
}
Wallet connect no signature request: { address: '0xde184a6809898d81186def5c0823d2107c001da2' }
User: {
  id: 'a136cf7d-7054-46d1-876e-90ac458ea7f3',
  address: '0xde184a6809898d81186def5c0823d2107c001da2',
  nickname: null,
  avatar: null,
  createdAt: 2025-06-27T07:47:15.548Z,
  updatedAt: 2025-06-27T07:47:15.548Z,
  preferences: null
}
[Agent详情API] 管理状态字段: {
  tokensDistributed: false,
  liquidityAdded: false,
  tokensBurned: false,
  ownerTransferred: false,
  miningOwnerTransferred: false
}
[Agent详情API] tokensDistributed类型: boolean, 值: false
[Agent详情状态计算] Agent: testm (62a14d96-69f3-485f-a41c-f2cf3679797b)
[Agent详情状态计算] 原始状态: TBA
[Agent详情状态计算] 当前时间戳: 1752848712 (2025-07-18T14:25:12.000Z)
[Agent详情状态计算] IAO开始时间: 1752933650 (2025-07-19T14:00:50.000Z)
[Agent详情状态计算] IAO结束时间: 1753192850 (2025-07-22T14:00:50.000Z)
[Agent详情状态计算] 代币地址: null
[Agent详情状态计算] 测试环境: false
[Agent详情状态计算] IAO还未开始，状态: IAO_COMING_SOON
[Agent详情状态计算] 最终状态: IAO_COMING_SOON
[Agent详情状态计算] ==========================================
Wallet connect no signature request: { address: '0xde184a6809898d81186def5c0823d2107c001da2' }
Wallet connect no signature request: { address: '0xde184a6809898d81186def5c0823d2107c001da2' }
User: {
  id: 'a136cf7d-7054-46d1-876e-90ac458ea7f3',
  address: '0xde184a6809898d81186def5c0823d2107c001da2',
  nickname: null,
  avatar: null,
  createdAt: 2025-06-27T07:47:15.548Z,
  updatedAt: 2025-06-27T07:47:15.548Z,
  preferences: null
}
[Agent详情API] 管理状态字段: {
  tokensDistributed: false,
  liquidityAdded: false,
  tokensBurned: false,
  ownerTransferred: false,
  miningOwnerTransferred: false
}
[Agent详情API] tokensDistributed类型: boolean, 值: false
[Agent详情状态计算] Agent: testm (62a14d96-69f3-485f-a41c-f2cf3679797b)
[Agent详情状态计算] 原始状态: TBA
[Agent详情状态计算] 当前时间戳: 1752848713 (2025-07-18T14:25:13.000Z)
[Agent详情状态计算] IAO开始时间: 1752933650 (2025-07-19T14:00:50.000Z)
[Agent详情状态计算] IAO结束时间: 1753192850 (2025-07-22T14:00:50.000Z)
[Agent详情状态计算] 代币地址: null
[Agent详情状态计算] 测试环境: false
[Agent详情状态计算] IAO还未开始，状态: IAO_COMING_SOON
[Agent详情状态计算] 最终状态: IAO_COMING_SOON
[Agent详情状态计算] ==========================================
User: {
  id: 'a136cf7d-7054-46d1-876e-90ac458ea7f3',
  address: '0xde184a6809898d81186def5c0823d2107c001da2',
  nickname: null,
  avatar: null,
  createdAt: 2025-06-27T07:47:15.548Z,
  updatedAt: 2025-06-27T07:47:15.548Z,
  preferences: null
}
 ○ Compiling /api/agents/[id]/create-token ...
 ✓ Compiled /api/agents/[id]/create-token in 966ms (5751 modules)
[Token创建] 开始为Agent 62a14d96-69f3-485f-a41c-f2cf3679797b 部署Token...
[Token创建] 创建者地址: 0xde184a6809898d81186def5c0823d2107c001da2
[Token创建] Token名称: testm
[Token创建] Token符号: TESTM
[Token创建] IAO合约地址: 0xec71FAC1290bb8dd67c80ac47A4468adff53fE54
[Token创建] 数据库中的总供应量: 100000000000
[Token创建] Wei单位的总供应量: 100000000000000000000000000000
[Token创建] 挖矿速率: 5%
[Token创建] 每年可挖矿代币数量(Wei): 5000000000000000000000000000
[Token创建] IAO比例: 15%
[Token创建] 分配给IAO的代币数量(Wei): 15000000000000000000000000000
[Token创建] 请求体: {
  "owner": "0x417Dd0DDAA54E651e304A12c9810173F57876159",
  "token_amount_can_mint_per_year": "5000000000000000000000000000",
  "token_init_supply": "100000000000000000000000000000",
  "token_name": "testm",
  "token_supply_fixed_years": 8,
  "token_symbol": "TESTM",
  "iao_contract_address": "0xec71FAC1290bb8dd67c80ac47A4468adff53fE54",
  "amount_to_iao": "15000000000000000000000000000"
}
 ○ Compiling /api/agents/[id]/tasks ...
 ✓ Compiled /api/agents/[id]/tasks in 528ms (5753 modules)
[Token创建] 原始响应: {"code":200,"message":"Deployment successful","data":{"proxy_address":"0x05c192e9e7F6B4eBB9186b9186051C56d3C9bDfF"}}
[Token创建] 响应状态: 200
[Token创建] Token部署结果: {
  code: 200,
  message: 'Deployment successful',
  data: { proxy_address: '0x05c192e9e7F6B4eBB9186b9186051C56d3C9bDfF' }
}
[Token创建] Token合约地址: 0x05c192e9e7F6B4eBB9186b9186051C56d3C9bDfF
[完成] Token创建完成
[完成] Token地址: 0x05c192e9e7F6B4eBB9186b9186051C56d3C9bDfF
Wallet connect no signature request: { address: '0xde184a6809898d81186def5c0823d2107c001da2' }
[Agent详情API] 管理状态字段: {
  tokensDistributed: false,
  liquidityAdded: false,
  tokensBurned: false,
  ownerTransferred: false,
  miningOwnerTransferred: false
}
[Agent详情API] tokensDistributed类型: boolean, 值: false
[Agent详情状态计算] Agent: testm (62a14d96-69f3-485f-a41c-f2cf3679797b)
[Agent详情状态计算] 原始状态: TBA
[Agent详情状态计算] 当前时间戳: 1752848807 (2025-07-18T14:26:47.000Z)
[Agent详情状态计算] IAO开始时间: 1752933650 (2025-07-19T14:00:50.000Z)
[Agent详情状态计算] IAO结束时间: 1753192850 (2025-07-22T14:00:50.000Z)
[Agent详情状态计算] 代币地址: 0x05c192e9e7F6B4eBB9186b9186051C56d3C9bDfF
[Agent详情状态计算] 测试环境: false
[Agent详情状态计算] IAO还未开始，状态: IAO_COMING_SOON
[Agent详情状态计算] 最终状态: IAO_COMING_SOON
[Agent详情状态计算] ==========================================
[Agent详情API] 管理状态字段: {
  tokensDistributed: false,
  liquidityAdded: false,
  tokensBurned: false,
  ownerTransferred: false,
  miningOwnerTransferred: false
}
[Agent详情API] tokensDistributed类型: boolean, 值: false
[Agent详情状态计算] Agent: testm (62a14d96-69f3-485f-a41c-f2cf3679797b)
[Agent详情状态计算] 原始状态: TBA
[Agent详情状态计算] 当前时间戳: 1752848807 (2025-07-18T14:26:47.000Z)
[Agent详情状态计算] IAO开始时间: 1752933650 (2025-07-19T14:00:50.000Z)
[Agent详情状态计算] IAO结束时间: 1753192850 (2025-07-22T14:00:50.000Z)
[Agent详情状态计算] 代币地址: 0x05c192e9e7F6B4eBB9186b9186051C56d3C9bDfF
[Agent详情状态计算] 测试环境: false
[Agent详情状态计算] IAO还未开始，状态: IAO_COMING_SOON
[Agent详情状态计算] 最终状态: IAO_COMING_SOON
[Agent详情状态计算] ==========================================
User: {
  id: 'a136cf7d-7054-46d1-876e-90ac458ea7f3',
  address: '0xde184a6809898d81186def5c0823d2107c001da2',
  nickname: null,
  avatar: null,
  createdAt: 2025-06-27T07:47:15.548Z,
  updatedAt: 2025-06-27T07:47:15.548Z,
  preferences: null
}
 ○ Compiling /api/token/distribute ...
 ✓ Compiled /api/token/distribute in 1299ms (6155 modules)
🚀 收到代币分配请求
⏰ 请求时间: 2025-07-18T14:27:30.153Z
📝 请求参数详情:
  - Agent ID: 62a14d96-69f3-485f-a41c-f2cf3679797b
  - 总供应量: 100000000000
  - 代币地址: 0x05c192e9e7F6B4eBB9186b9186051C56d3C9bDfF
🔍 验证请求参数格式...
✅ 参数验证通过
🔐 验证用户身份和权限...
✅ 权限验证通过:
  - 用户地址: 0xde184a6809898d81186def5c0823d2107c001da2
  - Agent名称: testm
  - Agent符号: TESTM
  - Agent代币地址: 0x05c192e9e7F6B4eBB9186b9186051C56d3C9bDfF
🔍 验证代币地址匹配...
✅ 代币地址验证通过
📝 创建代币分发任务记录...
✅ 任务创建成功，任务ID: 03120299-4167-4e94-82cc-39d255b95f36
🚀 启动后台代币分发任务...
🔄 开始处理代币分发任务 03120299-4167-4e94-82cc-39d255b95f36
💰 开始执行代币分配流程...
🔍 [DEBUG] distributeTokensWithOptions 开始执行
🔍 [DEBUG] 参数: {
  agentId: '62a14d96-69f3-485f-a41c-f2cf3679797b',
  totalSupply: '100000000000',
  tokenAddress: '0x05c192e9e7F6B4eBB9186b9186051C56d3C9bDfF',
  userAddress: '0xde184a6809898d81186def5c0823d2107c001da2',
  options: { includeBurn: false, burnPercentage: 5, retryTaskId: undefined }
}
🔍 [DEBUG] 🏦 分发前预处理 - 提取IPO中的代币
🏦 开始提取IPO中的代币 - Agent ID: 62a14d96-69f3-485f-a41c-f2cf3679797b
🏦 IAO合约地址: 0xec71FAC1290bb8dd67c80ac47A4468adff53fE54
🔧 初始化服务端钱包客户端...
✅ 服务端钱包初始化成功: 0x417Dd0DDAA54E651e304A12c9810173F57876159
📝 执行claimDepositedToken - 合约: 0xec71FAC1290bb8dd67c80ac47A4468adff53fE54
🔍 开始权限检查...
🔍 服务端钱包是否为管理员: false
🔍 合约所有者: 0x417Dd0DDAA54E651e304A12c9810173F57876159
🔍 服务端钱包: 0x417Dd0DDAA54E651e304A12c9810173F57876159
🔍 是否为所有者: true
🔍 IAO是否成功: true
🔍 总投入金额: 100000000000000000000000
🔍 Oracle地址: 0x4bb48d5821cb668B663f74111D06D6B0060d2950
🔍 Oracle是否为服务端钱包: false
🔧 尝试设置服务端钱包为管理员...
⚠️ 设置管理员失败: The contract function "setAdmin" reverted with the following reason:
no signer available

Contract Call:
  address:   0xec71FAC1290bb8dd67c80ac47A4468adff53fE54
  function:  setAdmin(address _admin, bool _isAdmin)
  args:              (0x417Dd0DDAA54E651e304A12c9810173F57876159, true)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
🔍 IAO合约中的代币余额: 15000000000000000000000000000
� 直接执行claimDepositedToken...
✅ claimDepositedToken交易已提交: 0x99fc1fa02439565aaa5eebdc8007d173c06d095641484c4b8ac68290630a586b
⏳ 等待交易确认...
✅ claimDepositedToken执行成功 - Gas Used: 1179570
🔍 [DEBUG] ✅ IPO代币提取成功 - TxHash: 0x99fc1fa02439565aaa5eebdc8007d173c06d095641484c4b8ac68290630a586b
🔍 [DEBUG] 调用 distributeTokens...
🔍 [DEBUG] 🚀 开始代币分配
🔍 [DEBUG] Agent: 62a14d96-69f3-485f-a41c-f2cf3679797b, 总供应量: 100000000000
🔍 [DEBUG] ⏭️ 启用容错模式 - 跳过已成功的步骤
🔍 [DEBUG] 获取 Agent 信息...
🔍 [DEBUG] Agent 信息: {
  id: '62a14d96-69f3-485f-a41c-f2cf3679797b',
  creator: { address: '0xde184a6809898d81186def5c0823d2107c001da2' },
  iaoContractAddress: '0xec71FAC1290bb8dd67c80ac47A4468adff53fE54',
  tokenAddress: '0x05c192e9e7F6B4eBB9186b9186051C56d3C9bDfF'
}
🔍 开始查找已有任务 - skipSuccessful: true
🔍 查找已有分配任务 - agentId: 62a14d96-69f3-485f-a41c-f2cf3679797b, tokenAddress: 0x05c192e9e7F6B4eBB9186b9186051C56d3C9bDfF
🔍 [DEBUG] 数据库查询结果:
  - 找到任务数量: 1
  - 任务1: ID=03120299-4167-4e94-82cc-39d255b95f36, Status=PROCESSING, CreatedAt=Fri Jul 18 2025 22:27:30 GMT+0800 (中国标准时间)
    - result字段类型: string
    - 是否有transactions: undefined
    - result字段内容: "{\"metadata\":{\"totalSupply\":\"100000000000\",\"tokenAddress\":\"0x05c192e9e7F6B4eBB9186b9186051C56d3C9bDfF\",\"includeBurn\":false,\"burnPercentage\":5}}"...
📋 找到 1 条相关分发任务记录，开始合并所有交易记录...
  处理任务 1/1: ID=03120299-4167-4e94-82cc-39d255b95f36, Status=PROCESSING, CreatedAt=Fri Jul 18 2025 22:27:30 GMT+0800 (中国标准时间)
     ✅ 成功解析任务数据
     ❌ 任务不匹配当前tokenAddress
❌ 未找到匹配的分配任务
📋 从历史记录中获取已完成步骤: 无
📝 没有找到已完成的步骤，将执行完整分发流程
📝 创建新的分配任务记录...
📝 创建分发任务记录 - Agent: 62a14d96-69f3-485f-a41c-f2cf3679797b, 总供应量: 100000000000
✅ 分发任务创建成功 - Task ID: 2fb2ee14-c6fd-494f-98f0-a25824a4b04e
📝 分配任务创建成功: 2fb2ee14-c6fd-494f-98f0-a25824a4b04e
📊 开始计算分配数量 - 总供应量: 100000000000
📊 分配数量计算完成:
  - 创建者 (33%): 33000000000
  - IAO合约 (15%): 15000000000 [已由恒源自动分配]
  - 流动性 (10%): 10000000000 [暂时禁用]
  - 空投 (2%): 2000000000
  - AI挖矿 (40%): 40000000000
💰 智能余额检查 - 只检查未完成步骤...
💰 余额检查结果:
  - 当前余额: 85000000000
  - 需要余额: 75000000000
  - 待执行步骤: 创建者 (33000000000), 空投 (2000000000), 挖矿 (40000000000)
  - 已完成步骤: 无
  - 余额充足: ✅
✅ 余额检查通过，可以执行剩余 3 个步骤
🚀 开始执行代币分配交易...
🔍 [DEBUG] 👤 [1/3] 分配给创建者 (33%): 33000000000 -> 0xde184a6809898d81186def5c0823d2107c001da2，锁定50秒
🔍 [DEBUG] 📤 创建者分配已发送(transferAndLock): 0x80e1f36d8ea4ca158d4547931cb908bc799633adb57cdf97a545b57360faa783
🔍 [DEBUG] 👤 创建者分配结果(transferAndLock): ✅ 成功 - Hash: 0x80e1f36d8ea4ca158d4547931cb908bc799633adb57cdf97a545b57360faa783
🏦 跳过IAO合约分配 (15%) - 恒源已自动完成此分配
🏦 IAO合约地址: 0xec71FAC1290bb8dd67c80ac47A4468adff53fE54 (已自动分配)
🔄 调用IAO合约的setRewardToken方法 - 设置奖励代币: 0x05c192e9e7F6B4eBB9186b9186051C56d3C9bDfF
✅ setRewardToken交易已提交: 0x8fc8ec0078a13839f29051a3df923603ca75e92ba0e7747ebffbfa8b8a102be6
✅ 奖励代币设置成功 - Token: 0x05c192e9e7F6B4eBB9186b9186051C56d3C9bDfF
🔍 [DEBUG] 🎁 [2/4] 分配给空投钱包 (2%): 2000000000 -> 0x8ef54e57dFB0b84Eb909072B699057Ef9517704a
🔍 [DEBUG] 📤 开始 airdrop 转账: 2000000000 tokens -> 0x8ef54e57dFB0b84Eb909072B699057Ef9517704a
🔍 [DEBUG] 📤 airdrop 转账已发送: 0xd93be2bd1249bcbf7f0f6abeaa43361a308ce71f18e45e4004d28398e1689a51
🔍 [DEBUG] ✅ airdrop 转账confirmed: 0xd93be2bd1249bcbf7f0f6abeaa43361a308ce71f18e45e4004d28398e1689a51
🔍 [DEBUG] airdrop 转账最终结果: {
  type: 'airdrop',
  amount: '2000000000',
  txHash: '0xd93be2bd1249bcbf7f0f6abeaa43361a308ce71f18e45e4004d28398e1689a51',
  status: 'confirmed',
  toAddress: '0x8ef54e57dFB0b84Eb909072B699057Ef9517704a'
}
🔍 [DEBUG] 🎁 空投钱包分配结果: ✅ 成功 - Hash: 0xd93be2bd1249bcbf7f0f6abeaa43361a308ce71f18e45e4004d28398e1689a51
⛏️ [3/4] 分配给AI挖矿合约 (40%): 40000000000 -> 0x6B0B8F74aaCe9731a2f5fc45c64bbd72075dBfDB
🔍 [DEBUG] 📤 开始 mining 转账: 40000000000 tokens -> 0x6B0B8F74aaCe9731a2f5fc45c64bbd72075dBfDB
🔍 [DEBUG] 📤 mining 转账已发送: 0xe3d5c2f6446675f6eed2f6345b1f98cb81fda92427d0e928612d4cc2508097ff
🔍 [DEBUG] ✅ mining 转账confirmed: 0xe3d5c2f6446675f6eed2f6345b1f98cb81fda92427d0e928612d4cc2508097ff
🔍 [DEBUG] mining 转账最终结果: {
  type: 'mining',
  amount: '40000000000',
  txHash: '0xe3d5c2f6446675f6eed2f6345b1f98cb81fda92427d0e928612d4cc2508097ff',
  status: 'confirmed',
  toAddress: '0x6B0B8F74aaCe9731a2f5fc45c64bbd72075dBfDB'
}
⛏️ AI挖矿合约分配结果: ✅ 成功 - Hash: 0xe3d5c2f6446675f6eed2f6345b1f98cb81fda92427d0e928612d4cc2508097ff
💧 [4/4] 添加DBCSwap流动性 (10%): 10000000000 代币
🏊 开始添加流动性 - 代币: 0x05c192e9e7F6B4eBB9186b9186051C56d3C9bDfF, 数量: 10000000000
🚀 开始流动性分发...
📊 Agent ID: 62a14d96-69f3-485f-a41c-f2cf3679797b
🪙 代币地址: 0x05c192e9e7F6B4eBB9186b9186051C56d3C9bDfF
📈 总供应量: 100000000000
🧮 计算流动性参数 - 总供应量: 100000000000, IAO合约: 0xec71FAC1290bb8dd67c80ac47A4468adff53fE54
🔍 查询IAO合约中的总投入XAA数量 - 合约地址: 0xec71FAC1290bb8dd67c80ac47A4468adff53fE54
🏦 IAO合约地址: 0xec71FAC1290bb8dd67c80ac47A4468adff53fE54
✅ 查询到总投入XAA数量: 99999.99999999999 XAA (100000000000000000000000 wei)
🔧 四舍五入后的XAA数量: 100000 XAA

✅ 验证计算结果:
  - 从XAA计算的流动性L: 51,816,718.902
  - 从代币计算的流动性L: 51,816,718.902
  - XAA误差: 0.000000%
  - 代币误差: 0.000000%
  - 价格倍数: 7.72x (相对于初始价格)
  - 总价格范围: 38.59x

========== 流动性价格配置 ==========
💰 代币数量:
  - 总供应量: 100000000000
  - IAO代币数量(15%): 15000000000
  - 流动性代币数量(10%): 10000000000
  - 原始XAA数量: 100000
  - 价格计算用XAA数量(100%): 100000
  - 实际使用XAA数量(95%): 95000

💰 价格计算:
  - 计算公式: XAA数量 / IAO代币数量
  - 基础价格 = 100000 / 15000000000 = 0.00001
  - 调整价格 = 0.00001 * 1.1 = 0.000011000000000000001

💰 价格和Tick设置:
  - 基础初始价格: 0.00001000
  - 调整后初始价格: 0.00001100 (1.1x of base)
    • 原始tick: -114182
    • 对齐后tick: -114190 (spacing: 10)
  - 最低价格: 0.00000220 (20.0% of initial)
    • 原始tick: -130278
    • 对齐后tick: -130280 (spacing: 10)
  - 最高价格: 0.00008491 (7.72x of initial)
    • 原始tick: -93745
    • 对齐后tick: -93750 (spacing: 10)
  - 计算方法: 新的Uniswap V3公式

📏 Tick配置:
  - Fee: 0.05% (tickSpacing: 10)
  - 初始tick到最低tick的距离: 16090
  - 初始tick到最高tick的距离: 20440
  - 总tick范围: 36530
  - 验证价格:
    • 最低价格 = 1.0001^-130280 = 0.00000220
    • 初始价格 = 1.0001^-114190 = 0.00001099
    • 最高价格 = 1.0001^-93750 = 0.00008486
===================================

�� 准备添加流动性: {
  tokenAddress: '0x05c192e9e7F6B4eBB9186b9186051C56d3C9bDfF',
  tokenAmount: '10000000000',
  xaaAmount: '95000',
  priceRange: {
    initial: 0.000011000000000000001,
    min: 0.0000022000000000000005,
    max: 0.00008490883774736598
  }
}

========== 流动性参数验证 ==========
📊 代币信息:
  - 代币地址: 0x05c192e9e7F6B4eBB9186b9186051C56d3C9bDfF
  - 代币数量: 10000000000
  - XAA数量: 95000

💰 价格设置:
  - 初始价格: 0.000011000000000000001
  - 最小价格: 0.0000022000000000000005 (20.0% of initial)
  - 最大价格: 0.00008490883774736598 (771.9% of initial)
❌ 池子操作失败: Error: test
    at PoolManager.addLiquidity (webpack-internal:///(rsc)/./src/lib/pool-manager/index.ts:625:19)
    at LiquidityDistributionManager.distributeLiquidity (webpack-internal:///(rsc)/./src/lib/token-distribution/liquidity-distribution.ts:285:51)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async addLiquidityToPool (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:176:24)
    at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:686:41)
    at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1222:20)
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24)
❌ 流动性分发失败: Error: test
    at LiquidityDistributionManager.distributeLiquidity (webpack-internal:///(rsc)/./src/lib/token-distribution/liquidity-distribution.ts:287:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async addLiquidityToPool (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:176:24)
    at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:686:41)
    at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1222:20)
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24)
❌ 流动性添加失败: test
💧 流动性添加结果: ❌ 失败 - Hash: N/A
📊 所有分配交易执行完成，共 4 笔交易
🔍 [DEBUG] 检查交易结果...
🔍 [DEBUG] 📊 分配结果汇总:
🔍 [DEBUG]   - 总交易数: 4
🔍 [DEBUG]   - 成功交易: 3 ✅
🔍 [DEBUG]   - 待确认交易: 0 ⏳
🔍 [DEBUG]   - 失败交易: 1 ❌
🔍 [DEBUG]   - 最终状态: PARTIAL_FAILED
🔍 [DEBUG] 所有交易详情:
🔍 [DEBUG]   1. creator - confirmed - 33000000000 -> 0xde184a6809898d81186def5c0823d2107c001da2
🔍 [DEBUG]      Hash: 0x80e1f36d8ea4ca158d4547931cb908bc799633adb57cdf97a545b57360faa783
🔍 [DEBUG]   2. airdrop - confirmed - 2000000000 -> 0x8ef54e57dFB0b84Eb909072B699057Ef9517704a
🔍 [DEBUG]      Hash: 0xd93be2bd1249bcbf7f0f6abeaa43361a308ce71f18e45e4004d28398e1689a51
🔍 [DEBUG]   3. mining - confirmed - 40000000000 -> 0x6B0B8F74aaCe9731a2f5fc45c64bbd72075dBfDB
🔍 [DEBUG]      Hash: 0xe3d5c2f6446675f6eed2f6345b1f98cb81fda92427d0e928612d4cc2508097ff
🔍 [DEBUG]   4. liquidity - failed - 10000000000 -> null
🔍 [DEBUG]      Hash: N/A
🔍 [DEBUG]      错误: test
🔍 [DEBUG]   1. liquidity - 10000000000 -> null
🔍 [DEBUG]      错误: test
🔍 [DEBUG] 💾 更新数据库任务状态: PARTIAL_FAILED
🔍 [DEBUG] 更新任务状态 - ID: 2fb2ee14-c6fd-494f-98f0-a25824a4b04e, Status: PARTIAL_FAILED
✅ 任务状态已更新: 2fb2ee14-c6fd-494f-98f0-a25824a4b04e -> PARTIAL_FAILED
🔍 [DEBUG] ⚠️ 代币分配部分失败 - 共执行 4 笔交易，1 笔失败
🔍 [DEBUG] 最终返回结果: {
  success: false,
  taskId: '2fb2ee14-c6fd-494f-98f0-a25824a4b04e',
  data: {
    transactions: [ [Object], [Object], [Object], [Object] ],
    totalDistributed: '100000000000'
  },
  error: '1 transactions failed'
}
🔍 [DEBUG] distributeTokens 返回结果: {
  success: false,
  taskId: '2fb2ee14-c6fd-494f-98f0-a25824a4b04e',
  data: {
    transactions: [ [Object], [Object], [Object], [Object] ],
    totalDistributed: '100000000000'
  },
  error: '1 transactions failed'
}
📊 代币分发任务完成，状态: PARTIAL_FAILED
🔍 [DEBUG] ✅ 代币分配流程完成
� [DEBUG] �📊 分配结果摘要:
🔍 [DEBUG]   - 任务ID: 2fb2ee14-c6fd-494f-98f0-a25824a4b04e
🔍 [DEBUG]   - 交易数量: 4
🔍 [DEBUG]   - 分配总量: 100000000000
🔍 [DEBUG]   - 最终状态: PARTIAL_FAILED
 ○ Compiling /api/user/profile ...
 ✓ Compiled /api/user/profile in 822ms (5520 modules)
 ○ Compiling /favicon.ico ...
 ✓ Compiled /favicon.ico in 1366ms (10839 modules)
TypeError: fetch failed
    at node:internal/deps/undici/undici:13510:13
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5) {
  [cause]: ConnectTimeoutError: Connect Timeout Error (attempted addresses: 2606:4700::6812:13ed:443, timeout: 10000ms)
      at onConnectTimeout (node:internal/deps/undici/undici:2602:28)
      at Immediate._onImmediate (node:internal/deps/undici/undici:2568:35)
      at process.processImmediate (node:internal/timers:485:21)
      at process.callbackTrampoline (node:internal/async_hooks:130:17) {
    code: 'UND_ERR_CONNECT_TIMEOUT'
  }
}
TypeError: fetch failed
    at node:internal/deps/undici/undici:13510:13
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5) {
  [cause]: ConnectTimeoutError: Connect Timeout Error (attempted addresses: 2606:4700::6812:13ed:443, timeout: 10000ms)
      at onConnectTimeout (node:internal/deps/undici/undici:2602:28)
      at Immediate._onImmediate (node:internal/deps/undici/undici:2568:35)
      at process.processImmediate (node:internal/timers:485:21)
      at process.callbackTrampoline (node:internal/async_hooks:130:17) {
    code: 'UND_ERR_CONNECT_TIMEOUT'
  }
}
 ⨯ unhandledRejection: TypeError: fetch failed
    at node:internal/deps/undici/undici:13510:13
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5) {
  [cause]: ConnectTimeoutError: Connect Timeout Error (attempted addresses: 2606:4700::6812:13ed:443, timeout: 10000ms)
      at onConnectTimeout (node:internal/deps/undici/undici:2602:28)
      at Immediate._onImmediate (node:internal/deps/undici/undici:2568:35)
      at process.processImmediate (node:internal/timers:485:21)
      at process.callbackTrampoline (node:internal/async_hooks:130:17) {
    code: 'UND_ERR_CONNECT_TIMEOUT'
  }
}
 ⨯ unhandledRejection: TypeError: fetch failed
    at node:internal/deps/undici/undici:13510:13
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5) {
  [cause]: ConnectTimeoutError: Connect Timeout Error (attempted addresses: 2606:4700::6812:13ed:443, timeout: 10000ms)
      at onConnectTimeout (node:internal/deps/undici/undici:2602:28)
      at Immediate._onImmediate (node:internal/deps/undici/undici:2568:35)
      at process.processImmediate (node:internal/timers:485:21)
      at process.callbackTrampoline (node:internal/async_hooks:130:17) {
    code: 'UND_ERR_CONNECT_TIMEOUT'
  }
}
 ✓ Compiled /api/agents/[id] in 474ms (5552 modules)
 ✓ Compiled /api/auth/wallet-connect-no-sig in 0ms (5552 modules)
 ✓ Compiled in 0ms (5642 modules)
Wallet connect no signature request: { address: '0xde184a6809898d81186def5c0823d2107c001da2' }
User: {
  id: 'a136cf7d-7054-46d1-876e-90ac458ea7f3',
  address: '0xde184a6809898d81186def5c0823d2107c001da2',
  nickname: null,
  avatar: null,
  createdAt: 2025-06-27T07:47:15.548Z,
  updatedAt: 2025-06-27T07:47:15.548Z,
  preferences: null
}
[Agent详情API] 管理状态字段: {
  tokensDistributed: false,
  liquidityAdded: false,
  tokensBurned: false,
  ownerTransferred: false,
  miningOwnerTransferred: false
}
[Agent详情API] tokensDistributed类型: boolean, 值: false
[Agent详情状态计算] Agent: testm (62a14d96-69f3-485f-a41c-f2cf3679797b)
[Agent详情状态计算] 原始状态: TBA
[Agent详情状态计算] 当前时间戳: 1752848991 (2025-07-18T14:29:51.000Z)
[Agent详情状态计算] IAO开始时间: 1752933650 (2025-07-19T14:00:50.000Z)
[Agent详情状态计算] IAO结束时间: 1753192850 (2025-07-22T14:00:50.000Z)
[Agent详情状态计算] 代币地址: 0x05c192e9e7F6B4eBB9186b9186051C56d3C9bDfF
[Agent详情状态计算] 测试环境: false
[Agent详情状态计算] IAO还未开始，状态: IAO_COMING_SOON
[Agent详情状态计算] 最终状态: IAO_COMING_SOON
[Agent详情状态计算] ==========================================
[Agent详情API] 管理状态字段: {
  tokensDistributed: false,
  liquidityAdded: false,
  tokensBurned: false,
  ownerTransferred: false,
  miningOwnerTransferred: false
}
[Agent详情API] tokensDistributed类型: boolean, 值: false
[Agent详情状态计算] Agent: testm (62a14d96-69f3-485f-a41c-f2cf3679797b)
[Agent详情状态计算] 原始状态: TBA
[Agent详情状态计算] 当前时间戳: 1752848992 (2025-07-18T14:29:52.000Z)
[Agent详情状态计算] IAO开始时间: 1752933650 (2025-07-19T14:00:50.000Z)
[Agent详情状态计算] IAO结束时间: 1753192850 (2025-07-22T14:00:50.000Z)
[Agent详情状态计算] 代币地址: 0x05c192e9e7F6B4eBB9186b9186051C56d3C9bDfF
[Agent详情状态计算] 测试环境: false
[Agent详情状态计算] IAO还未开始，状态: IAO_COMING_SOON
[Agent详情状态计算] 最终状态: IAO_COMING_SOON
[Agent详情状态计算] ==========================================
 ✓ Compiled /api/agents/[id]/tasks in 461ms (5644 modules)
 ✓ Compiled in 837ms (5288 modules)
[Agent详情API] 管理状态字段: {
  tokensDistributed: false,
  liquidityAdded: false,
  tokensBurned: false,
  ownerTransferred: false,
  miningOwnerTransferred: false
}
[Agent详情API] tokensDistributed类型: boolean, 值: false
[Agent详情状态计算] Agent: testm (62a14d96-69f3-485f-a41c-f2cf3679797b)
[Agent详情状态计算] 原始状态: TBA
[Agent详情状态计算] 当前时间戳: 1752849166 (2025-07-18T14:32:46.000Z)
[Agent详情状态计算] IAO开始时间: 1752933650 (2025-07-19T14:00:50.000Z)
[Agent详情状态计算] IAO结束时间: 1753192850 (2025-07-22T14:00:50.000Z)
[Agent详情状态计算] 代币地址: 0x05c192e9e7F6B4eBB9186b9186051C56d3C9bDfF
[Agent详情状态计算] 测试环境: false
[Agent详情状态计算] IAO还未开始，状态: IAO_COMING_SOON
[Agent详情状态计算] 最终状态: IAO_COMING_SOON
[Agent详情状态计算] ==========================================
 ○ Compiling /api/token/distribute ...
 ✓ Compiled /api/token/distribute in 1228ms (6038 modules)
🔄 开始重试任务: 2fb2ee14-c6fd-494f-98f0-a25824a4b04e
🔄 开始重试任务: 2fb2ee14-c6fd-494f-98f0-a25824a4b04e
✅ 找到任务: {
  id: '2fb2ee14-c6fd-494f-98f0-a25824a4b04e',
  type: 'DISTRIBUTE_TOKENS',
  status: 'PARTIAL_FAILED',
  agentId: '62a14d96-69f3-485f-a41c-f2cf3679797b'
}
🪙 从 Agent 表获取代币地址: 0x05c192e9e7F6B4eBB9186b9186051C56d3C9bDfF
🔄 应用合并逻辑获取完整交易历史...
🔄 开始合并分发任务: 2
  处理任务 1/2: ID=2fb2ee14-c6fd-494f-98f0-a25824a4b04e, Status=PARTIAL_FAILED
    - 找到 4 个交易记录
      📝 记录新交易: creator - confirmed
      📝 记录新交易: airdrop - confirmed
      📝 记录新交易: mining - confirmed
      📝 记录新交易: liquidity - failed
  处理任务 2/2: ID=03120299-4167-4e94-82cc-39d255b95f36, Status=PARTIAL_FAILED
    - 找到 4 个交易记录
      ⭐ 用成功交易覆盖: creator
      ⭐ 用成功交易覆盖: airdrop
      ⭐ 用成功交易覆盖: mining
🎯 合并完成: 4 个交易，3 成功，1 失败
📋 合并后获得 4 个交易记录
🪙 任务代币地址: 0x05c192e9e7F6B4eBB9186b9186051C56d3C9bDfF
📋 交易详情: [
  { type: 'creator', status: 'confirmed', amount: '33000000000' },
  { type: 'airdrop', status: 'confirmed', amount: '2000000000' },
  { type: 'mining', status: 'confirmed', amount: '40000000000' },
  { type: 'liquidity', status: 'failed', amount: '10000000000' }
]
🔄 智能重试 1 笔失败的交易
✅ 跳过 3 笔已成功的交易
🔄 重试 liquidity 交易: 10000000000 -> null
🔄 重试流动性添加: 10000000000 代币
🏊 开始添加流动性 - 代币: 0x05c192e9e7F6B4eBB9186b9186051C56d3C9bDfF, 数量: 10000000000
[Agent详情API] 管理状态字段: {
  tokensDistributed: false,
  liquidityAdded: false,
  tokensBurned: false,
  ownerTransferred: false,
  miningOwnerTransferred: false
}
[Agent详情API] tokensDistributed类型: boolean, 值: false
[Agent详情状态计算] Agent: testm (62a14d96-69f3-485f-a41c-f2cf3679797b)
[Agent详情状态计算] 原始状态: TBA
[Agent详情状态计算] 当前时间戳: 1752849177 (2025-07-18T14:32:57.000Z)
[Agent详情状态计算] IAO开始时间: 1752933650 (2025-07-19T14:00:50.000Z)
[Agent详情状态计算] IAO结束时间: 1753192850 (2025-07-22T14:00:50.000Z)
[Agent详情状态计算] 代币地址: 0x05c192e9e7F6B4eBB9186b9186051C56d3C9bDfF
[Agent详情状态计算] 测试环境: false
[Agent详情状态计算] IAO还未开始，状态: IAO_COMING_SOON
[Agent详情状态计算] 最终状态: IAO_COMING_SOON
[Agent详情状态计算] ==========================================
🚀 开始流动性分发...
📊 Agent ID: 62a14d96-69f3-485f-a41c-f2cf3679797b
🪙 代币地址: 0x05c192e9e7F6B4eBB9186b9186051C56d3C9bDfF
📈 总供应量: 100000000000
🧮 计算流动性参数 - 总供应量: 100000000000, IAO合约: 0xec71FAC1290bb8dd67c80ac47A4468adff53fE54
🔍 查询IAO合约中的总投入XAA数量 - 合约地址: 0xec71FAC1290bb8dd67c80ac47A4468adff53fE54
🏦 IAO合约地址: 0xec71FAC1290bb8dd67c80ac47A4468adff53fE54
✅ 查询到总投入XAA数量: 99999.99999999999 XAA (100000000000000000000000 wei)
🔧 四舍五入后的XAA数量: 100000 XAA

✅ 验证计算结果:
  - 从XAA计算的流动性L: 51,816,718.902
  - 从代币计算的流动性L: 51,816,718.902
  - XAA误差: 0.000000%
  - 代币误差: 0.000000%
  - 价格倍数: 7.72x (相对于初始价格)
  - 总价格范围: 38.59x

========== 流动性价格配置 ==========
💰 代币数量:
  - 总供应量: 100000000000
  - IAO代币数量(15%): 15000000000
  - 流动性代币数量(10%): 10000000000
  - 原始XAA数量: 100000
  - 价格计算用XAA数量(100%): 100000
  - 实际使用XAA数量(95%): 95000

💰 价格计算:
  - 计算公式: XAA数量 / IAO代币数量
  - 基础价格 = 100000 / 15000000000 = 0.00001
  - 调整价格 = 0.00001 * 1.1 = 0.000011000000000000001

💰 价格和Tick设置:
  - 基础初始价格: 0.00001000
  - 调整后初始价格: 0.00001100 (1.1x of base)
    • 原始tick: -114182
    • 对齐后tick: -114190 (spacing: 10)
  - 最低价格: 0.00000220 (20.0% of initial)
    • 原始tick: -130278
    • 对齐后tick: -130280 (spacing: 10)
  - 最高价格: 0.00008491 (7.72x of initial)
    • 原始tick: -93745
    • 对齐后tick: -93750 (spacing: 10)
  - 计算方法: 新的Uniswap V3公式

📏 Tick配置:
  - Fee: 0.05% (tickSpacing: 10)
  - 初始tick到最低tick的距离: 16090
  - 初始tick到最高tick的距离: 20440
  - 总tick范围: 36530
  - 验证价格:
    • 最低价格 = 1.0001^-130280 = 0.00000220
    • 初始价格 = 1.0001^-114190 = 0.00001099
    • 最高价格 = 1.0001^-93750 = 0.00008486
===================================

�� 准备添加流动性: {
  tokenAddress: '0x05c192e9e7F6B4eBB9186b9186051C56d3C9bDfF',
  tokenAmount: '10000000000',
  xaaAmount: '95000',
  priceRange: {
    initial: 0.000011000000000000001,
    min: 0.0000022000000000000005,
    max: 0.00008490883774736598
  }
}

========== 流动性参数验证 ==========
📊 代币信息:
  - 代币地址: 0x05c192e9e7F6B4eBB9186b9186051C56d3C9bDfF
  - 代币数量: 10000000000
  - XAA数量: 95000

💰 价格设置:
  - 初始价格: 0.000011000000000000001
  - 最小价格: 0.0000022000000000000005 (20.0% of initial)
  - 最大价格: 0.00008490883774736598 (771.9% of initial)
💰 开始检查余额...
  - 代币地址: 0x05c192e9e7F6B4eBB9186b9186051C56d3C9bDfF
  - 需要代币数量: 10000000000
  - 需要XAA数量: 95000
  - 钱包地址: 0x417Dd0DDAA54E651e304A12c9810173F57876159
💰 余额检查结果:
  - 代币余额: 10000000000 (需要: 10000000000) ✅
  - XAA余额: 577757.276870014134689602 (需要: 95000) ✅
✅ 池子地址: 0xb6Bfb72972f8f600Ae471Ae0301ff2d0d4d8B3e1
🏗️ 使用Uniswap价格初始化池子:
  - Uniswap价格: 0.000011000000000000001
  - 初始tick: -114182
  - sqrt价格: 0.003316601834597691
  - sqrtPriceX96: 262768269146613117263806464
💰 池子价格范围计算:
  - 初始价格: 0.000011000000000000001
  - 最小价格 (20%): 0.0000022000000000000005
  - 最大价格 (500%): 0.00005500000000000001
✅ 池子初始化完成
✅ 池子初始化完成
📝 开始授权代币给Position Manager...
✅ 代币授权交易已提交: 0x5fe0dbab9608a95de759c0b458fa6815e5a031faf86ca0893b3d685d01d8f2db
⏳ 等待代币授权交易确认...
✅ 代币授权确认完成
📊 代币授权区块号: 3112936
📊 代币授权Gas使用: 184240
🔍 检查XAA授权前状态...
💰 当前XAA授权额度: 6.490328662838577136
🔄 重置XAA授权额度为0...
✅ XAA授权重置完成
📝 开始授权XAA代币...
🔍 XAA代币地址: 0x8a88a1D2bD0a13BA245a4147b7e11Ef1A9d15C8a
🔍 Position Manager地址: 0xfCE792dd602fA70143e43e7556e8a92D762bA9FC
🔍 授权数量: 95000 XAA
🔍 钱包地址: 0x417Dd0DDAA54E651e304A12c9810173F57876159
✅ XAA授权交易已提交: 0xb7651efed1ef5ebfe50e68383895c5263dbff7d582e17c1d738c3d8222bcaaf2
⏳ 等待XAA授权交易确认...
⏳ 等待XAA授权交易确认...
✅ XAA授权确认完成
📊 XAA授权区块号: 3112938
📊 XAA授权Gas使用: 203882
✅ 代币授权完成
📊 价格范围设置:
  - 最小价格: 0.0000022000000000000005 -> tick: -130280
  - 最大价格: 0.00008490883774736598 -> tick: -93750
  - tick范围: 36530 ticks
🔍 池子状态查询:
  - 池子地址: 0xb6Bfb72972f8f600Ae471Ae0301ff2d0d4d8B3e1
  - sqrtPriceX96: 262768269146613117263806464
  - 当前tick: -114182
✅ 流动性添加完成
✅ 流动性分发完成
🏊 池子地址: 0xb6Bfb72972f8f600Ae471Ae0301ff2d0d4d8B3e1
📝 交易哈希: 0x08b628c3406e7a3210b863401d3695578bb81d5d2f1bda0e13ecd590350ccc36
✅ 流动性添加成功 - 池子: 0xb6Bfb72972f8f600Ae471Ae0301ff2d0d4d8B3e1, 交易: 0x08b628c3406e7a3210b863401d3695578bb81d5d2f1bda0e13ecd590350ccc36
✅ liquidity 重试结果: confirmed
📊 重试结果汇总:
  - 重试交易: 1
  - 重试成功: 1
  - 仍然失败: 0
🔍 [DEBUG] 更新任务状态 - ID: 2fb2ee14-c6fd-494f-98f0-a25824a4b04e, Status: COMPLETED
✅ 任务状态已更新: 2fb2ee14-c6fd-494f-98f0-a25824a4b04e -> COMPLETED
✅ 重试完成
[Agent详情API] 管理状态字段: {
  tokensDistributed: true,
  liquidityAdded: true,
  tokensBurned: false,
  ownerTransferred: false,
  miningOwnerTransferred: false
}
[Agent详情API] tokensDistributed类型: boolean, 值: true
[Agent详情状态计算] Agent: testm (62a14d96-69f3-485f-a41c-f2cf3679797b)
[Agent详情状态计算] 原始状态: TBA
[Agent详情状态计算] 当前时间戳: 1752849226 (2025-07-18T14:33:46.000Z)
[Agent详情状态计算] IAO开始时间: 1752933650 (2025-07-19T14:00:50.000Z)
[Agent详情状态计算] IAO结束时间: 1753192850 (2025-07-22T14:00:50.000Z)
[Agent详情状态计算] 代币地址: 0x05c192e9e7F6B4eBB9186b9186051C56d3C9bDfF
[Agent详情状态计算] 测试环境: false
[Agent详情状态计算] IAO还未开始，状态: IAO_COMING_SOON
[Agent详情状态计算] 最终状态: IAO_COMING_SOON
[Agent详情状态计算] ==========================================
 ○ Compiling /api/agents/[id]/burn-xaa ...
 ✓ Compiled /api/agents/[id]/burn-xaa in 795ms (6034 modules)
🔥 收到XAA销毁请求...
🔐 验证用户权限...
✅ 权限验证通过 - 用户: 0xde184a6809898d81186def5c0823d2107c001da2, Agent: testm
✅ 任务创建成功，任务ID: 4dd8d6bb-b3e1-4813-9503-3e639a07efae
[XAA销毁] 开始为Agent 62a14d96-69f3-485f-a41c-f2cf3679797b 销毁XAA...
[XAA销毁] IAO合约地址: 0xec71FAC1290bb8dd67c80ac47A4468adff53fE54
🔥 开始执行XAA销毁...
🔥 开始XAA销毁流程...
📍 IAO合约地址: 0xec71FAC1290bb8dd67c80ac47A4468adff53fE54
🔍 查询IAO合约 0xec71FAC1290bb8dd67c80ac47A4468adff53fE54 中的XAA总量...
✅ 查询到IAO中XAA总量: 99999.99999999999 XAA (100000000000000000000000 wei)
📊 IAO中XAA总量: 99999.99999999999 XAA
🔥 计算销毁数量: 5000 XAA (5%)
🔍 检查服务端钱包 0x417Dd0DDAA54E651e304A12c9810173F57876159 的XAA余额...
[Agent详情API] 管理状态字段: {
  tokensDistributed: true,
  liquidityAdded: true,
  tokensBurned: false,
  ownerTransferred: false,
  miningOwnerTransferred: false
}
[Agent详情API] tokensDistributed类型: boolean, 值: true
[Agent详情状态计算] Agent: testm (62a14d96-69f3-485f-a41c-f2cf3679797b)
[Agent详情状态计算] 原始状态: TBA
[Agent详情状态计算] 当前时间戳: 1752849249 (2025-07-18T14:34:09.000Z)
[Agent详情状态计算] IAO开始时间: 1752933650 (2025-07-19T14:00:50.000Z)
[Agent详情状态计算] IAO结束时间: 1753192850 (2025-07-22T14:00:50.000Z)
[Agent详情状态计算] 代币地址: 0x05c192e9e7F6B4eBB9186b9186051C56d3C9bDfF
[Agent详情状态计算] 测试环境: false
[Agent详情状态计算] IAO还未开始，状态: IAO_COMING_SOON
[Agent详情状态计算] 最终状态: IAO_COMING_SOON
[Agent详情状态计算] ==========================================
💰 服务端钱包XAA余额: 482757.276870014134689602 XAA
🔥 执行XAA销毁 - 数量: 5000 XAA
📊 销毁数量详情: 5000 XAA
💰 销毁数量 (wei): 5000000000000000000000
🏦 XAA代币合约地址: 0x8a88a1D2bD0a13BA245a4147b7e11Ef1A9d15C8a
🔥 调用XAA合约burn方法 - 销毁 5000 XAA
📝 XAA burn交易已提交 - Hash: 0xcbf4d00bcc04df04432f5d31c06942a34e311dcc9ed84de86353d12bd6390b8c
✅ XAA销毁成功 - 已销毁 5000 XAA
✅ XAA销毁完成
🔥 销毁数量: 5000 XAA
📊 IAO总XAA: 99999.99999999999 XAA
📝 交易哈希: 0xcbf4d00bcc04df04432f5d31c06942a34e311dcc9ed84de86353d12bd6390b8c
✅ XAA销毁任务 4dd8d6bb-b3e1-4813-9503-3e639a07efae 完成成功
🔥 销毁数量: 5000 XAA
📊 IAO总XAA: 99999.99999999999 XAA
🔥 收到XAA销毁请求...
🔐 验证用户权限...
✅ 权限验证通过 - 用户: 0xde184a6809898d81186def5c0823d2107c001da2, Agent: testm
✅ 任务创建成功，任务ID: 189104f8-068a-44b2-ae8f-a3f492ee6879
[XAA销毁] 开始为Agent 62a14d96-69f3-485f-a41c-f2cf3679797b 销毁XAA...
[XAA销毁] IAO合约地址: 0xec71FAC1290bb8dd67c80ac47A4468adff53fE54
🔥 开始执行XAA销毁...
🔥 开始XAA销毁流程...
📍 IAO合约地址: 0xec71FAC1290bb8dd67c80ac47A4468adff53fE54
🔍 查询IAO合约 0xec71FAC1290bb8dd67c80ac47A4468adff53fE54 中的XAA总量...
✅ 查询到IAO中XAA总量: 99999.99999999999 XAA (100000000000000000000000 wei)
📊 IAO中XAA总量: 99999.99999999999 XAA
🔥 计算销毁数量: 5000 XAA (5%)
🔍 检查服务端钱包 0x417Dd0DDAA54E651e304A12c9810173F57876159 的XAA余额...
[Agent详情API] 管理状态字段: {
  tokensDistributed: true,
  liquidityAdded: true,
  tokensBurned: true,
  ownerTransferred: false,
  miningOwnerTransferred: false
}
[Agent详情API] tokensDistributed类型: boolean, 值: true
[Agent详情状态计算] Agent: testm (62a14d96-69f3-485f-a41c-f2cf3679797b)
[Agent详情状态计算] 原始状态: TBA
[Agent详情状态计算] 当前时间戳: 1752849283 (2025-07-18T14:34:43.000Z)
[Agent详情状态计算] IAO开始时间: 1752933650 (2025-07-19T14:00:50.000Z)
[Agent详情状态计算] IAO结束时间: 1753192850 (2025-07-22T14:00:50.000Z)
[Agent详情状态计算] 代币地址: 0x05c192e9e7F6B4eBB9186b9186051C56d3C9bDfF
[Agent详情状态计算] 测试环境: false
[Agent详情状态计算] IAO还未开始，状态: IAO_COMING_SOON
[Agent详情状态计算] 最终状态: IAO_COMING_SOON
[Agent详情状态计算] ==========================================
💰 服务端钱包XAA余额: 477757.276870014134689602 XAA
🔥 执行XAA销毁 - 数量: 5000 XAA
📊 销毁数量详情: 5000 XAA
💰 销毁数量 (wei): 5000000000000000000000
🏦 XAA代币合约地址: 0x8a88a1D2bD0a13BA245a4147b7e11Ef1A9d15C8a
🔥 调用XAA合约burn方法 - 销毁 5000 XAA
📝 XAA burn交易已提交 - Hash: 0xf38f6a2cb566d6a8ba4f5f3fe6f82576ac7f9c1885276c72b61b9fccb220e764
✅ XAA销毁成功 - 已销毁 5000 XAA
✅ XAA销毁完成
🔥 销毁数量: 5000 XAA
📊 IAO总XAA: 99999.99999999999 XAA
📝 交易哈希: 0xf38f6a2cb566d6a8ba4f5f3fe6f82576ac7f9c1885276c72b61b9fccb220e764
✅ XAA销毁任务 189104f8-068a-44b2-ae8f-a3f492ee6879 完成成功
🔥 销毁数量: 5000 XAA
📊 IAO总XAA: 99999.99999999999 XAA
 ✓ Compiled in 838ms (5288 modules)
[Agent详情API] 管理状态字段: {
  tokensDistributed: true,
  liquidityAdded: true,
  tokensBurned: true,
  ownerTransferred: false,
  miningOwnerTransferred: false
}
[Agent详情API] tokensDistributed类型: boolean, 值: true
[Agent详情状态计算] Agent: testm (62a14d96-69f3-485f-a41c-f2cf3679797b)
[Agent详情状态计算] 原始状态: TBA
[Agent详情状态计算] 当前时间戳: 1752850760 (2025-07-18T14:59:20.000Z)
[Agent详情状态计算] IAO开始时间: 1752933650 (2025-07-19T14:00:50.000Z)
[Agent详情状态计算] IAO结束时间: 1753192850 (2025-07-22T14:00:50.000Z)
[Agent详情状态计算] 代币地址: 0x05c192e9e7F6B4eBB9186b9186051C56d3C9bDfF
[Agent详情状态计算] 测试环境: false
[Agent详情状态计算] IAO还未开始，状态: IAO_COMING_SOON
[Agent详情状态计算] 最终状态: IAO_COMING_SOON
[Agent详情状态计算] ==========================================
 ✓ Compiled in 424ms (5288 modules)
[Agent详情API] 管理状态字段: {
  tokensDistributed: true,
  liquidityAdded: true,
  tokensBurned: true,
  ownerTransferred: false,
  miningOwnerTransferred: false
}
[Agent详情API] tokensDistributed类型: boolean, 值: true
[Agent详情状态计算] Agent: testm (62a14d96-69f3-485f-a41c-f2cf3679797b)
[Agent详情状态计算] 原始状态: TBA
[Agent详情状态计算] 当前时间戳: 1752850763 (2025-07-18T14:59:23.000Z)
[Agent详情状态计算] IAO开始时间: 1752933650 (2025-07-19T14:00:50.000Z)
[Agent详情状态计算] IAO结束时间: 1753192850 (2025-07-22T14:00:50.000Z)
[Agent详情状态计算] 代币地址: 0x05c192e9e7F6B4eBB9186b9186051C56d3C9bDfF
[Agent详情状态计算] 测试环境: false
[Agent详情状态计算] IAO还未开始，状态: IAO_COMING_SOON
[Agent详情状态计算] 最终状态: IAO_COMING_SOON
[Agent详情状态计算] ==========================================
 ✓ Compiled in 796ms (5288 modules)
[Agent详情API] 管理状态字段: {
  tokensDistributed: true,
  liquidityAdded: true,
  tokensBurned: true,
  ownerTransferred: false,
  miningOwnerTransferred: false
}
[Agent详情API] tokensDistributed类型: boolean, 值: true
[Agent详情状态计算] Agent: testm (62a14d96-69f3-485f-a41c-f2cf3679797b)
[Agent详情状态计算] 原始状态: TBA
[Agent详情状态计算] 当前时间戳: 1752850971 (2025-07-18T15:02:51.000Z)
[Agent详情状态计算] IAO开始时间: 1752933650 (2025-07-19T14:00:50.000Z)
[Agent详情状态计算] IAO结束时间: 1753192850 (2025-07-22T14:00:50.000Z)
[Agent详情状态计算] 代币地址: 0x05c192e9e7F6B4eBB9186b9186051C56d3C9bDfF
[Agent详情状态计算] 测试环境: false
[Agent详情状态计算] IAO还未开始，状态: IAO_COMING_SOON
[Agent详情状态计算] 最终状态: IAO_COMING_SOON
[Agent详情状态计算] ==========================================
 ○ Compiling /favicon.ico ...
 ✓ Compiled /favicon.ico in 797ms (5551 modules)
 ✓ Compiled /api/auth/wallet-connect-no-sig in 449ms (5641 modules)
Wallet connect no signature request: { address: '0xde184a6809898d81186def5c0823d2107c001da2' }
User: {
  id: 'a136cf7d-7054-46d1-876e-90ac458ea7f3',
  address: '0xde184a6809898d81186def5c0823d2107c001da2',
  nickname: null,
  avatar: null,
  createdAt: 2025-06-27T07:47:15.548Z,
  updatedAt: 2025-06-27T07:47:15.548Z,
  preferences: null
}
 ○ Compiling /api/image ...
 ✓ Compiled /api/image in 1625ms (5760 modules)
Success: https://xaiagent.oss-ap-northeast-2.aliyuncs.com/chat/1752851077650_c6urach.jpg
 ○ Compiling /api/agents/new ...
 ✓ Compiled /api/agents/new in 761ms (6231 modules)
🔧 事件监听器配置: {
  environment: 'development',
  chainId: 19880818,
  chainName: 'DeepBrainChain Mainnet',
  rpcUrl: 'https://rpc2.dbcwallet.io...'
}
📅 接收到的时间参数: {
  startTimestamp: 1752937384,
  durationHours: 72,
  startTimestampType: 'number',
  durationHoursType: 'number',
  startTimestampDate: '2025-07-19T15:03:04.000Z',
  calculatedEndTime: '2025-07-22T15:03:04.000Z'
}
[Agent创建] 开始处理Agent fb051b0c-d4fd-4081-91bd-1269b906f9a4 的创建任务...
[Agent创建] 找到Agent信息:
[Agent创建] - 名称: testn
[Agent创建] - 创建者: 0xde184a6809898d81186def5c0823d2107c001da2
[Agent创建] - Symbol: TESTN
[IAO部署] 开始部署IAO合约...
[IAO部署] 参数信息:
[IAO部署] - 持续时间: 72小时
[IAO部署] - 开始时间: 1752937384
[IAO部署] - 奖励数量: 2000000000000000000000000000
[IAO部署] - 所有者地址: 0xde184a6809898d81186def5c0823d2107c001da2
[IAO部署] 计算的奖励数量: 15000000000 (15000000000000000474191233024 Wei)
 ○ Compiling /api/agents/[id] ...
 ✓ Compiled /api/agents/[id] in 798ms (5446 modules)
[Agent详情API] 管理状态字段: {
  tokensDistributed: false,
  liquidityAdded: false,
  tokensBurned: false,
  ownerTransferred: false,
  miningOwnerTransferred: false
}
[Agent详情API] tokensDistributed类型: boolean, 值: false
[Agent详情状态计算] Agent: testn (fb051b0c-d4fd-4081-91bd-1269b906f9a4)
[Agent详情状态计算] 原始状态: CREATING
[Agent详情状态计算] 当前时间戳: 1752851169 (2025-07-18T15:06:09.000Z)
[Agent详情状态计算] IAO开始时间: null (null)
[Agent详情状态计算] IAO结束时间: null (null)
[Agent详情状态计算] 代币地址: null
[Agent详情状态计算] 测试环境: false
[Agent详情状态计算] 没有IAO时间信息，返回原状态: CREATING
 ○ Compiling /api/agents/[id]/tasks ...
 ✓ Compiled /api/agents/[id]/tasks in 567ms (5523 modules)
[Agent详情API] 管理状态字段: {
  tokensDistributed: false,
  liquidityAdded: false,
  tokensBurned: false,
  ownerTransferred: false,
  miningOwnerTransferred: false
}
[Agent详情API] tokensDistributed类型: boolean, 值: false
[Agent详情状态计算] Agent: testn (fb051b0c-d4fd-4081-91bd-1269b906f9a4)
[Agent详情状态计算] 原始状态: CREATING
[Agent详情状态计算] 当前时间戳: 1752851172 (2025-07-18T15:06:12.000Z)
[Agent详情状态计算] IAO开始时间: null (null)
[Agent详情状态计算] IAO结束时间: null (null)
[Agent详情状态计算] 代币地址: null
[Agent详情状态计算] 测试环境: false
[Agent详情状态计算] 没有IAO时间信息，返回原状态: CREATING
IAO deployment response: {
  code: 200,
  message: 'Deployment successful',
  data: { proxy_address: '0xB2076716bC941D67431A2589c7cbA085D4b8b93E' }
}
[IAO部署] 部署成功:
[IAO部署] - IAO合约地址: 0xB2076716bC941D67431A2589c7cbA085D4b8b93E
[时间计算] 详细信息:
[时间计算] - 客户端传入 startTimestamp: 1752937384 (2025-07-19T15:03:04.000Z)
[时间计算] - 客户端传入 durationHours: 72
[时间计算] - 实际使用 startTimestamp: 1752937384 (2025-07-19T15:03:04.000Z)
[时间计算] - 实际使用 durationHours: 72
[时间计算] - 计算出的 endTimestamp: 1753196584 (2025-07-22T15:03:04.000Z)
[Agent更新] 开始更新Agent状态...
[Agent更新] IAO时间: 2025-07-19T15:03:04.000Z 到 2025-07-22T15:03:04.000Z
[Agent更新] Agent状态已更新为TBA，IAO时间已保存
[事件监听] 触发监听器重新加载...
🔄 手动触发: 重新加载合约监听器...
所有事件监听已停止
事件监听器正在重启中，跳过重复启动
✅ 事件监听器已成功重启
[完成] Agent创建流程完成
 ○ Compiling /favicon.ico ...
 ✓ Compiled /favicon.ico in 2.6s (10828 modules)
 ✓ Compiled /api/auth/wallet-connect-no-sig in 1ms (5552 modules)
 ✓ Compiled in 1526ms (10918 modules)
Wallet connect no signature request: { address: '0xde184a6809898d81186def5c0823d2107c001da2' }
User: {
  id: 'a136cf7d-7054-46d1-876e-90ac458ea7f3',
  address: '0xde184a6809898d81186def5c0823d2107c001da2',
  nickname: null,
  avatar: null,
  createdAt: 2025-06-27T07:47:15.548Z,
  updatedAt: 2025-06-27T07:47:15.548Z,
  preferences: null
}
[Agent详情API] 管理状态字段: {
  tokensDistributed: false,
  liquidityAdded: false,
  tokensBurned: false,
  ownerTransferred: false,
  miningOwnerTransferred: false
}
[Agent详情API] tokensDistributed类型: boolean, 值: false
[Agent详情状态计算] Agent: testn (fb051b0c-d4fd-4081-91bd-1269b906f9a4)
[Agent详情状态计算] 原始状态: TBA
[Agent详情状态计算] 当前时间戳: 1752851200 (2025-07-18T15:06:40.000Z)
[Agent详情状态计算] IAO开始时间: 1752937384 (2025-07-19T15:03:04.000Z)
[Agent详情状态计算] IAO结束时间: 1753196584 (2025-07-22T15:03:04.000Z)
[Agent详情状态计算] 代币地址: null
[Agent详情状态计算] 测试环境: false
[Agent详情状态计算] IAO还未开始，状态: IAO_COMING_SOON
[Agent详情状态计算] 最终状态: IAO_COMING_SOON
[Agent详情状态计算] ==========================================
[Agent详情API] 管理状态字段: {
  tokensDistributed: false,
  liquidityAdded: false,
  tokensBurned: false,
  ownerTransferred: false,
  miningOwnerTransferred: false
}
[Agent详情API] tokensDistributed类型: boolean, 值: false
[Agent详情状态计算] Agent: testn (fb051b0c-d4fd-4081-91bd-1269b906f9a4)
[Agent详情状态计算] 原始状态: TBA
[Agent详情状态计算] 当前时间戳: 1752851201 (2025-07-18T15:06:41.000Z)
[Agent详情状态计算] IAO开始时间: 1752937384 (2025-07-19T15:03:04.000Z)
[Agent详情状态计算] IAO结束时间: 1753196584 (2025-07-22T15:03:04.000Z)
[Agent详情状态计算] 代币地址: null
[Agent详情状态计算] 测试环境: false
[Agent详情状态计算] IAO还未开始，状态: IAO_COMING_SOON
[Agent详情状态计算] 最终状态: IAO_COMING_SOON
[Agent详情状态计算] ==========================================
 ✓ Compiled in 473ms (5290 modules)
[Agent详情API] 管理状态字段: {
  tokensDistributed: false,
  liquidityAdded: false,
  tokensBurned: false,
  ownerTransferred: false,
  miningOwnerTransferred: false
}
[Agent详情API] tokensDistributed类型: boolean, 值: false
[Agent详情状态计算] Agent: testn (fb051b0c-d4fd-4081-91bd-1269b906f9a4)
[Agent详情状态计算] 原始状态: TBA
[Agent详情状态计算] 当前时间戳: 1752851216 (2025-07-18T15:06:56.000Z)
[Agent详情状态计算] IAO开始时间: 1752937384 (2025-07-19T15:03:04.000Z)
[Agent详情状态计算] IAO结束时间: 1753196584 (2025-07-22T15:03:04.000Z)
[Agent详情状态计算] 代币地址: null
[Agent详情状态计算] 测试环境: false
[Agent详情状态计算] IAO还未开始，状态: IAO_COMING_SOON
[Agent详情状态计算] 最终状态: IAO_COMING_SOON
[Agent详情状态计算] ==========================================
 ○ Compiling /api/user/profile ...
 ✓ Compiled /api/user/profile in 1050ms (5525 modules)
 ✓ Compiled in 941ms (5288 modules)
[Agent详情API] 管理状态字段: {
  tokensDistributed: false,
  liquidityAdded: false,
  tokensBurned: false,
  ownerTransferred: false,
  miningOwnerTransferred: false
}
[Agent详情API] tokensDistributed类型: boolean, 值: false
[Agent详情状态计算] Agent: testn (fb051b0c-d4fd-4081-91bd-1269b906f9a4)
[Agent详情状态计算] 原始状态: TBA
[Agent详情状态计算] 当前时间戳: 1752851331 (2025-07-18T15:08:51.000Z)
[Agent详情状态计算] IAO开始时间: 1752937384 (2025-07-19T15:03:04.000Z)
[Agent详情状态计算] IAO结束时间: 1753196584 (2025-07-22T15:03:04.000Z)
[Agent详情状态计算] 代币地址: null
[Agent详情状态计算] 测试环境: false
[Agent详情状态计算] IAO还未开始，状态: IAO_COMING_SOON
[Agent详情状态计算] 最终状态: IAO_COMING_SOON
[Agent详情状态计算] ==========================================
 ✓ Compiled in 494ms (5288 modules)
[Agent详情API] 管理状态字段: {
  tokensDistributed: false,
  liquidityAdded: false,
  tokensBurned: false,
  ownerTransferred: false,
  miningOwnerTransferred: false
}
[Agent详情API] tokensDistributed类型: boolean, 值: false
[Agent详情状态计算] Agent: testn (fb051b0c-d4fd-4081-91bd-1269b906f9a4)
[Agent详情状态计算] 原始状态: TBA
[Agent详情状态计算] 当前时间戳: 1752851344 (2025-07-18T15:09:04.000Z)
[Agent详情状态计算] IAO开始时间: 1752937384 (2025-07-19T15:03:04.000Z)
[Agent详情状态计算] IAO结束时间: 1753196584 (2025-07-22T15:03:04.000Z)
[Agent详情状态计算] 代币地址: null
[Agent详情状态计算] 测试环境: false
[Agent详情状态计算] IAO还未开始，状态: IAO_COMING_SOON
[Agent详情状态计算] 最终状态: IAO_COMING_SOON
[Agent详情状态计算] ==========================================
 ✓ Compiled in 432ms (5288 modules)
[Agent详情API] 管理状态字段: {
  tokensDistributed: false,
  liquidityAdded: false,
  tokensBurned: false,
  ownerTransferred: false,
  miningOwnerTransferred: false
}
[Agent详情API] tokensDistributed类型: boolean, 值: false
[Agent详情状态计算] Agent: testn (fb051b0c-d4fd-4081-91bd-1269b906f9a4)
[Agent详情状态计算] 原始状态: TBA
[Agent详情状态计算] 当前时间戳: 1752851394 (2025-07-18T15:09:54.000Z)
[Agent详情状态计算] IAO开始时间: 1752937384 (2025-07-19T15:03:04.000Z)
[Agent详情状态计算] IAO结束时间: 1753196584 (2025-07-22T15:03:04.000Z)
[Agent详情状态计算] 代币地址: null
[Agent详情状态计算] 测试环境: false
[Agent详情状态计算] IAO还未开始，状态: IAO_COMING_SOON
[Agent详情状态计算] 最终状态: IAO_COMING_SOON
[Agent详情状态计算] ==========================================
 ○ Compiling /api/agents/[id]/update-iao-times ...
 ✓ Compiled /api/agents/[id]/update-iao-times in 1447ms (6035 modules)
[IAO时间更新] 开始为Agent fb051b0c-d4fd-4081-91bd-1269b906f9a4 更新IAO时间...
[IAO时间更新] - 名称: testn
[IAO时间更新] - 新开始时间: 2025-07-18T15:10:32.000Z
[IAO时间更新] - 新结束时间: 2025-07-21T15:10:32.000Z
[IAO时间更新] - 持续时间: 72小时
[IAO时间更新] - 使用IAO合约地址: 0xB2076716bC941D67431A2589c7cbA085D4b8b93E
🔧 初始化服务端钱包客户端...
✅ 服务端钱包初始化成功: 0x417Dd0DDAA54E651e304A12c9810173F57876159
[IAO时间更新] - 服务端钱包地址: 0x417Dd0DDAA54E651e304A12c9810173F57876159
[IAO时间更新] - 调用合约setTimeFor方法...
[IAO时间更新] - 交易已提交: 0x8bf3df4fcf5c004f7b0ca3fa9b3ba9586898f30b25774d9308a522e2d0a6043d
[IAO时间更新] - 交易成功: 0x8bf3df4fcf5c004f7b0ca3fa9b3ba9586898f30b25774d9308a522e2d0a6043d
[IAO时间更新] 数据库记录已更新
🔧 事件监听器配置: {
  environment: 'development',
  chainId: 19880818,
  chainName: 'DeepBrainChain Mainnet',
  rpcUrl: 'https://rpc2.dbcwallet.io...'
}
[事件监听] 触发监听器重新加载...
🔄 手动触发: 重新加载合约监听器...
所有事件监听已停止
事件监听器正在重启中，跳过重复启动
✅ 事件监听器已成功重启
[Agent详情API] 管理状态字段: {
  tokensDistributed: false,
  liquidityAdded: false,
  tokensBurned: false,
  ownerTransferred: false,
  miningOwnerTransferred: false
}
[Agent详情API] tokensDistributed类型: boolean, 值: false
[Agent详情状态计算] Agent: testn (fb051b0c-d4fd-4081-91bd-1269b906f9a4)
[Agent详情状态计算] 原始状态: TBA
[Agent详情状态计算] 当前时间戳: 1752851441 (2025-07-18T15:10:41.000Z)
[Agent详情状态计算] IAO开始时间: 1752851432 (2025-07-18T15:10:32.000Z)
[Agent详情状态计算] IAO结束时间: 1753110632 (2025-07-21T15:10:32.000Z)
[Agent详情状态计算] 代币地址: null
[Agent详情状态计算] 测试环境: false
[Agent详情状态计算] IAO进行中，状态: IAO_ONGOING
[Agent详情状态计算] 最终状态: IAO_ONGOING
[Agent详情状态计算] ==========================================
 ○ Compiling /api/user/profile ...
 ✓ Compiled /api/user/profile in 607ms (6037 modules)
 ✓ Compiled in 1604ms (10808 modules)
 ○ Compiling /api/agents/[id] ...
 ✓ Compiled /api/agents/[id] in 511ms (5523 modules)
[Agent详情API] 管理状态字段: {
  tokensDistributed: false,
  liquidityAdded: false,
  tokensBurned: false,
  ownerTransferred: false,
  miningOwnerTransferred: false
}
[Agent详情API] tokensDistributed类型: boolean, 值: false
[Agent详情状态计算] Agent: testn (fb051b0c-d4fd-4081-91bd-1269b906f9a4)
[Agent详情状态计算] 原始状态: TBA
[Agent详情状态计算] 当前时间戳: 1752851538 (2025-07-18T15:12:18.000Z)
[Agent详情状态计算] IAO开始时间: 1752851432 (2025-07-18T15:10:32.000Z)
[Agent详情状态计算] IAO结束时间: 1753110632 (2025-07-21T15:10:32.000Z)
[Agent详情状态计算] 代币地址: null
[Agent详情状态计算] 测试环境: false
[Agent详情状态计算] IAO进行中，状态: IAO_ONGOING
[Agent详情状态计算] 最终状态: IAO_ONGOING
[Agent详情状态计算] ==========================================
 ✓ Compiled /api/agents/[id]/tasks in 456ms (5525 modules)
 ✓ Compiled in 485ms (5288 modules)
[Agent详情API] 管理状态字段: {
  tokensDistributed: false,
  liquidityAdded: false,
  tokensBurned: false,
  ownerTransferred: false,
  miningOwnerTransferred: false
}
[Agent详情API] tokensDistributed类型: boolean, 值: false
[Agent详情状态计算] Agent: testn (fb051b0c-d4fd-4081-91bd-1269b906f9a4)
[Agent详情状态计算] 原始状态: TBA
[Agent详情状态计算] 当前时间戳: 1752851596 (2025-07-18T15:13:16.000Z)
[Agent详情状态计算] IAO开始时间: 1752851432 (2025-07-18T15:10:32.000Z)
[Agent详情状态计算] IAO结束时间: 1753110632 (2025-07-21T15:10:32.000Z)
[Agent详情状态计算] 代币地址: null
[Agent详情状态计算] 测试环境: false
[Agent详情状态计算] IAO进行中，状态: IAO_ONGOING
[Agent详情状态计算] 最终状态: IAO_ONGOING
[Agent详情状态计算] ==========================================
 ✓ Compiled in 531ms (5288 modules)
[Agent详情API] 管理状态字段: {
  tokensDistributed: false,
  liquidityAdded: false,
  tokensBurned: false,
  ownerTransferred: false,
  miningOwnerTransferred: false
}
[Agent详情API] tokensDistributed类型: boolean, 值: false
[Agent详情状态计算] Agent: testn (fb051b0c-d4fd-4081-91bd-1269b906f9a4)
[Agent详情状态计算] 原始状态: TBA
[Agent详情状态计算] 当前时间戳: 1752851638 (2025-07-18T15:13:58.000Z)
[Agent详情状态计算] IAO开始时间: 1752851432 (2025-07-18T15:10:32.000Z)
[Agent详情状态计算] IAO结束时间: 1753110632 (2025-07-21T15:10:32.000Z)
[Agent详情状态计算] 代币地址: null
[Agent详情状态计算] 测试环境: false
[Agent详情状态计算] IAO进行中，状态: IAO_ONGOING
[Agent详情状态计算] 最终状态: IAO_ONGOING
[Agent详情状态计算] ==========================================
[Agent详情API] 管理状态字段: {
  tokensDistributed: false,
  liquidityAdded: false,
  tokensBurned: false,
  ownerTransferred: false,
  miningOwnerTransferred: false
}
[Agent详情API] tokensDistributed类型: boolean, 值: false
[Agent详情状态计算] Agent: testn (fb051b0c-d4fd-4081-91bd-1269b906f9a4)
[Agent详情状态计算] 原始状态: TBA
[Agent详情状态计算] 当前时间戳: 1752851795 (2025-07-18T15:16:35.000Z)
[Agent详情状态计算] IAO开始时间: 1752851432 (2025-07-18T15:10:32.000Z)
[Agent详情状态计算] IAO结束时间: 1753110632 (2025-07-21T15:10:32.000Z)
[Agent详情状态计算] 代币地址: null
[Agent详情状态计算] 测试环境: false
[Agent详情状态计算] IAO进行中，状态: IAO_ONGOING
[Agent详情状态计算] 最终状态: IAO_ONGOING
[Agent详情状态计算] ==========================================
 ○ Compiling /favicon.ico ...
 ✓ Compiled /favicon.ico in 3.1s (10828 modules)
 ✓ Compiled /api/auth/wallet-connect-no-sig in 0ms (5552 modules)
 ✓ Compiled in 1450ms (10918 modules)
Wallet connect no signature request: { address: '0xde184a6809898d81186def5c0823d2107c001da2' }
User: {
  id: 'a136cf7d-7054-46d1-876e-90ac458ea7f3',
  address: '0xde184a6809898d81186def5c0823d2107c001da2',
  nickname: null,
  avatar: null,
  createdAt: 2025-06-27T07:47:15.548Z,
  updatedAt: 2025-06-27T07:47:15.548Z,
  preferences: null
}
[Agent详情API] 管理状态字段: {
  tokensDistributed: false,
  liquidityAdded: false,
  tokensBurned: false,
  ownerTransferred: false,
  miningOwnerTransferred: false
}
[Agent详情API] tokensDistributed类型: boolean, 值: false
[Agent详情状态计算] Agent: testn (fb051b0c-d4fd-4081-91bd-1269b906f9a4)
[Agent详情状态计算] 原始状态: TBA
[Agent详情状态计算] 当前时间戳: 1752851856 (2025-07-18T15:17:36.000Z)
[Agent详情状态计算] IAO开始时间: 1752851432 (2025-07-18T15:10:32.000Z)
[Agent详情状态计算] IAO结束时间: 1753110632 (2025-07-21T15:10:32.000Z)
[Agent详情状态计算] 代币地址: null
[Agent详情状态计算] 测试环境: false
[Agent详情状态计算] IAO进行中，状态: IAO_ONGOING
[Agent详情状态计算] 最终状态: IAO_ONGOING
[Agent详情状态计算] ==========================================
 ○ Compiling /api/agents/[id]/tasks ...
 ✓ Compiled /api/agents/[id]/tasks in 811ms (5644 modules)
[Agent详情API] 管理状态字段: {
  tokensDistributed: false,
  liquidityAdded: false,
  tokensBurned: false,
  ownerTransferred: false,
  miningOwnerTransferred: false
}
[Agent详情API] tokensDistributed类型: boolean, 值: false
[Agent详情状态计算] Agent: testn (fb051b0c-d4fd-4081-91bd-1269b906f9a4)
[Agent详情状态计算] 原始状态: TBA
[Agent详情状态计算] 当前时间戳: 1752851858 (2025-07-18T15:17:38.000Z)
[Agent详情状态计算] IAO开始时间: 1752851432 (2025-07-18T15:10:32.000Z)
[Agent详情状态计算] IAO结束时间: 1753110632 (2025-07-21T15:10:32.000Z)
[Agent详情状态计算] 代币地址: null
[Agent详情状态计算] 测试环境: false
[Agent详情状态计算] IAO进行中，状态: IAO_ONGOING
[Agent详情状态计算] 最终状态: IAO_ONGOING
[Agent详情状态计算] ==========================================
 ○ Compiling /api/agents/[id]/create-token ...
 ✓ Compiled /api/agents/[id]/create-token in 750ms (5751 modules)
[Token创建] 开始为Agent fb051b0c-d4fd-4081-91bd-1269b906f9a4 部署Token...
[Token创建] 创建者地址: 0xde184a6809898d81186def5c0823d2107c001da2
[Token创建] Token名称: testn
[Token创建] Token符号: TESTN
[Token创建] IAO合约地址: 0xB2076716bC941D67431A2589c7cbA085D4b8b93E
[Token创建] 数据库中的总供应量: 100000000000
[Token创建] Wei单位的总供应量: 100000000000000000000000000000
[Token创建] 挖矿速率: 5%
[Token创建] 每年可挖矿代币数量(Wei): 5000000000000000000000000000
[Token创建] IAO比例: 15%
[Token创建] 分配给IAO的代币数量(Wei): 15000000000000000000000000000
[Token创建] 请求体: {
  "owner": "0x417Dd0DDAA54E651e304A12c9810173F57876159",
  "token_amount_can_mint_per_year": "5000000000000000000000000000",
  "token_init_supply": "100000000000000000000000000000",
  "token_name": "testn",
  "token_supply_fixed_years": 8,
  "token_symbol": "TESTN",
  "iao_contract_address": "0xB2076716bC941D67431A2589c7cbA085D4b8b93E",
  "amount_to_iao": "15000000000000000000000000000"
}
[Token创建] 原始响应: {"code":200,"message":"Deployment successful","data":{"proxy_address":"0x225278f3e11FD66E6f43e3d91d2cbC3238879669"}}
[Token创建] 响应状态: 200
[Token创建] Token部署结果: {
  code: 200,
  message: 'Deployment successful',
  data: { proxy_address: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669' }
}
[Token创建] Token合约地址: 0x225278f3e11FD66E6f43e3d91d2cbC3238879669
[完成] Token创建完成
[完成] Token地址: 0x225278f3e11FD66E6f43e3d91d2cbC3238879669
Wallet connect no signature request: { address: '0xde184a6809898d81186def5c0823d2107c001da2' }
[Agent详情API] 管理状态字段: {
  tokensDistributed: false,
  liquidityAdded: false,
  tokensBurned: false,
  ownerTransferred: false,
  miningOwnerTransferred: false
}
[Agent详情API] tokensDistributed类型: boolean, 值: false
[Agent详情状态计算] Agent: testn (fb051b0c-d4fd-4081-91bd-1269b906f9a4)
[Agent详情状态计算] 原始状态: TBA
[Agent详情状态计算] 当前时间戳: 1752852039 (2025-07-18T15:20:39.000Z)
[Agent详情状态计算] IAO开始时间: 1752851432 (2025-07-18T15:10:32.000Z)
[Agent详情状态计算] IAO结束时间: 1753110632 (2025-07-21T15:10:32.000Z)
[Agent详情状态计算] 代币地址: 0x225278f3e11FD66E6f43e3d91d2cbC3238879669
[Agent详情状态计算] 测试环境: false
[Agent详情状态计算] IAO进行中，状态: IAO_ONGOING
[Agent详情状态计算] 最终状态: IAO_ONGOING
[Agent详情状态计算] ==========================================
User: {
  id: 'a136cf7d-7054-46d1-876e-90ac458ea7f3',
  address: '0xde184a6809898d81186def5c0823d2107c001da2',
  nickname: null,
  avatar: null,
  createdAt: 2025-06-27T07:47:15.548Z,
  updatedAt: 2025-06-27T07:47:15.548Z,
  preferences: null
}
[Agent详情API] 管理状态字段: {
  tokensDistributed: false,
  liquidityAdded: false,
  tokensBurned: false,
  ownerTransferred: false,
  miningOwnerTransferred: false
}
[Agent详情API] tokensDistributed类型: boolean, 值: false
[Agent详情状态计算] Agent: testn (fb051b0c-d4fd-4081-91bd-1269b906f9a4)
[Agent详情状态计算] 原始状态: TBA
[Agent详情状态计算] 当前时间戳: 1752852040 (2025-07-18T15:20:40.000Z)
[Agent详情状态计算] IAO开始时间: 1752851432 (2025-07-18T15:10:32.000Z)
[Agent详情状态计算] IAO结束时间: 1753110632 (2025-07-21T15:10:32.000Z)
[Agent详情状态计算] 代币地址: 0x225278f3e11FD66E6f43e3d91d2cbC3238879669
[Agent详情状态计算] 测试环境: false
[Agent详情状态计算] IAO进行中，状态: IAO_ONGOING
[Agent详情状态计算] 最终状态: IAO_ONGOING
[Agent详情状态计算] ==========================================
 ○ Compiling /api/token/distribute ...
 ✓ Compiled /api/token/distribute in 1388ms (6033 modules)
🚀 收到代币分配请求
⏰ 请求时间: 2025-07-18T15:22:44.512Z
📝 请求参数详情:
  - Agent ID: fb051b0c-d4fd-4081-91bd-1269b906f9a4
  - 总供应量: 100000000000
  - 代币地址: 0x225278f3e11FD66E6f43e3d91d2cbC3238879669
🔍 验证请求参数格式...
✅ 参数验证通过
🔐 验证用户身份和权限...
 ○ Compiling /api/agents/[id] ...
 ✓ Compiled /api/agents/[id] in 508ms (6036 modules)
[Agent详情API] 管理状态字段: {
  tokensDistributed: false,
  liquidityAdded: false,
  tokensBurned: false,
  ownerTransferred: false,
  miningOwnerTransferred: false
}
[Agent详情API] tokensDistributed类型: boolean, 值: false
[Agent详情状态计算] Agent: testn (fb051b0c-d4fd-4081-91bd-1269b906f9a4)
[Agent详情状态计算] 原始状态: TBA
[Agent详情状态计算] 当前时间戳: 1752852166 (2025-07-18T15:22:46.000Z)
[Agent详情状态计算] IAO开始时间: 1752851432 (2025-07-18T15:10:32.000Z)
[Agent详情状态计算] IAO结束时间: 1753110632 (2025-07-21T15:10:32.000Z)
[Agent详情状态计算] 代币地址: 0x225278f3e11FD66E6f43e3d91d2cbC3238879669
[Agent详情状态计算] 测试环境: false
[Agent详情状态计算] IAO进行中，状态: IAO_ONGOING
[Agent详情状态计算] 最终状态: IAO_ONGOING
[Agent详情状态计算] ==========================================
✅ 权限验证通过:
  - 用户地址: 0xde184a6809898d81186def5c0823d2107c001da2
  - Agent名称: testn
  - Agent符号: TESTN
  - Agent代币地址: 0x225278f3e11FD66E6f43e3d91d2cbC3238879669
🔍 验证代币地址匹配...
✅ 代币地址验证通过
📝 创建代币分发任务记录...
✅ 任务创建成功，任务ID: d6e63238-34c0-4b79-9cf0-1c05eca25066
🚀 启动后台代币分发任务...
🔄 开始处理代币分发任务 d6e63238-34c0-4b79-9cf0-1c05eca25066
💰 开始执行代币分配流程...
🔍 [DEBUG] distributeTokensWithOptions 开始执行
🔍 [DEBUG] 参数: {
  agentId: 'fb051b0c-d4fd-4081-91bd-1269b906f9a4',
  totalSupply: '100000000000',
  tokenAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  userAddress: '0xde184a6809898d81186def5c0823d2107c001da2',
  options: { includeBurn: false, burnPercentage: 5, retryTaskId: undefined }
}
🔍 [DEBUG] 🏦 分发前预处理 - 提取IPO中的代币
🏦 开始提取IPO中的代币 - Agent ID: fb051b0c-d4fd-4081-91bd-1269b906f9a4
🏦 IAO合约地址: 0xB2076716bC941D67431A2589c7cbA085D4b8b93E
🔧 初始化服务端钱包客户端...
✅ 服务端钱包初始化成功: 0x417Dd0DDAA54E651e304A12c9810173F57876159
📝 执行claimDepositedToken - 合约: 0xB2076716bC941D67431A2589c7cbA085D4b8b93E
🔍 开始权限检查...
🔍 服务端钱包是否为管理员: false
🔍 合约所有者: 0x417Dd0DDAA54E651e304A12c9810173F57876159
🔍 服务端钱包: 0x417Dd0DDAA54E651e304A12c9810173F57876159
🔍 是否为所有者: true
🔍 IAO是否成功: true
🔍 总投入金额: 100000000000000000000000
🔍 Oracle地址: 0x4bb48d5821cb668B663f74111D06D6B0060d2950
🔍 Oracle是否为服务端钱包: false
🔧 尝试设置服务端钱包为管理员...
⚠️ 设置管理员失败: The contract function "setAdmin" reverted with the following reason:
no signer available

Contract Call:
  address:   0xB2076716bC941D67431A2589c7cbA085D4b8b93E
  function:  setAdmin(address _admin, bool _isAdmin)
  args:              (0x417Dd0DDAA54E651e304A12c9810173F57876159, true)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
🔍 IAO合约中的代币余额: 15000000000000000000000000000
� 直接执行claimDepositedToken...
✅ claimDepositedToken交易已提交: 0xd96f444d67b4bf42f9b05f2bcdb75ab60e2240793a0c1778514dd93c0ad35035
⏳ 等待交易确认...
✅ claimDepositedToken执行成功 - Gas Used: 1179570
🔍 [DEBUG] ✅ IPO代币提取成功 - TxHash: 0xd96f444d67b4bf42f9b05f2bcdb75ab60e2240793a0c1778514dd93c0ad35035
🔍 [DEBUG] 调用 distributeTokens...
🔍 [DEBUG] 🚀 开始代币分配
🔍 [DEBUG] Agent: fb051b0c-d4fd-4081-91bd-1269b906f9a4, 总供应量: 100000000000
🔍 [DEBUG] ⏭️ 启用容错模式 - 跳过已成功的步骤
🔍 [DEBUG] 获取 Agent 信息...
🔍 [DEBUG] Agent 信息: {
  id: 'fb051b0c-d4fd-4081-91bd-1269b906f9a4',
  creator: { address: '0xde184a6809898d81186def5c0823d2107c001da2' },
  iaoContractAddress: '0xB2076716bC941D67431A2589c7cbA085D4b8b93E',
  tokenAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669'
}
🔍 开始查找已有任务 - skipSuccessful: true
🔍 查找已有分配任务 - agentId: fb051b0c-d4fd-4081-91bd-1269b906f9a4, tokenAddress: 0x225278f3e11FD66E6f43e3d91d2cbC3238879669
🔍 [DEBUG] 数据库查询结果:
  - 找到任务数量: 1
  - 任务1: ID=d6e63238-34c0-4b79-9cf0-1c05eca25066, Status=PROCESSING, CreatedAt=Fri Jul 18 2025 23:22:46 GMT+0800 (中国标准时间)
    - result字段类型: string
    - 是否有transactions: undefined
    - result字段内容: "{\"metadata\":{\"totalSupply\":\"100000000000\",\"tokenAddress\":\"0x225278f3e11FD66E6f43e3d91d2cbC3238879669\",\"includeBurn\":false,\"burnPercentage\":5}}"...
📋 找到 1 条相关分发任务记录，开始合并所有交易记录...
  处理任务 1/1: ID=d6e63238-34c0-4b79-9cf0-1c05eca25066, Status=PROCESSING, CreatedAt=Fri Jul 18 2025 23:22:46 GMT+0800 (中国标准时间)
     ✅ 成功解析任务数据
     ❌ 任务不匹配当前tokenAddress
❌ 未找到匹配的分配任务
📋 从历史记录中获取已完成步骤: 无
📝 没有找到已完成的步骤，将执行完整分发流程
📝 创建新的分配任务记录...
📝 创建分发任务记录 - Agent: fb051b0c-d4fd-4081-91bd-1269b906f9a4, 总供应量: 100000000000
✅ 分发任务创建成功 - Task ID: d80a9aee-b4e1-4d40-a68f-02b60bec95a3
📝 分配任务创建成功: d80a9aee-b4e1-4d40-a68f-02b60bec95a3
📊 开始计算分配数量 - 总供应量: 100000000000
📊 分配数量计算完成:
  - 创建者 (33%): 33000000000
  - IAO合约 (15%): 15000000000 [已由恒源自动分配]
  - 流动性 (10%): 10000000000 [暂时禁用]
  - 空投 (2%): 2000000000
  - AI挖矿 (40%): 40000000000
💰 智能余额检查 - 只检查未完成步骤...
💰 余额检查结果:
  - 当前余额: 85000000000
  - 需要余额: 75000000000
  - 待执行步骤: 创建者 (33000000000), 空投 (2000000000), 挖矿 (40000000000)
  - 已完成步骤: 无
  - 余额充足: ✅
✅ 余额检查通过，可以执行剩余 3 个步骤
🚀 开始执行代币分配交易...
🔍 [DEBUG] 👤 [1/3] 分配给创建者 (33%): 33000000000 -> 0xde184a6809898d81186def5c0823d2107c001da2，批量锁定50次
🔍 [DEBUG] 👤 每次锁定金额: 660000000.000000000000000000 (总计: 33000000000)
🔄 开始批量执行transferAndLock - 总数: 50, 并发数: 5
📝 参数详情:
  - 代币地址: 0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  - 接收者: 0xde184a6809898d81186def5c0823d2107c001da2
  - 每次金额: 660000000.000000000000000000
  - 锁定时间: 3456000秒
🔄 开始处理批次，大小: 5
🔄 执行第 1/50 次transferAndLock操作
🔄 执行第 2/50 次transferAndLock操作
🔄 执行第 3/50 次transferAndLock操作
🔄 执行第 4/50 次transferAndLock操作
🔄 执行第 5/50 次transferAndLock操作
📤 第 1/50 次transferAndLock交易已发送: 0x4d276afb35e77b89d52c37fe201711d303484aa10020b0de7aa5b5a783dfcfd4
📤 第 2/50 次transferAndLock交易已发送: 0xcd681172feede0fd9e93e0174ff2576b2058044dbbf72c031e153fa335997a59
❌ 第 4/50 次transferAndLock异常: ContractFunctionExecutionError: The contract function "transferAndLock" reverted with the following reason:
already known

Contract Call:
  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)
  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
    at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:36:12)
    at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
    ... 7 lines matching cause stack trace ...
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
  cause: ContractFunctionRevertedError: The contract function "transferAndLock" reverted with the following reason:
  already known
  
  Version: viem@2.22.13
      at eval (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:27:20)
      at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:35:7)
      at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async executeTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:192:26)
      at async Promise.all (index 3)
      at async processQueue (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:251:13)
      at async batchTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:256:5)
      at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:705:37)
      at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
      at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
    details: undefined,
    docsPath: undefined,
    metaMessages: undefined,
    shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
      'already known',
    version: '2.22.13',
    data: undefined,
    raw: undefined,
    reason: 'already known',
    signature: undefined
  },
  details: undefined,
  docsPath: '/docs/contract/writeContract',
  metaMessages: [
    'Contract Call:',
    '  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669\n' +
      '  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)\n' +
      '  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)\n' +
      '  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159'
  ],
  shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
    'already known',
  version: '2.22.13',
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AddLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AdminChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Approval',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AuthorizedUpgradeSelf',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'BeaconUpgraded',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'DisableContractUpgrade',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [],
      name: 'EIP712DomainChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Initialized',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockDisabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockEnabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'OwnershipTransferred',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'RemoveLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Transfer',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'TransferAndLock',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Upgraded',
      type: 'event'
    },
    {
      inputs: [],
      name: 'DOMAIN_SEPARATOR',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'addLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'allowance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'approve',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'balanceOf',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burnFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'canTransferAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'canUpgradeAddress',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'decimals',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'decreaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableContractUpgrade',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableUpgrade',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'eip712Domain',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getAvailableBalance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getLockAmountAndUnlockAt',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'increaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'isLockActive',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensDisable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensEnable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'lockTransferAdmins',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'name',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'nonces',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'permit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'removeLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'setUpgradePermission',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transfer',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferAndLock',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferFrom',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'version',
      outputs: [Array],
      stateMutability: 'pure',
      type: 'function'
    }
  ],
  args: [
    '0xde184a6809898d81186def5c0823d2107c001da2',
    660000000000000000000000000n,
    3456000n
  ],
  contractAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  formattedArgs: undefined,
  functionName: 'transferAndLock',
  sender: '0x417Dd0DDAA54E651e304A12c9810173F57876159'
}
🔄 重试第 4/50 次transferAndLock (1/3)
🔄 执行第 4/50 次transferAndLock操作
❌ 第 3/50 次transferAndLock异常: ContractFunctionExecutionError: The contract function "transferAndLock" reverted with the following reason:
already known

Contract Call:
  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)
  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
    at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:36:12)
    at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
    ... 7 lines matching cause stack trace ...
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
  cause: ContractFunctionRevertedError: The contract function "transferAndLock" reverted with the following reason:
  already known
  
  Version: viem@2.22.13
      at eval (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:27:20)
      at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:35:7)
      at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async executeTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:192:26)
      at async Promise.all (index 2)
      at async processQueue (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:251:13)
      at async batchTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:256:5)
      at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:705:37)
      at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
      at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
    details: undefined,
    docsPath: undefined,
    metaMessages: undefined,
    shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
      'already known',
    version: '2.22.13',
    data: undefined,
    raw: undefined,
    reason: 'already known',
    signature: undefined
  },
  details: undefined,
  docsPath: '/docs/contract/writeContract',
  metaMessages: [
    'Contract Call:',
    '  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669\n' +
      '  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)\n' +
      '  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)\n' +
      '  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159'
  ],
  shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
    'already known',
  version: '2.22.13',
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AddLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AdminChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Approval',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AuthorizedUpgradeSelf',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'BeaconUpgraded',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'DisableContractUpgrade',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [],
      name: 'EIP712DomainChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Initialized',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockDisabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockEnabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'OwnershipTransferred',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'RemoveLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Transfer',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'TransferAndLock',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Upgraded',
      type: 'event'
    },
    {
      inputs: [],
      name: 'DOMAIN_SEPARATOR',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'addLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'allowance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'approve',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'balanceOf',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burnFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'canTransferAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'canUpgradeAddress',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'decimals',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'decreaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableContractUpgrade',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableUpgrade',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'eip712Domain',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getAvailableBalance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getLockAmountAndUnlockAt',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'increaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'isLockActive',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensDisable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensEnable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'lockTransferAdmins',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'name',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'nonces',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'permit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'removeLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'setUpgradePermission',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transfer',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferAndLock',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferFrom',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'version',
      outputs: [Array],
      stateMutability: 'pure',
      type: 'function'
    }
  ],
  args: [
    '0xde184a6809898d81186def5c0823d2107c001da2',
    660000000000000000000000000n,
    3456000n
  ],
  contractAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  formattedArgs: undefined,
  functionName: 'transferAndLock',
  sender: '0x417Dd0DDAA54E651e304A12c9810173F57876159'
}
🔄 重试第 3/50 次transferAndLock (1/3)
🔄 执行第 3/50 次transferAndLock操作
❌ 第 5/50 次transferAndLock异常: ContractFunctionExecutionError: The contract function "transferAndLock" reverted with the following reason:
already known

Contract Call:
  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)
  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
    at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:36:12)
    at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
    ... 7 lines matching cause stack trace ...
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
  cause: ContractFunctionRevertedError: The contract function "transferAndLock" reverted with the following reason:
  already known
  
  Version: viem@2.22.13
      at eval (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:27:20)
      at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:35:7)
      at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async executeTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:192:26)
      at async Promise.all (index 4)
      at async processQueue (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:251:13)
      at async batchTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:256:5)
      at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:705:37)
      at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
      at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
    details: undefined,
    docsPath: undefined,
    metaMessages: undefined,
    shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
      'already known',
    version: '2.22.13',
    data: undefined,
    raw: undefined,
    reason: 'already known',
    signature: undefined
  },
  details: undefined,
  docsPath: '/docs/contract/writeContract',
  metaMessages: [
    'Contract Call:',
    '  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669\n' +
      '  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)\n' +
      '  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)\n' +
      '  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159'
  ],
  shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
    'already known',
  version: '2.22.13',
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AddLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AdminChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Approval',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AuthorizedUpgradeSelf',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'BeaconUpgraded',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'DisableContractUpgrade',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [],
      name: 'EIP712DomainChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Initialized',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockDisabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockEnabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'OwnershipTransferred',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'RemoveLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Transfer',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'TransferAndLock',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Upgraded',
      type: 'event'
    },
    {
      inputs: [],
      name: 'DOMAIN_SEPARATOR',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'addLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'allowance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'approve',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'balanceOf',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burnFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'canTransferAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'canUpgradeAddress',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'decimals',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'decreaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableContractUpgrade',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableUpgrade',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'eip712Domain',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getAvailableBalance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getLockAmountAndUnlockAt',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'increaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'isLockActive',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensDisable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensEnable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'lockTransferAdmins',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'name',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'nonces',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'permit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'removeLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'setUpgradePermission',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transfer',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferAndLock',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferFrom',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'version',
      outputs: [Array],
      stateMutability: 'pure',
      type: 'function'
    }
  ],
  args: [
    '0xde184a6809898d81186def5c0823d2107c001da2',
    660000000000000000000000000n,
    3456000n
  ],
  contractAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  formattedArgs: undefined,
  functionName: 'transferAndLock',
  sender: '0x417Dd0DDAA54E651e304A12c9810173F57876159'
}
🔄 重试第 5/50 次transferAndLock (1/3)
🔄 执行第 5/50 次transferAndLock操作
❌ 第 3/50 次transferAndLock异常: ContractFunctionExecutionError: The contract function "transferAndLock" reverted with the following reason:
already known

Contract Call:
  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)
  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
    at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:36:12)
    at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
    ... 7 lines matching cause stack trace ...
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
  cause: ContractFunctionRevertedError: The contract function "transferAndLock" reverted with the following reason:
  already known
  
  Version: viem@2.22.13
      at eval (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:27:20)
      at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:35:7)
      at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async executeTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:192:26)
      at async Promise.all (index 2)
      at async processQueue (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:251:13)
      at async batchTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:256:5)
      at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:705:37)
      at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
      at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
    details: undefined,
    docsPath: undefined,
    metaMessages: undefined,
    shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
      'already known',
    version: '2.22.13',
    data: undefined,
    raw: undefined,
    reason: 'already known',
    signature: undefined
  },
  details: undefined,
  docsPath: '/docs/contract/writeContract',
  metaMessages: [
    'Contract Call:',
    '  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669\n' +
      '  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)\n' +
      '  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)\n' +
      '  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159'
  ],
  shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
    'already known',
  version: '2.22.13',
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AddLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AdminChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Approval',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AuthorizedUpgradeSelf',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'BeaconUpgraded',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'DisableContractUpgrade',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [],
      name: 'EIP712DomainChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Initialized',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockDisabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockEnabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'OwnershipTransferred',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'RemoveLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Transfer',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'TransferAndLock',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Upgraded',
      type: 'event'
    },
    {
      inputs: [],
      name: 'DOMAIN_SEPARATOR',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'addLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'allowance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'approve',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'balanceOf',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burnFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'canTransferAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'canUpgradeAddress',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'decimals',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'decreaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableContractUpgrade',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableUpgrade',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'eip712Domain',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getAvailableBalance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getLockAmountAndUnlockAt',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'increaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'isLockActive',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensDisable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensEnable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'lockTransferAdmins',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'name',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'nonces',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'permit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'removeLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'setUpgradePermission',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transfer',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferAndLock',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferFrom',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'version',
      outputs: [Array],
      stateMutability: 'pure',
      type: 'function'
    }
  ],
  args: [
    '0xde184a6809898d81186def5c0823d2107c001da2',
    660000000000000000000000000n,
    3456000n
  ],
  contractAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  formattedArgs: undefined,
  functionName: 'transferAndLock',
  sender: '0x417Dd0DDAA54E651e304A12c9810173F57876159'
}
🔄 重试第 3/50 次transferAndLock (2/3)
🔄 执行第 3/50 次transferAndLock操作
📤 第 4/50 次transferAndLock交易已发送: 0xe6cacc0f965a3c2795593f003af014159a98ec6f7f71e3cf3b6020d0b16039af
📤 第 5/50 次transferAndLock交易已发送: 0x8f7c39cf2f1c229cfa40e53fd0ab46031b478de65335ac4bcb71af3b31cdc2d2
📤 第 3/50 次transferAndLock交易已发送: 0x90986370a51978e39e0795276190a413c9cc093193c6e02923f8c322d897e592
✅ 第 1/50 次transferAndLock成功 - Hash: 0x4d276afb35e77b89d52c37fe201711d303484aa10020b0de7aa5b5a783dfcfd4
✅ 第 3/50 次transferAndLock成功 - Hash: 0x90986370a51978e39e0795276190a413c9cc093193c6e02923f8c322d897e592
✅ 第 5/50 次transferAndLock成功 - Hash: 0x8f7c39cf2f1c229cfa40e53fd0ab46031b478de65335ac4bcb71af3b31cdc2d2
✅ 第 4/50 次transferAndLock成功 - Hash: 0xe6cacc0f965a3c2795593f003af014159a98ec6f7f71e3cf3b6020d0b16039af
✅ 第 2/50 次transferAndLock成功 - Hash: 0xcd681172feede0fd9e93e0174ff2576b2058044dbbf72c031e153fa335997a59
✅ 批次处理完成，剩余任务: 45
🔄 开始处理批次，大小: 5
🔄 执行第 6/50 次transferAndLock操作
🔄 执行第 7/50 次transferAndLock操作
🔄 执行第 8/50 次transferAndLock操作
🔄 执行第 9/50 次transferAndLock操作
🔄 执行第 10/50 次transferAndLock操作
📤 第 6/50 次transferAndLock交易已发送: 0xdb0edad153e5e25dc3f2fe8a6229b1cba3e91f44c2ce3727d24a98411da86657
❌ 第 10/50 次transferAndLock异常: ContractFunctionExecutionError: The contract function "transferAndLock" reverted with the following reason:
already known

Contract Call:
  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)
  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
    at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:36:12)
    at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
    ... 7 lines matching cause stack trace ...
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
  cause: ContractFunctionRevertedError: The contract function "transferAndLock" reverted with the following reason:
  already known
  
  Version: viem@2.22.13
      at eval (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:27:20)
      at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:35:7)
      at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async executeTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:192:26)
      at async Promise.all (index 4)
      at async processQueue (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:251:13)
      at async batchTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:256:5)
      at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:705:37)
      at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
      at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
    details: undefined,
    docsPath: undefined,
    metaMessages: undefined,
    shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
      'already known',
    version: '2.22.13',
    data: undefined,
    raw: undefined,
    reason: 'already known',
    signature: undefined
  },
  details: undefined,
  docsPath: '/docs/contract/writeContract',
  metaMessages: [
    'Contract Call:',
    '  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669\n' +
      '  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)\n' +
      '  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)\n' +
      '  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159'
  ],
  shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
    'already known',
  version: '2.22.13',
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AddLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AdminChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Approval',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AuthorizedUpgradeSelf',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'BeaconUpgraded',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'DisableContractUpgrade',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [],
      name: 'EIP712DomainChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Initialized',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockDisabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockEnabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'OwnershipTransferred',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'RemoveLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Transfer',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'TransferAndLock',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Upgraded',
      type: 'event'
    },
    {
      inputs: [],
      name: 'DOMAIN_SEPARATOR',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'addLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'allowance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'approve',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'balanceOf',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burnFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'canTransferAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'canUpgradeAddress',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'decimals',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'decreaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableContractUpgrade',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableUpgrade',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'eip712Domain',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getAvailableBalance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getLockAmountAndUnlockAt',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'increaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'isLockActive',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensDisable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensEnable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'lockTransferAdmins',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'name',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'nonces',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'permit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'removeLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'setUpgradePermission',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transfer',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferAndLock',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferFrom',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'version',
      outputs: [Array],
      stateMutability: 'pure',
      type: 'function'
    }
  ],
  args: [
    '0xde184a6809898d81186def5c0823d2107c001da2',
    660000000000000000000000000n,
    3456000n
  ],
  contractAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  formattedArgs: undefined,
  functionName: 'transferAndLock',
  sender: '0x417Dd0DDAA54E651e304A12c9810173F57876159'
}
🔄 重试第 10/50 次transferAndLock (1/3)
🔄 执行第 10/50 次transferAndLock操作
❌ 第 9/50 次transferAndLock异常: ContractFunctionExecutionError: The contract function "transferAndLock" reverted with the following reason:
already known

Contract Call:
  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)
  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
    at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:36:12)
    at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
    ... 7 lines matching cause stack trace ...
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
  cause: ContractFunctionRevertedError: The contract function "transferAndLock" reverted with the following reason:
  already known
  
  Version: viem@2.22.13
      at eval (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:27:20)
      at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:35:7)
      at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async executeTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:192:26)
      at async Promise.all (index 3)
      at async processQueue (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:251:13)
      at async batchTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:256:5)
      at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:705:37)
      at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
      at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
    details: undefined,
    docsPath: undefined,
    metaMessages: undefined,
    shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
      'already known',
    version: '2.22.13',
    data: undefined,
    raw: undefined,
    reason: 'already known',
    signature: undefined
  },
  details: undefined,
  docsPath: '/docs/contract/writeContract',
  metaMessages: [
    'Contract Call:',
    '  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669\n' +
      '  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)\n' +
      '  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)\n' +
      '  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159'
  ],
  shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
    'already known',
  version: '2.22.13',
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AddLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AdminChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Approval',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AuthorizedUpgradeSelf',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'BeaconUpgraded',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'DisableContractUpgrade',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [],
      name: 'EIP712DomainChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Initialized',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockDisabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockEnabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'OwnershipTransferred',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'RemoveLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Transfer',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'TransferAndLock',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Upgraded',
      type: 'event'
    },
    {
      inputs: [],
      name: 'DOMAIN_SEPARATOR',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'addLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'allowance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'approve',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'balanceOf',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burnFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'canTransferAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'canUpgradeAddress',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'decimals',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'decreaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableContractUpgrade',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableUpgrade',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'eip712Domain',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getAvailableBalance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getLockAmountAndUnlockAt',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'increaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'isLockActive',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensDisable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensEnable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'lockTransferAdmins',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'name',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'nonces',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'permit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'removeLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'setUpgradePermission',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transfer',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferAndLock',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferFrom',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'version',
      outputs: [Array],
      stateMutability: 'pure',
      type: 'function'
    }
  ],
  args: [
    '0xde184a6809898d81186def5c0823d2107c001da2',
    660000000000000000000000000n,
    3456000n
  ],
  contractAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  formattedArgs: undefined,
  functionName: 'transferAndLock',
  sender: '0x417Dd0DDAA54E651e304A12c9810173F57876159'
}
🔄 重试第 9/50 次transferAndLock (1/3)
🔄 执行第 9/50 次transferAndLock操作
❌ 第 7/50 次transferAndLock异常: ContractFunctionExecutionError: The contract function "transferAndLock" reverted with the following reason:
already known

Contract Call:
  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)
  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
    at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:36:12)
    at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
    ... 7 lines matching cause stack trace ...
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
  cause: ContractFunctionRevertedError: The contract function "transferAndLock" reverted with the following reason:
  already known
  
  Version: viem@2.22.13
      at eval (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:27:20)
      at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:35:7)
      at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async executeTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:192:26)
      at async Promise.all (index 1)
      at async processQueue (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:251:13)
      at async batchTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:256:5)
      at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:705:37)
      at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
      at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
    details: undefined,
    docsPath: undefined,
    metaMessages: undefined,
    shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
      'already known',
    version: '2.22.13',
    data: undefined,
    raw: undefined,
    reason: 'already known',
    signature: undefined
  },
  details: undefined,
  docsPath: '/docs/contract/writeContract',
  metaMessages: [
    'Contract Call:',
    '  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669\n' +
      '  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)\n' +
      '  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)\n' +
      '  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159'
  ],
  shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
    'already known',
  version: '2.22.13',
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AddLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AdminChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Approval',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AuthorizedUpgradeSelf',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'BeaconUpgraded',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'DisableContractUpgrade',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [],
      name: 'EIP712DomainChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Initialized',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockDisabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockEnabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'OwnershipTransferred',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'RemoveLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Transfer',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'TransferAndLock',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Upgraded',
      type: 'event'
    },
    {
      inputs: [],
      name: 'DOMAIN_SEPARATOR',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'addLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'allowance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'approve',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'balanceOf',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burnFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'canTransferAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'canUpgradeAddress',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'decimals',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'decreaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableContractUpgrade',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableUpgrade',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'eip712Domain',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getAvailableBalance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getLockAmountAndUnlockAt',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'increaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'isLockActive',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensDisable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensEnable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'lockTransferAdmins',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'name',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'nonces',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'permit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'removeLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'setUpgradePermission',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transfer',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferAndLock',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferFrom',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'version',
      outputs: [Array],
      stateMutability: 'pure',
      type: 'function'
    }
  ],
  args: [
    '0xde184a6809898d81186def5c0823d2107c001da2',
    660000000000000000000000000n,
    3456000n
  ],
  contractAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  formattedArgs: undefined,
  functionName: 'transferAndLock',
  sender: '0x417Dd0DDAA54E651e304A12c9810173F57876159'
}
🔄 重试第 7/50 次transferAndLock (1/3)
🔄 执行第 7/50 次transferAndLock操作
❌ 第 8/50 次transferAndLock异常: ContractFunctionExecutionError: The contract function "transferAndLock" reverted with the following reason:
already known

Contract Call:
  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)
  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
    at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:36:12)
    at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
    ... 7 lines matching cause stack trace ...
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
  cause: ContractFunctionRevertedError: The contract function "transferAndLock" reverted with the following reason:
  already known
  
  Version: viem@2.22.13
      at eval (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:27:20)
      at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:35:7)
      at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async executeTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:192:26)
      at async Promise.all (index 2)
      at async processQueue (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:251:13)
      at async batchTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:256:5)
      at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:705:37)
      at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
      at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
    details: undefined,
    docsPath: undefined,
    metaMessages: undefined,
    shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
      'already known',
    version: '2.22.13',
    data: undefined,
    raw: undefined,
    reason: 'already known',
    signature: undefined
  },
  details: undefined,
  docsPath: '/docs/contract/writeContract',
  metaMessages: [
    'Contract Call:',
    '  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669\n' +
      '  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)\n' +
      '  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)\n' +
      '  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159'
  ],
  shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
    'already known',
  version: '2.22.13',
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AddLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AdminChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Approval',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AuthorizedUpgradeSelf',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'BeaconUpgraded',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'DisableContractUpgrade',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [],
      name: 'EIP712DomainChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Initialized',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockDisabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockEnabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'OwnershipTransferred',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'RemoveLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Transfer',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'TransferAndLock',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Upgraded',
      type: 'event'
    },
    {
      inputs: [],
      name: 'DOMAIN_SEPARATOR',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'addLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'allowance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'approve',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'balanceOf',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burnFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'canTransferAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'canUpgradeAddress',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'decimals',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'decreaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableContractUpgrade',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableUpgrade',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'eip712Domain',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getAvailableBalance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getLockAmountAndUnlockAt',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'increaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'isLockActive',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensDisable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensEnable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'lockTransferAdmins',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'name',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'nonces',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'permit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'removeLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'setUpgradePermission',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transfer',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferAndLock',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferFrom',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'version',
      outputs: [Array],
      stateMutability: 'pure',
      type: 'function'
    }
  ],
  args: [
    '0xde184a6809898d81186def5c0823d2107c001da2',
    660000000000000000000000000n,
    3456000n
  ],
  contractAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  formattedArgs: undefined,
  functionName: 'transferAndLock',
  sender: '0x417Dd0DDAA54E651e304A12c9810173F57876159'
}
🔄 重试第 8/50 次transferAndLock (1/3)
🔄 执行第 8/50 次transferAndLock操作
📤 第 10/50 次transferAndLock交易已发送: 0x3e291da6f3273f032de66e435f4ef58845957e8655707ec5230d7ea15e8b04c0
❌ 第 9/50 次transferAndLock异常: ContractFunctionExecutionError: The contract function "transferAndLock" reverted with the following reason:
already known

Contract Call:
  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)
  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
    at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:36:12)
    at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
    ... 7 lines matching cause stack trace ...
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
  cause: ContractFunctionRevertedError: The contract function "transferAndLock" reverted with the following reason:
  already known
  
  Version: viem@2.22.13
      at eval (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:27:20)
      at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:35:7)
      at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async executeTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:192:26)
      at async Promise.all (index 3)
      at async processQueue (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:251:13)
      at async batchTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:256:5)
      at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:705:37)
      at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
      at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
    details: undefined,
    docsPath: undefined,
    metaMessages: undefined,
    shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
      'already known',
    version: '2.22.13',
    data: undefined,
    raw: undefined,
    reason: 'already known',
    signature: undefined
  },
  details: undefined,
  docsPath: '/docs/contract/writeContract',
  metaMessages: [
    'Contract Call:',
    '  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669\n' +
      '  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)\n' +
      '  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)\n' +
      '  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159'
  ],
  shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
    'already known',
  version: '2.22.13',
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AddLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AdminChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Approval',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AuthorizedUpgradeSelf',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'BeaconUpgraded',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'DisableContractUpgrade',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [],
      name: 'EIP712DomainChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Initialized',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockDisabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockEnabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'OwnershipTransferred',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'RemoveLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Transfer',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'TransferAndLock',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Upgraded',
      type: 'event'
    },
    {
      inputs: [],
      name: 'DOMAIN_SEPARATOR',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'addLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'allowance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'approve',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'balanceOf',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burnFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'canTransferAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'canUpgradeAddress',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'decimals',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'decreaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableContractUpgrade',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableUpgrade',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'eip712Domain',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getAvailableBalance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getLockAmountAndUnlockAt',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'increaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'isLockActive',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensDisable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensEnable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'lockTransferAdmins',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'name',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'nonces',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'permit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'removeLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'setUpgradePermission',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transfer',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferAndLock',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferFrom',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'version',
      outputs: [Array],
      stateMutability: 'pure',
      type: 'function'
    }
  ],
  args: [
    '0xde184a6809898d81186def5c0823d2107c001da2',
    660000000000000000000000000n,
    3456000n
  ],
  contractAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  formattedArgs: undefined,
  functionName: 'transferAndLock',
  sender: '0x417Dd0DDAA54E651e304A12c9810173F57876159'
}
🔄 重试第 9/50 次transferAndLock (2/3)
🔄 执行第 9/50 次transferAndLock操作
📤 第 7/50 次transferAndLock交易已发送: 0xec2ce0d82f30d5438df32312b3caff5d95d323cb5b1d51c322eb58251be956f0
📤 第 8/50 次transferAndLock交易已发送: 0xdc27a36a782a9aa7af231160d4a63e3f4290d8518fd4cca1ebfc07bcc6e6f1f0
📤 第 9/50 次transferAndLock交易已发送: 0x40cc8274cc0e6633fabe6798ebfa7afc4cd9a6e6059adc7e479098ab513d4a6b
✅ 第 6/50 次transferAndLock成功 - Hash: 0xdb0edad153e5e25dc3f2fe8a6229b1cba3e91f44c2ce3727d24a98411da86657
✅ 第 8/50 次transferAndLock成功 - Hash: 0xdc27a36a782a9aa7af231160d4a63e3f4290d8518fd4cca1ebfc07bcc6e6f1f0
✅ 第 10/50 次transferAndLock成功 - Hash: 0x3e291da6f3273f032de66e435f4ef58845957e8655707ec5230d7ea15e8b04c0
✅ 第 7/50 次transferAndLock成功 - Hash: 0xec2ce0d82f30d5438df32312b3caff5d95d323cb5b1d51c322eb58251be956f0
✅ 第 9/50 次transferAndLock成功 - Hash: 0x40cc8274cc0e6633fabe6798ebfa7afc4cd9a6e6059adc7e479098ab513d4a6b
✅ 批次处理完成，剩余任务: 40
🔄 开始处理批次，大小: 5
🔄 执行第 11/50 次transferAndLock操作
🔄 执行第 12/50 次transferAndLock操作
🔄 执行第 13/50 次transferAndLock操作
🔄 执行第 14/50 次transferAndLock操作
🔄 执行第 15/50 次transferAndLock操作
❌ 第 13/50 次transferAndLock异常: ContractFunctionExecutionError: The contract function "transferAndLock" reverted with the following reason:
already known

Contract Call:
  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)
  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
    at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:36:12)
    at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
    ... 7 lines matching cause stack trace ...
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
  cause: ContractFunctionRevertedError: The contract function "transferAndLock" reverted with the following reason:
  already known
  
  Version: viem@2.22.13
      at eval (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:27:20)
      at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:35:7)
      at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async executeTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:192:26)
      at async Promise.all (index 2)
      at async processQueue (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:251:13)
      at async batchTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:256:5)
      at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:705:37)
      at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
      at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
    details: undefined,
    docsPath: undefined,
    metaMessages: undefined,
    shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
      'already known',
    version: '2.22.13',
    data: undefined,
    raw: undefined,
    reason: 'already known',
    signature: undefined
  },
  details: undefined,
  docsPath: '/docs/contract/writeContract',
  metaMessages: [
    'Contract Call:',
    '  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669\n' +
      '  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)\n' +
      '  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)\n' +
      '  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159'
  ],
  shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
    'already known',
  version: '2.22.13',
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AddLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AdminChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Approval',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AuthorizedUpgradeSelf',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'BeaconUpgraded',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'DisableContractUpgrade',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [],
      name: 'EIP712DomainChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Initialized',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockDisabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockEnabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'OwnershipTransferred',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'RemoveLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Transfer',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'TransferAndLock',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Upgraded',
      type: 'event'
    },
    {
      inputs: [],
      name: 'DOMAIN_SEPARATOR',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'addLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'allowance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'approve',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'balanceOf',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burnFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'canTransferAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'canUpgradeAddress',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'decimals',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'decreaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableContractUpgrade',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableUpgrade',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'eip712Domain',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getAvailableBalance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getLockAmountAndUnlockAt',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'increaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'isLockActive',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensDisable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensEnable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'lockTransferAdmins',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'name',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'nonces',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'permit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'removeLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'setUpgradePermission',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transfer',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferAndLock',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferFrom',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'version',
      outputs: [Array],
      stateMutability: 'pure',
      type: 'function'
    }
  ],
  args: [
    '0xde184a6809898d81186def5c0823d2107c001da2',
    660000000000000000000000000n,
    3456000n
  ],
  contractAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  formattedArgs: undefined,
  functionName: 'transferAndLock',
  sender: '0x417Dd0DDAA54E651e304A12c9810173F57876159'
}
🔄 重试第 13/50 次transferAndLock (1/3)
🔄 执行第 13/50 次transferAndLock操作
📤 第 14/50 次transferAndLock交易已发送: 0x557ee180f858143c4e02f2f5fe8568e2a7ad3fdc77e60b0b47454e0d179c08c8
❌ 第 12/50 次transferAndLock异常: ContractFunctionExecutionError: The contract function "transferAndLock" reverted with the following reason:
already known

Contract Call:
  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)
  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
    at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:36:12)
    at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
    ... 7 lines matching cause stack trace ...
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
  cause: ContractFunctionRevertedError: The contract function "transferAndLock" reverted with the following reason:
  already known
  
  Version: viem@2.22.13
      at eval (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:27:20)
      at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:35:7)
      at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async executeTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:192:26)
      at async Promise.all (index 1)
      at async processQueue (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:251:13)
      at async batchTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:256:5)
      at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:705:37)
      at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
      at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
    details: undefined,
    docsPath: undefined,
    metaMessages: undefined,
    shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
      'already known',
    version: '2.22.13',
    data: undefined,
    raw: undefined,
    reason: 'already known',
    signature: undefined
  },
  details: undefined,
  docsPath: '/docs/contract/writeContract',
  metaMessages: [
    'Contract Call:',
    '  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669\n' +
      '  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)\n' +
      '  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)\n' +
      '  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159'
  ],
  shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
    'already known',
  version: '2.22.13',
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AddLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AdminChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Approval',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AuthorizedUpgradeSelf',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'BeaconUpgraded',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'DisableContractUpgrade',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [],
      name: 'EIP712DomainChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Initialized',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockDisabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockEnabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'OwnershipTransferred',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'RemoveLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Transfer',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'TransferAndLock',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Upgraded',
      type: 'event'
    },
    {
      inputs: [],
      name: 'DOMAIN_SEPARATOR',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'addLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'allowance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'approve',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'balanceOf',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burnFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'canTransferAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'canUpgradeAddress',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'decimals',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'decreaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableContractUpgrade',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableUpgrade',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'eip712Domain',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getAvailableBalance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getLockAmountAndUnlockAt',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'increaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'isLockActive',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensDisable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensEnable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'lockTransferAdmins',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'name',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'nonces',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'permit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'removeLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'setUpgradePermission',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transfer',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferAndLock',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferFrom',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'version',
      outputs: [Array],
      stateMutability: 'pure',
      type: 'function'
    }
  ],
  args: [
    '0xde184a6809898d81186def5c0823d2107c001da2',
    660000000000000000000000000n,
    3456000n
  ],
  contractAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  formattedArgs: undefined,
  functionName: 'transferAndLock',
  sender: '0x417Dd0DDAA54E651e304A12c9810173F57876159'
}
🔄 重试第 12/50 次transferAndLock (1/3)
🔄 执行第 12/50 次transferAndLock操作
❌ 第 15/50 次transferAndLock异常: ContractFunctionExecutionError: The contract function "transferAndLock" reverted with the following reason:
already known

Contract Call:
  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)
  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
    at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:36:12)
    at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
    ... 7 lines matching cause stack trace ...
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
  cause: ContractFunctionRevertedError: The contract function "transferAndLock" reverted with the following reason:
  already known
  
  Version: viem@2.22.13
      at eval (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:27:20)
      at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:35:7)
      at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async executeTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:192:26)
      at async Promise.all (index 4)
      at async processQueue (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:251:13)
      at async batchTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:256:5)
      at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:705:37)
      at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
      at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
    details: undefined,
    docsPath: undefined,
    metaMessages: undefined,
    shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
      'already known',
    version: '2.22.13',
    data: undefined,
    raw: undefined,
    reason: 'already known',
    signature: undefined
  },
  details: undefined,
  docsPath: '/docs/contract/writeContract',
  metaMessages: [
    'Contract Call:',
    '  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669\n' +
      '  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)\n' +
      '  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)\n' +
      '  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159'
  ],
  shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
    'already known',
  version: '2.22.13',
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AddLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AdminChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Approval',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AuthorizedUpgradeSelf',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'BeaconUpgraded',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'DisableContractUpgrade',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [],
      name: 'EIP712DomainChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Initialized',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockDisabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockEnabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'OwnershipTransferred',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'RemoveLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Transfer',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'TransferAndLock',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Upgraded',
      type: 'event'
    },
    {
      inputs: [],
      name: 'DOMAIN_SEPARATOR',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'addLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'allowance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'approve',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'balanceOf',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burnFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'canTransferAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'canUpgradeAddress',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'decimals',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'decreaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableContractUpgrade',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableUpgrade',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'eip712Domain',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getAvailableBalance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getLockAmountAndUnlockAt',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'increaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'isLockActive',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensDisable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensEnable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'lockTransferAdmins',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'name',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'nonces',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'permit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'removeLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'setUpgradePermission',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transfer',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferAndLock',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferFrom',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'version',
      outputs: [Array],
      stateMutability: 'pure',
      type: 'function'
    }
  ],
  args: [
    '0xde184a6809898d81186def5c0823d2107c001da2',
    660000000000000000000000000n,
    3456000n
  ],
  contractAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  formattedArgs: undefined,
  functionName: 'transferAndLock',
  sender: '0x417Dd0DDAA54E651e304A12c9810173F57876159'
}
🔄 重试第 15/50 次transferAndLock (1/3)
🔄 执行第 15/50 次transferAndLock操作
📤 第 11/50 次transferAndLock交易已发送: 0xf28af830359d27256f33ff8355e6eb84b6da50a1718a4e5386cc781e7471c9e0
❌ 第 13/50 次transferAndLock异常: ContractFunctionExecutionError: The contract function "transferAndLock" reverted with the following reason:
already known

Contract Call:
  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)
  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
    at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:36:12)
    at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
    ... 7 lines matching cause stack trace ...
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
  cause: ContractFunctionRevertedError: The contract function "transferAndLock" reverted with the following reason:
  already known
  
  Version: viem@2.22.13
      at eval (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:27:20)
      at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:35:7)
      at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async executeTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:192:26)
      at async Promise.all (index 2)
      at async processQueue (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:251:13)
      at async batchTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:256:5)
      at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:705:37)
      at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
      at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
    details: undefined,
    docsPath: undefined,
    metaMessages: undefined,
    shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
      'already known',
    version: '2.22.13',
    data: undefined,
    raw: undefined,
    reason: 'already known',
    signature: undefined
  },
  details: undefined,
  docsPath: '/docs/contract/writeContract',
  metaMessages: [
    'Contract Call:',
    '  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669\n' +
      '  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)\n' +
      '  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)\n' +
      '  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159'
  ],
  shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
    'already known',
  version: '2.22.13',
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AddLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AdminChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Approval',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AuthorizedUpgradeSelf',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'BeaconUpgraded',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'DisableContractUpgrade',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [],
      name: 'EIP712DomainChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Initialized',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockDisabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockEnabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'OwnershipTransferred',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'RemoveLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Transfer',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'TransferAndLock',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Upgraded',
      type: 'event'
    },
    {
      inputs: [],
      name: 'DOMAIN_SEPARATOR',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'addLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'allowance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'approve',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'balanceOf',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burnFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'canTransferAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'canUpgradeAddress',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'decimals',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'decreaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableContractUpgrade',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableUpgrade',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'eip712Domain',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getAvailableBalance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getLockAmountAndUnlockAt',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'increaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'isLockActive',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensDisable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensEnable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'lockTransferAdmins',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'name',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'nonces',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'permit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'removeLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'setUpgradePermission',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transfer',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferAndLock',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferFrom',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'version',
      outputs: [Array],
      stateMutability: 'pure',
      type: 'function'
    }
  ],
  args: [
    '0xde184a6809898d81186def5c0823d2107c001da2',
    660000000000000000000000000n,
    3456000n
  ],
  contractAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  formattedArgs: undefined,
  functionName: 'transferAndLock',
  sender: '0x417Dd0DDAA54E651e304A12c9810173F57876159'
}
🔄 重试第 13/50 次transferAndLock (2/3)
🔄 执行第 13/50 次transferAndLock操作
❌ 第 12/50 次transferAndLock异常: ContractFunctionExecutionError: The contract function "transferAndLock" reverted with the following reason:
already known

Contract Call:
  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)
  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
    at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:36:12)
    at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
    ... 7 lines matching cause stack trace ...
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
  cause: ContractFunctionRevertedError: The contract function "transferAndLock" reverted with the following reason:
  already known
  
  Version: viem@2.22.13
      at eval (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:27:20)
      at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:35:7)
      at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async executeTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:192:26)
      at async Promise.all (index 1)
      at async processQueue (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:251:13)
      at async batchTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:256:5)
      at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:705:37)
      at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
      at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
    details: undefined,
    docsPath: undefined,
    metaMessages: undefined,
    shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
      'already known',
    version: '2.22.13',
    data: undefined,
    raw: undefined,
    reason: 'already known',
    signature: undefined
  },
  details: undefined,
  docsPath: '/docs/contract/writeContract',
  metaMessages: [
    'Contract Call:',
    '  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669\n' +
      '  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)\n' +
      '  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)\n' +
      '  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159'
  ],
  shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
    'already known',
  version: '2.22.13',
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AddLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AdminChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Approval',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AuthorizedUpgradeSelf',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'BeaconUpgraded',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'DisableContractUpgrade',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [],
      name: 'EIP712DomainChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Initialized',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockDisabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockEnabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'OwnershipTransferred',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'RemoveLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Transfer',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'TransferAndLock',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Upgraded',
      type: 'event'
    },
    {
      inputs: [],
      name: 'DOMAIN_SEPARATOR',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'addLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'allowance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'approve',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'balanceOf',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burnFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'canTransferAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'canUpgradeAddress',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'decimals',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'decreaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableContractUpgrade',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableUpgrade',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'eip712Domain',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getAvailableBalance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getLockAmountAndUnlockAt',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'increaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'isLockActive',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensDisable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensEnable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'lockTransferAdmins',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'name',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'nonces',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'permit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'removeLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'setUpgradePermission',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transfer',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferAndLock',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferFrom',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'version',
      outputs: [Array],
      stateMutability: 'pure',
      type: 'function'
    }
  ],
  args: [
    '0xde184a6809898d81186def5c0823d2107c001da2',
    660000000000000000000000000n,
    3456000n
  ],
  contractAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  formattedArgs: undefined,
  functionName: 'transferAndLock',
  sender: '0x417Dd0DDAA54E651e304A12c9810173F57876159'
}
🔄 重试第 12/50 次transferAndLock (2/3)
🔄 执行第 12/50 次transferAndLock操作
📤 第 15/50 次transferAndLock交易已发送: 0x159465fd4f7e30a079fa8ea477f53bfd94618d0a3f5d0fd3635d179282246d3a
📤 第 12/50 次transferAndLock交易已发送: 0x5db7f34f5d04a236008d8063a661cc85f91b2c6a364f8f577a88d80e98b9ddf4
❌ 第 13/50 次transferAndLock异常: ContractFunctionExecutionError: The contract function "transferAndLock" reverted with the following reason:
already known

Contract Call:
  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)
  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
    at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:36:12)
    at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
    ... 7 lines matching cause stack trace ...
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
  cause: ContractFunctionRevertedError: The contract function "transferAndLock" reverted with the following reason:
  already known
  
  Version: viem@2.22.13
      at eval (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:27:20)
      at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:35:7)
      at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async executeTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:192:26)
      at async Promise.all (index 2)
      at async processQueue (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:251:13)
      at async batchTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:256:5)
      at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:705:37)
      at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
      at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
    details: undefined,
    docsPath: undefined,
    metaMessages: undefined,
    shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
      'already known',
    version: '2.22.13',
    data: undefined,
    raw: undefined,
    reason: 'already known',
    signature: undefined
  },
  details: undefined,
  docsPath: '/docs/contract/writeContract',
  metaMessages: [
    'Contract Call:',
    '  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669\n' +
      '  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)\n' +
      '  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)\n' +
      '  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159'
  ],
  shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
    'already known',
  version: '2.22.13',
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AddLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AdminChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Approval',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AuthorizedUpgradeSelf',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'BeaconUpgraded',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'DisableContractUpgrade',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [],
      name: 'EIP712DomainChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Initialized',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockDisabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockEnabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'OwnershipTransferred',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'RemoveLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Transfer',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'TransferAndLock',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Upgraded',
      type: 'event'
    },
    {
      inputs: [],
      name: 'DOMAIN_SEPARATOR',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'addLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'allowance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'approve',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'balanceOf',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burnFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'canTransferAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'canUpgradeAddress',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'decimals',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'decreaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableContractUpgrade',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableUpgrade',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'eip712Domain',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getAvailableBalance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getLockAmountAndUnlockAt',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'increaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'isLockActive',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensDisable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensEnable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'lockTransferAdmins',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'name',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'nonces',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'permit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'removeLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'setUpgradePermission',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transfer',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferAndLock',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferFrom',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'version',
      outputs: [Array],
      stateMutability: 'pure',
      type: 'function'
    }
  ],
  args: [
    '0xde184a6809898d81186def5c0823d2107c001da2',
    660000000000000000000000000n,
    3456000n
  ],
  contractAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  formattedArgs: undefined,
  functionName: 'transferAndLock',
  sender: '0x417Dd0DDAA54E651e304A12c9810173F57876159'
}
🔄 重试第 13/50 次transferAndLock (3/3)
🔄 执行第 13/50 次transferAndLock操作
📤 第 13/50 次transferAndLock交易已发送: 0xcc3a54be0e89fe3e3431161fae173e851734ef4f70de6b8058b48c9a55286803
✅ 第 14/50 次transferAndLock成功 - Hash: 0x557ee180f858143c4e02f2f5fe8568e2a7ad3fdc77e60b0b47454e0d179c08c8
✅ 第 12/50 次transferAndLock成功 - Hash: 0x5db7f34f5d04a236008d8063a661cc85f91b2c6a364f8f577a88d80e98b9ddf4
✅ 第 11/50 次transferAndLock成功 - Hash: 0xf28af830359d27256f33ff8355e6eb84b6da50a1718a4e5386cc781e7471c9e0
✅ 第 15/50 次transferAndLock成功 - Hash: 0x159465fd4f7e30a079fa8ea477f53bfd94618d0a3f5d0fd3635d179282246d3a
✅ 第 13/50 次transferAndLock成功 - Hash: 0xcc3a54be0e89fe3e3431161fae173e851734ef4f70de6b8058b48c9a55286803
✅ 批次处理完成，剩余任务: 35
🔄 开始处理批次，大小: 5
🔄 执行第 16/50 次transferAndLock操作
🔄 执行第 17/50 次transferAndLock操作
🔄 执行第 18/50 次transferAndLock操作
🔄 执行第 19/50 次transferAndLock操作
🔄 执行第 20/50 次transferAndLock操作
📤 第 17/50 次transferAndLock交易已发送: 0xd81da4591d6953ab148e0d6ba595cd4a30ac2baddfb6ac302e90c8c06ad0c250
❌ 第 20/50 次transferAndLock异常: ContractFunctionExecutionError: The contract function "transferAndLock" reverted with the following reason:
already known

Contract Call:
  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)
  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
    at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:36:12)
    at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
    ... 7 lines matching cause stack trace ...
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
  cause: ContractFunctionRevertedError: The contract function "transferAndLock" reverted with the following reason:
  already known
  
  Version: viem@2.22.13
      at eval (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:27:20)
      at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:35:7)
      at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async executeTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:192:26)
      at async Promise.all (index 4)
      at async processQueue (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:251:13)
      at async batchTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:256:5)
      at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:705:37)
      at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
      at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
    details: undefined,
    docsPath: undefined,
    metaMessages: undefined,
    shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
      'already known',
    version: '2.22.13',
    data: undefined,
    raw: undefined,
    reason: 'already known',
    signature: undefined
  },
  details: undefined,
  docsPath: '/docs/contract/writeContract',
  metaMessages: [
    'Contract Call:',
    '  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669\n' +
      '  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)\n' +
      '  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)\n' +
      '  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159'
  ],
  shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
    'already known',
  version: '2.22.13',
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AddLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AdminChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Approval',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AuthorizedUpgradeSelf',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'BeaconUpgraded',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'DisableContractUpgrade',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [],
      name: 'EIP712DomainChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Initialized',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockDisabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockEnabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'OwnershipTransferred',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'RemoveLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Transfer',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'TransferAndLock',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Upgraded',
      type: 'event'
    },
    {
      inputs: [],
      name: 'DOMAIN_SEPARATOR',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'addLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'allowance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'approve',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'balanceOf',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burnFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'canTransferAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'canUpgradeAddress',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'decimals',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'decreaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableContractUpgrade',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableUpgrade',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'eip712Domain',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getAvailableBalance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getLockAmountAndUnlockAt',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'increaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'isLockActive',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensDisable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensEnable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'lockTransferAdmins',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'name',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'nonces',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'permit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'removeLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'setUpgradePermission',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transfer',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferAndLock',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferFrom',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'version',
      outputs: [Array],
      stateMutability: 'pure',
      type: 'function'
    }
  ],
  args: [
    '0xde184a6809898d81186def5c0823d2107c001da2',
    660000000000000000000000000n,
    3456000n
  ],
  contractAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  formattedArgs: undefined,
  functionName: 'transferAndLock',
  sender: '0x417Dd0DDAA54E651e304A12c9810173F57876159'
}
🔄 重试第 20/50 次transferAndLock (1/3)
🔄 执行第 20/50 次transferAndLock操作
❌ 第 18/50 次transferAndLock异常: ContractFunctionExecutionError: The contract function "transferAndLock" reverted with the following reason:
already known

Contract Call:
  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)
  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
    at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:36:12)
    at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
    ... 7 lines matching cause stack trace ...
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
  cause: ContractFunctionRevertedError: The contract function "transferAndLock" reverted with the following reason:
  already known
  
  Version: viem@2.22.13
      at eval (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:27:20)
      at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:35:7)
      at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async executeTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:192:26)
      at async Promise.all (index 2)
      at async processQueue (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:251:13)
      at async batchTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:256:5)
      at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:705:37)
      at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
      at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
    details: undefined,
    docsPath: undefined,
    metaMessages: undefined,
    shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
      'already known',
    version: '2.22.13',
    data: undefined,
    raw: undefined,
    reason: 'already known',
    signature: undefined
  },
  details: undefined,
  docsPath: '/docs/contract/writeContract',
  metaMessages: [
    'Contract Call:',
    '  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669\n' +
      '  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)\n' +
      '  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)\n' +
      '  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159'
  ],
  shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
    'already known',
  version: '2.22.13',
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AddLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AdminChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Approval',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AuthorizedUpgradeSelf',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'BeaconUpgraded',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'DisableContractUpgrade',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [],
      name: 'EIP712DomainChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Initialized',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockDisabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockEnabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'OwnershipTransferred',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'RemoveLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Transfer',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'TransferAndLock',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Upgraded',
      type: 'event'
    },
    {
      inputs: [],
      name: 'DOMAIN_SEPARATOR',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'addLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'allowance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'approve',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'balanceOf',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burnFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'canTransferAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'canUpgradeAddress',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'decimals',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'decreaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableContractUpgrade',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableUpgrade',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'eip712Domain',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getAvailableBalance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getLockAmountAndUnlockAt',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'increaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'isLockActive',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensDisable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensEnable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'lockTransferAdmins',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'name',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'nonces',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'permit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'removeLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'setUpgradePermission',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transfer',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferAndLock',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferFrom',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'version',
      outputs: [Array],
      stateMutability: 'pure',
      type: 'function'
    }
  ],
  args: [
    '0xde184a6809898d81186def5c0823d2107c001da2',
    660000000000000000000000000n,
    3456000n
  ],
  contractAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  formattedArgs: undefined,
  functionName: 'transferAndLock',
  sender: '0x417Dd0DDAA54E651e304A12c9810173F57876159'
}
🔄 重试第 18/50 次transferAndLock (1/3)
🔄 执行第 18/50 次transferAndLock操作
❌ 第 19/50 次transferAndLock异常: ContractFunctionExecutionError: The contract function "transferAndLock" reverted with the following reason:
already known

Contract Call:
  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)
  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
    at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:36:12)
    at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
    ... 7 lines matching cause stack trace ...
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
  cause: ContractFunctionRevertedError: The contract function "transferAndLock" reverted with the following reason:
  already known
  
  Version: viem@2.22.13
      at eval (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:27:20)
      at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:35:7)
      at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async executeTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:192:26)
      at async Promise.all (index 3)
      at async processQueue (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:251:13)
      at async batchTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:256:5)
      at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:705:37)
      at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
      at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
    details: undefined,
    docsPath: undefined,
    metaMessages: undefined,
    shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
      'already known',
    version: '2.22.13',
    data: undefined,
    raw: undefined,
    reason: 'already known',
    signature: undefined
  },
  details: undefined,
  docsPath: '/docs/contract/writeContract',
  metaMessages: [
    'Contract Call:',
    '  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669\n' +
      '  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)\n' +
      '  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)\n' +
      '  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159'
  ],
  shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
    'already known',
  version: '2.22.13',
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AddLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AdminChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Approval',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AuthorizedUpgradeSelf',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'BeaconUpgraded',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'DisableContractUpgrade',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [],
      name: 'EIP712DomainChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Initialized',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockDisabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockEnabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'OwnershipTransferred',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'RemoveLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Transfer',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'TransferAndLock',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Upgraded',
      type: 'event'
    },
    {
      inputs: [],
      name: 'DOMAIN_SEPARATOR',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'addLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'allowance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'approve',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'balanceOf',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burnFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'canTransferAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'canUpgradeAddress',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'decimals',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'decreaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableContractUpgrade',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableUpgrade',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'eip712Domain',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getAvailableBalance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getLockAmountAndUnlockAt',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'increaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'isLockActive',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensDisable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensEnable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'lockTransferAdmins',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'name',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'nonces',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'permit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'removeLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'setUpgradePermission',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transfer',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferAndLock',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferFrom',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'version',
      outputs: [Array],
      stateMutability: 'pure',
      type: 'function'
    }
  ],
  args: [
    '0xde184a6809898d81186def5c0823d2107c001da2',
    660000000000000000000000000n,
    3456000n
  ],
  contractAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  formattedArgs: undefined,
  functionName: 'transferAndLock',
  sender: '0x417Dd0DDAA54E651e304A12c9810173F57876159'
}
🔄 重试第 19/50 次transferAndLock (1/3)
🔄 执行第 19/50 次transferAndLock操作
❌ 第 16/50 次transferAndLock异常: ContractFunctionExecutionError: The contract function "transferAndLock" reverted with the following reason:
already known

Contract Call:
  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)
  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
    at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:36:12)
    at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
    ... 7 lines matching cause stack trace ...
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
  cause: ContractFunctionRevertedError: The contract function "transferAndLock" reverted with the following reason:
  already known
  
  Version: viem@2.22.13
      at eval (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:27:20)
      at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:35:7)
      at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async executeTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:192:26)
      at async Promise.all (index 0)
      at async processQueue (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:251:13)
      at async batchTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:256:5)
      at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:705:37)
      at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
      at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
    details: undefined,
    docsPath: undefined,
    metaMessages: undefined,
    shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
      'already known',
    version: '2.22.13',
    data: undefined,
    raw: undefined,
    reason: 'already known',
    signature: undefined
  },
  details: undefined,
  docsPath: '/docs/contract/writeContract',
  metaMessages: [
    'Contract Call:',
    '  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669\n' +
      '  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)\n' +
      '  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)\n' +
      '  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159'
  ],
  shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
    'already known',
  version: '2.22.13',
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AddLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AdminChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Approval',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AuthorizedUpgradeSelf',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'BeaconUpgraded',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'DisableContractUpgrade',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [],
      name: 'EIP712DomainChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Initialized',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockDisabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockEnabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'OwnershipTransferred',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'RemoveLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Transfer',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'TransferAndLock',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Upgraded',
      type: 'event'
    },
    {
      inputs: [],
      name: 'DOMAIN_SEPARATOR',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'addLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'allowance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'approve',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'balanceOf',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burnFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'canTransferAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'canUpgradeAddress',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'decimals',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'decreaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableContractUpgrade',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableUpgrade',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'eip712Domain',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getAvailableBalance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getLockAmountAndUnlockAt',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'increaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'isLockActive',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensDisable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensEnable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'lockTransferAdmins',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'name',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'nonces',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'permit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'removeLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'setUpgradePermission',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transfer',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferAndLock',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferFrom',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'version',
      outputs: [Array],
      stateMutability: 'pure',
      type: 'function'
    }
  ],
  args: [
    '0xde184a6809898d81186def5c0823d2107c001da2',
    660000000000000000000000000n,
    3456000n
  ],
  contractAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  formattedArgs: undefined,
  functionName: 'transferAndLock',
  sender: '0x417Dd0DDAA54E651e304A12c9810173F57876159'
}
🔄 重试第 16/50 次transferAndLock (1/3)
🔄 执行第 16/50 次transferAndLock操作
📤 第 20/50 次transferAndLock交易已发送: 0xe502dd4b8790e1c005b6dab5f4e58a9c9ff2922f3e0348ae9d28c4a2f2ca075c
❌ 第 18/50 次transferAndLock异常: ContractFunctionExecutionError: The contract function "transferAndLock" reverted with the following reason:
already known

Contract Call:
  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)
  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
    at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:36:12)
    at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
    ... 7 lines matching cause stack trace ...
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
  cause: ContractFunctionRevertedError: The contract function "transferAndLock" reverted with the following reason:
  already known
  
  Version: viem@2.22.13
      at eval (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:27:20)
      at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:35:7)
      at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async executeTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:192:26)
      at async Promise.all (index 2)
      at async processQueue (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:251:13)
      at async batchTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:256:5)
      at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:705:37)
      at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
      at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
    details: undefined,
    docsPath: undefined,
    metaMessages: undefined,
    shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
      'already known',
    version: '2.22.13',
    data: undefined,
    raw: undefined,
    reason: 'already known',
    signature: undefined
  },
  details: undefined,
  docsPath: '/docs/contract/writeContract',
  metaMessages: [
    'Contract Call:',
    '  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669\n' +
      '  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)\n' +
      '  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)\n' +
      '  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159'
  ],
  shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
    'already known',
  version: '2.22.13',
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AddLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AdminChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Approval',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AuthorizedUpgradeSelf',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'BeaconUpgraded',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'DisableContractUpgrade',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [],
      name: 'EIP712DomainChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Initialized',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockDisabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockEnabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'OwnershipTransferred',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'RemoveLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Transfer',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'TransferAndLock',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Upgraded',
      type: 'event'
    },
    {
      inputs: [],
      name: 'DOMAIN_SEPARATOR',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'addLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'allowance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'approve',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'balanceOf',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burnFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'canTransferAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'canUpgradeAddress',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'decimals',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'decreaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableContractUpgrade',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableUpgrade',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'eip712Domain',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getAvailableBalance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getLockAmountAndUnlockAt',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'increaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'isLockActive',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensDisable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensEnable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'lockTransferAdmins',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'name',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'nonces',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'permit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'removeLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'setUpgradePermission',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transfer',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferAndLock',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferFrom',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'version',
      outputs: [Array],
      stateMutability: 'pure',
      type: 'function'
    }
  ],
  args: [
    '0xde184a6809898d81186def5c0823d2107c001da2',
    660000000000000000000000000n,
    3456000n
  ],
  contractAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  formattedArgs: undefined,
  functionName: 'transferAndLock',
  sender: '0x417Dd0DDAA54E651e304A12c9810173F57876159'
}
🔄 重试第 18/50 次transferAndLock (2/3)
🔄 执行第 18/50 次transferAndLock操作
❌ 第 16/50 次transferAndLock异常: ContractFunctionExecutionError: The contract function "transferAndLock" reverted with the following reason:
already known

Contract Call:
  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)
  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
    at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:36:12)
    at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
    ... 7 lines matching cause stack trace ...
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
  cause: ContractFunctionRevertedError: The contract function "transferAndLock" reverted with the following reason:
  already known
  
  Version: viem@2.22.13
      at eval (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:27:20)
      at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:35:7)
      at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async executeTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:192:26)
      at async Promise.all (index 0)
      at async processQueue (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:251:13)
      at async batchTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:256:5)
      at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:705:37)
      at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
      at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
    details: undefined,
    docsPath: undefined,
    metaMessages: undefined,
    shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
      'already known',
    version: '2.22.13',
    data: undefined,
    raw: undefined,
    reason: 'already known',
    signature: undefined
  },
  details: undefined,
  docsPath: '/docs/contract/writeContract',
  metaMessages: [
    'Contract Call:',
    '  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669\n' +
      '  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)\n' +
      '  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)\n' +
      '  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159'
  ],
  shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
    'already known',
  version: '2.22.13',
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AddLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AdminChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Approval',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AuthorizedUpgradeSelf',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'BeaconUpgraded',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'DisableContractUpgrade',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [],
      name: 'EIP712DomainChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Initialized',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockDisabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockEnabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'OwnershipTransferred',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'RemoveLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Transfer',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'TransferAndLock',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Upgraded',
      type: 'event'
    },
    {
      inputs: [],
      name: 'DOMAIN_SEPARATOR',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'addLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'allowance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'approve',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'balanceOf',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burnFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'canTransferAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'canUpgradeAddress',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'decimals',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'decreaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableContractUpgrade',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableUpgrade',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'eip712Domain',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getAvailableBalance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getLockAmountAndUnlockAt',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'increaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'isLockActive',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensDisable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensEnable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'lockTransferAdmins',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'name',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'nonces',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'permit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'removeLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'setUpgradePermission',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transfer',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferAndLock',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferFrom',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'version',
      outputs: [Array],
      stateMutability: 'pure',
      type: 'function'
    }
  ],
  args: [
    '0xde184a6809898d81186def5c0823d2107c001da2',
    660000000000000000000000000n,
    3456000n
  ],
  contractAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  formattedArgs: undefined,
  functionName: 'transferAndLock',
  sender: '0x417Dd0DDAA54E651e304A12c9810173F57876159'
}
🔄 重试第 16/50 次transferAndLock (2/3)
🔄 执行第 16/50 次transferAndLock操作
📤 第 19/50 次transferAndLock交易已发送: 0x7e399b14f576aefc709c09e01a7b1adc6dc54dda5cdc306cef9e1b7ed4c0b0d0
📤 第 18/50 次transferAndLock交易已发送: 0x2940f182a8f8b6af9e445b4ad4aa43555cf23335dd21d5b4ad237889f6eec6de
❌ 第 16/50 次transferAndLock异常: ContractFunctionExecutionError: The contract function "transferAndLock" reverted with the following reason:
already known

Contract Call:
  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)
  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
    at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:36:12)
    at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
    ... 7 lines matching cause stack trace ...
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
  cause: ContractFunctionRevertedError: The contract function "transferAndLock" reverted with the following reason:
  already known
  
  Version: viem@2.22.13
      at eval (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:27:20)
      at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:35:7)
      at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async executeTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:192:26)
      at async Promise.all (index 0)
      at async processQueue (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:251:13)
      at async batchTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:256:5)
      at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:705:37)
      at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
      at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
    details: undefined,
    docsPath: undefined,
    metaMessages: undefined,
    shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
      'already known',
    version: '2.22.13',
    data: undefined,
    raw: undefined,
    reason: 'already known',
    signature: undefined
  },
  details: undefined,
  docsPath: '/docs/contract/writeContract',
  metaMessages: [
    'Contract Call:',
    '  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669\n' +
      '  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)\n' +
      '  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)\n' +
      '  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159'
  ],
  shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
    'already known',
  version: '2.22.13',
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AddLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AdminChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Approval',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AuthorizedUpgradeSelf',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'BeaconUpgraded',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'DisableContractUpgrade',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [],
      name: 'EIP712DomainChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Initialized',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockDisabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockEnabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'OwnershipTransferred',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'RemoveLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Transfer',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'TransferAndLock',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Upgraded',
      type: 'event'
    },
    {
      inputs: [],
      name: 'DOMAIN_SEPARATOR',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'addLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'allowance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'approve',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'balanceOf',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burnFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'canTransferAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'canUpgradeAddress',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'decimals',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'decreaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableContractUpgrade',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableUpgrade',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'eip712Domain',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getAvailableBalance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getLockAmountAndUnlockAt',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'increaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'isLockActive',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensDisable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensEnable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'lockTransferAdmins',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'name',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'nonces',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'permit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'removeLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'setUpgradePermission',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transfer',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferAndLock',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferFrom',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'version',
      outputs: [Array],
      stateMutability: 'pure',
      type: 'function'
    }
  ],
  args: [
    '0xde184a6809898d81186def5c0823d2107c001da2',
    660000000000000000000000000n,
    3456000n
  ],
  contractAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  formattedArgs: undefined,
  functionName: 'transferAndLock',
  sender: '0x417Dd0DDAA54E651e304A12c9810173F57876159'
}
🔄 重试第 16/50 次transferAndLock (3/3)
🔄 执行第 16/50 次transferAndLock操作
📤 第 16/50 次transferAndLock交易已发送: 0x72977e39f13880a5ef5f2bbb0cf15e222e1d072ab47e7ec976dc4669189e3771
✅ 第 17/50 次transferAndLock成功 - Hash: 0xd81da4591d6953ab148e0d6ba595cd4a30ac2baddfb6ac302e90c8c06ad0c250
✅ 第 20/50 次transferAndLock成功 - Hash: 0xe502dd4b8790e1c005b6dab5f4e58a9c9ff2922f3e0348ae9d28c4a2f2ca075c
✅ 第 16/50 次transferAndLock成功 - Hash: 0x72977e39f13880a5ef5f2bbb0cf15e222e1d072ab47e7ec976dc4669189e3771
✅ 第 18/50 次transferAndLock成功 - Hash: 0x2940f182a8f8b6af9e445b4ad4aa43555cf23335dd21d5b4ad237889f6eec6de
✅ 第 19/50 次transferAndLock成功 - Hash: 0x7e399b14f576aefc709c09e01a7b1adc6dc54dda5cdc306cef9e1b7ed4c0b0d0
✅ 批次处理完成，剩余任务: 30
🔄 开始处理批次，大小: 5
🔄 执行第 21/50 次transferAndLock操作
🔄 执行第 22/50 次transferAndLock操作
🔄 执行第 23/50 次transferAndLock操作
🔄 执行第 24/50 次transferAndLock操作
🔄 执行第 25/50 次transferAndLock操作
📤 第 23/50 次transferAndLock交易已发送: 0x74b555dbd8b6ac6eef18050459780d737664959795a6d8911e139bf0baefa90d
❌ 第 25/50 次transferAndLock异常: ContractFunctionExecutionError: The contract function "transferAndLock" reverted with the following reason:
already known

Contract Call:
  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)
  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
    at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:36:12)
    at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
    ... 7 lines matching cause stack trace ...
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
  cause: ContractFunctionRevertedError: The contract function "transferAndLock" reverted with the following reason:
  already known
  
  Version: viem@2.22.13
      at eval (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:27:20)
      at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:35:7)
      at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async executeTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:192:26)
      at async Promise.all (index 4)
      at async processQueue (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:251:13)
      at async batchTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:256:5)
      at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:705:37)
      at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
      at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
    details: undefined,
    docsPath: undefined,
    metaMessages: undefined,
    shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
      'already known',
    version: '2.22.13',
    data: undefined,
    raw: undefined,
    reason: 'already known',
    signature: undefined
  },
  details: undefined,
  docsPath: '/docs/contract/writeContract',
  metaMessages: [
    'Contract Call:',
    '  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669\n' +
      '  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)\n' +
      '  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)\n' +
      '  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159'
  ],
  shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
    'already known',
  version: '2.22.13',
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AddLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AdminChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Approval',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AuthorizedUpgradeSelf',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'BeaconUpgraded',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'DisableContractUpgrade',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [],
      name: 'EIP712DomainChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Initialized',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockDisabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockEnabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'OwnershipTransferred',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'RemoveLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Transfer',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'TransferAndLock',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Upgraded',
      type: 'event'
    },
    {
      inputs: [],
      name: 'DOMAIN_SEPARATOR',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'addLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'allowance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'approve',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'balanceOf',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burnFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'canTransferAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'canUpgradeAddress',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'decimals',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'decreaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableContractUpgrade',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableUpgrade',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'eip712Domain',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getAvailableBalance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getLockAmountAndUnlockAt',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'increaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'isLockActive',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensDisable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensEnable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'lockTransferAdmins',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'name',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'nonces',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'permit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'removeLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'setUpgradePermission',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transfer',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferAndLock',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferFrom',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'version',
      outputs: [Array],
      stateMutability: 'pure',
      type: 'function'
    }
  ],
  args: [
    '0xde184a6809898d81186def5c0823d2107c001da2',
    660000000000000000000000000n,
    3456000n
  ],
  contractAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  formattedArgs: undefined,
  functionName: 'transferAndLock',
  sender: '0x417Dd0DDAA54E651e304A12c9810173F57876159'
}
🔄 重试第 25/50 次transferAndLock (1/3)
🔄 执行第 25/50 次transferAndLock操作
❌ 第 22/50 次transferAndLock异常: ContractFunctionExecutionError: The contract function "transferAndLock" reverted with the following reason:
already known

Contract Call:
  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)
  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
    at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:36:12)
    at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
    ... 7 lines matching cause stack trace ...
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
  cause: ContractFunctionRevertedError: The contract function "transferAndLock" reverted with the following reason:
  already known
  
  Version: viem@2.22.13
      at eval (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:27:20)
      at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:35:7)
      at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async executeTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:192:26)
      at async Promise.all (index 1)
      at async processQueue (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:251:13)
      at async batchTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:256:5)
      at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:705:37)
      at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
      at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
    details: undefined,
    docsPath: undefined,
    metaMessages: undefined,
    shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
      'already known',
    version: '2.22.13',
    data: undefined,
    raw: undefined,
    reason: 'already known',
    signature: undefined
  },
  details: undefined,
  docsPath: '/docs/contract/writeContract',
  metaMessages: [
    'Contract Call:',
    '  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669\n' +
      '  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)\n' +
      '  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)\n' +
      '  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159'
  ],
  shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
    'already known',
  version: '2.22.13',
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AddLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AdminChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Approval',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AuthorizedUpgradeSelf',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'BeaconUpgraded',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'DisableContractUpgrade',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [],
      name: 'EIP712DomainChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Initialized',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockDisabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockEnabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'OwnershipTransferred',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'RemoveLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Transfer',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'TransferAndLock',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Upgraded',
      type: 'event'
    },
    {
      inputs: [],
      name: 'DOMAIN_SEPARATOR',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'addLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'allowance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'approve',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'balanceOf',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burnFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'canTransferAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'canUpgradeAddress',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'decimals',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'decreaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableContractUpgrade',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableUpgrade',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'eip712Domain',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getAvailableBalance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getLockAmountAndUnlockAt',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'increaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'isLockActive',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensDisable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensEnable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'lockTransferAdmins',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'name',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'nonces',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'permit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'removeLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'setUpgradePermission',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transfer',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferAndLock',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferFrom',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'version',
      outputs: [Array],
      stateMutability: 'pure',
      type: 'function'
    }
  ],
  args: [
    '0xde184a6809898d81186def5c0823d2107c001da2',
    660000000000000000000000000n,
    3456000n
  ],
  contractAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  formattedArgs: undefined,
  functionName: 'transferAndLock',
  sender: '0x417Dd0DDAA54E651e304A12c9810173F57876159'
}
🔄 重试第 22/50 次transferAndLock (1/3)
🔄 执行第 22/50 次transferAndLock操作
❌ 第 24/50 次transferAndLock异常: ContractFunctionExecutionError: The contract function "transferAndLock" reverted with the following reason:
already known

Contract Call:
  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)
  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
    at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:36:12)
    at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
    ... 7 lines matching cause stack trace ...
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
  cause: ContractFunctionRevertedError: The contract function "transferAndLock" reverted with the following reason:
  already known
  
  Version: viem@2.22.13
      at eval (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:27:20)
      at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:35:7)
      at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async executeTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:192:26)
      at async Promise.all (index 3)
      at async processQueue (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:251:13)
      at async batchTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:256:5)
      at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:705:37)
      at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
      at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
    details: undefined,
    docsPath: undefined,
    metaMessages: undefined,
    shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
      'already known',
    version: '2.22.13',
    data: undefined,
    raw: undefined,
    reason: 'already known',
    signature: undefined
  },
  details: undefined,
  docsPath: '/docs/contract/writeContract',
  metaMessages: [
    'Contract Call:',
    '  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669\n' +
      '  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)\n' +
      '  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)\n' +
      '  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159'
  ],
  shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
    'already known',
  version: '2.22.13',
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AddLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AdminChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Approval',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AuthorizedUpgradeSelf',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'BeaconUpgraded',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'DisableContractUpgrade',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [],
      name: 'EIP712DomainChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Initialized',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockDisabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockEnabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'OwnershipTransferred',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'RemoveLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Transfer',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'TransferAndLock',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Upgraded',
      type: 'event'
    },
    {
      inputs: [],
      name: 'DOMAIN_SEPARATOR',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'addLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'allowance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'approve',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'balanceOf',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burnFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'canTransferAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'canUpgradeAddress',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'decimals',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'decreaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableContractUpgrade',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableUpgrade',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'eip712Domain',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getAvailableBalance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getLockAmountAndUnlockAt',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'increaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'isLockActive',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensDisable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensEnable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'lockTransferAdmins',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'name',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'nonces',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'permit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'removeLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'setUpgradePermission',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transfer',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferAndLock',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferFrom',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'version',
      outputs: [Array],
      stateMutability: 'pure',
      type: 'function'
    }
  ],
  args: [
    '0xde184a6809898d81186def5c0823d2107c001da2',
    660000000000000000000000000n,
    3456000n
  ],
  contractAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  formattedArgs: undefined,
  functionName: 'transferAndLock',
  sender: '0x417Dd0DDAA54E651e304A12c9810173F57876159'
}
🔄 重试第 24/50 次transferAndLock (1/3)
🔄 执行第 24/50 次transferAndLock操作
📤 第 21/50 次transferAndLock交易已发送: 0x3e6da0d2eb14d23b9cd810f95351a6f041cb1cc638d3d0bf0ecf7baa1e095beb
❌ 第 25/50 次transferAndLock异常: ContractFunctionExecutionError: The contract function "transferAndLock" reverted with the following reason:
already known

Contract Call:
  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)
  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
    at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:36:12)
    at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
    ... 7 lines matching cause stack trace ...
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
  cause: ContractFunctionRevertedError: The contract function "transferAndLock" reverted with the following reason:
  already known
  
  Version: viem@2.22.13
      at eval (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:27:20)
      at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:35:7)
      at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async executeTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:192:26)
      at async Promise.all (index 4)
      at async processQueue (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:251:13)
      at async batchTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:256:5)
      at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:705:37)
      at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
      at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
    details: undefined,
    docsPath: undefined,
    metaMessages: undefined,
    shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
      'already known',
    version: '2.22.13',
    data: undefined,
    raw: undefined,
    reason: 'already known',
    signature: undefined
  },
  details: undefined,
  docsPath: '/docs/contract/writeContract',
  metaMessages: [
    'Contract Call:',
    '  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669\n' +
      '  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)\n' +
      '  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)\n' +
      '  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159'
  ],
  shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
    'already known',
  version: '2.22.13',
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AddLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AdminChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Approval',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AuthorizedUpgradeSelf',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'BeaconUpgraded',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'DisableContractUpgrade',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [],
      name: 'EIP712DomainChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Initialized',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockDisabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockEnabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'OwnershipTransferred',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'RemoveLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Transfer',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'TransferAndLock',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Upgraded',
      type: 'event'
    },
    {
      inputs: [],
      name: 'DOMAIN_SEPARATOR',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'addLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'allowance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'approve',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'balanceOf',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burnFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'canTransferAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'canUpgradeAddress',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'decimals',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'decreaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableContractUpgrade',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableUpgrade',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'eip712Domain',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getAvailableBalance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getLockAmountAndUnlockAt',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'increaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'isLockActive',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensDisable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensEnable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'lockTransferAdmins',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'name',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'nonces',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'permit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'removeLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'setUpgradePermission',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transfer',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferAndLock',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferFrom',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'version',
      outputs: [Array],
      stateMutability: 'pure',
      type: 'function'
    }
  ],
  args: [
    '0xde184a6809898d81186def5c0823d2107c001da2',
    660000000000000000000000000n,
    3456000n
  ],
  contractAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  formattedArgs: undefined,
  functionName: 'transferAndLock',
  sender: '0x417Dd0DDAA54E651e304A12c9810173F57876159'
}
🔄 重试第 25/50 次transferAndLock (2/3)
🔄 执行第 25/50 次transferAndLock操作
📤 第 22/50 次transferAndLock交易已发送: 0x8784ffbf6765b7b2f5b4672d06a4d835584e70b825e653de6dedbc63832f0412
❌ 第 24/50 次transferAndLock异常: ContractFunctionExecutionError: The contract function "transferAndLock" reverted with the following reason:
already known

Contract Call:
  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)
  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
    at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:36:12)
    at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
    ... 7 lines matching cause stack trace ...
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
  cause: ContractFunctionRevertedError: The contract function "transferAndLock" reverted with the following reason:
  already known
  
  Version: viem@2.22.13
      at eval (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:27:20)
      at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:35:7)
      at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async executeTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:192:26)
      at async Promise.all (index 3)
      at async processQueue (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:251:13)
      at async batchTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:256:5)
      at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:705:37)
      at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
      at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
    details: undefined,
    docsPath: undefined,
    metaMessages: undefined,
    shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
      'already known',
    version: '2.22.13',
    data: undefined,
    raw: undefined,
    reason: 'already known',
    signature: undefined
  },
  details: undefined,
  docsPath: '/docs/contract/writeContract',
  metaMessages: [
    'Contract Call:',
    '  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669\n' +
      '  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)\n' +
      '  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)\n' +
      '  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159'
  ],
  shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
    'already known',
  version: '2.22.13',
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AddLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AdminChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Approval',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AuthorizedUpgradeSelf',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'BeaconUpgraded',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'DisableContractUpgrade',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [],
      name: 'EIP712DomainChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Initialized',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockDisabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockEnabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'OwnershipTransferred',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'RemoveLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Transfer',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'TransferAndLock',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Upgraded',
      type: 'event'
    },
    {
      inputs: [],
      name: 'DOMAIN_SEPARATOR',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'addLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'allowance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'approve',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'balanceOf',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burnFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'canTransferAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'canUpgradeAddress',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'decimals',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'decreaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableContractUpgrade',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableUpgrade',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'eip712Domain',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getAvailableBalance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getLockAmountAndUnlockAt',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'increaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'isLockActive',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensDisable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensEnable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'lockTransferAdmins',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'name',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'nonces',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'permit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'removeLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'setUpgradePermission',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transfer',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferAndLock',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferFrom',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'version',
      outputs: [Array],
      stateMutability: 'pure',
      type: 'function'
    }
  ],
  args: [
    '0xde184a6809898d81186def5c0823d2107c001da2',
    660000000000000000000000000n,
    3456000n
  ],
  contractAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  formattedArgs: undefined,
  functionName: 'transferAndLock',
  sender: '0x417Dd0DDAA54E651e304A12c9810173F57876159'
}
🔄 重试第 24/50 次transferAndLock (2/3)
🔄 执行第 24/50 次transferAndLock操作
📤 第 25/50 次transferAndLock交易已发送: 0x9dd88ba79685a9e831f711bb51dcec5cc22bfa1e6ce767ef2971047b6972d59e
❌ 第 24/50 次transferAndLock异常: ContractFunctionExecutionError: The contract function "transferAndLock" reverted with the following reason:
already known

Contract Call:
  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)
  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
    at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:36:12)
    at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
    ... 7 lines matching cause stack trace ...
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
  cause: ContractFunctionRevertedError: The contract function "transferAndLock" reverted with the following reason:
  already known
  
  Version: viem@2.22.13
      at eval (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:27:20)
      at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:35:7)
      at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async executeTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:192:26)
      at async Promise.all (index 3)
      at async processQueue (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:251:13)
      at async batchTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:256:5)
      at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:705:37)
      at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
      at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
    details: undefined,
    docsPath: undefined,
    metaMessages: undefined,
    shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
      'already known',
    version: '2.22.13',
    data: undefined,
    raw: undefined,
    reason: 'already known',
    signature: undefined
  },
  details: undefined,
  docsPath: '/docs/contract/writeContract',
  metaMessages: [
    'Contract Call:',
    '  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669\n' +
      '  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)\n' +
      '  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)\n' +
      '  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159'
  ],
  shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
    'already known',
  version: '2.22.13',
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AddLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AdminChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Approval',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AuthorizedUpgradeSelf',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'BeaconUpgraded',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'DisableContractUpgrade',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [],
      name: 'EIP712DomainChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Initialized',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockDisabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockEnabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'OwnershipTransferred',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'RemoveLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Transfer',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'TransferAndLock',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Upgraded',
      type: 'event'
    },
    {
      inputs: [],
      name: 'DOMAIN_SEPARATOR',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'addLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'allowance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'approve',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'balanceOf',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burnFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'canTransferAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'canUpgradeAddress',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'decimals',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'decreaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableContractUpgrade',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableUpgrade',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'eip712Domain',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getAvailableBalance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getLockAmountAndUnlockAt',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'increaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'isLockActive',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensDisable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensEnable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'lockTransferAdmins',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'name',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'nonces',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'permit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'removeLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'setUpgradePermission',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transfer',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferAndLock',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferFrom',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'version',
      outputs: [Array],
      stateMutability: 'pure',
      type: 'function'
    }
  ],
  args: [
    '0xde184a6809898d81186def5c0823d2107c001da2',
    660000000000000000000000000n,
    3456000n
  ],
  contractAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  formattedArgs: undefined,
  functionName: 'transferAndLock',
  sender: '0x417Dd0DDAA54E651e304A12c9810173F57876159'
}
🔄 重试第 24/50 次transferAndLock (3/3)
🔄 执行第 24/50 次transferAndLock操作
📤 第 24/50 次transferAndLock交易已发送: 0x70b698817fa1c1394f72c20940564ffdfbee321ecd3096ed49fad47dde743bd8
✅ 第 23/50 次transferAndLock成功 - Hash: 0x74b555dbd8b6ac6eef18050459780d737664959795a6d8911e139bf0baefa90d
✅ 第 21/50 次transferAndLock成功 - Hash: 0x3e6da0d2eb14d23b9cd810f95351a6f041cb1cc638d3d0bf0ecf7baa1e095beb
✅ 第 24/50 次transferAndLock成功 - Hash: 0x70b698817fa1c1394f72c20940564ffdfbee321ecd3096ed49fad47dde743bd8
✅ 第 22/50 次transferAndLock成功 - Hash: 0x8784ffbf6765b7b2f5b4672d06a4d835584e70b825e653de6dedbc63832f0412
✅ 第 25/50 次transferAndLock成功 - Hash: 0x9dd88ba79685a9e831f711bb51dcec5cc22bfa1e6ce767ef2971047b6972d59e
✅ 批次处理完成，剩余任务: 25
🔄 开始处理批次，大小: 5
🔄 执行第 26/50 次transferAndLock操作
🔄 执行第 27/50 次transferAndLock操作
🔄 执行第 28/50 次transferAndLock操作
🔄 执行第 29/50 次transferAndLock操作
🔄 执行第 30/50 次transferAndLock操作
📤 第 27/50 次transferAndLock交易已发送: 0x6d538753a71603341dffb7327d7d128eac087c50667ad1cf7e19e4d4f5ae8ce5
❌ 第 30/50 次transferAndLock异常: ContractFunctionExecutionError: The contract function "transferAndLock" reverted with the following reason:
already known

Contract Call:
  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)
  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
    at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:36:12)
    at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
    ... 7 lines matching cause stack trace ...
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
  cause: ContractFunctionRevertedError: The contract function "transferAndLock" reverted with the following reason:
  already known
  
  Version: viem@2.22.13
      at eval (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:27:20)
      at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:35:7)
      at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async executeTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:192:26)
      at async Promise.all (index 4)
      at async processQueue (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:251:13)
      at async batchTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:256:5)
      at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:705:37)
      at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
      at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
    details: undefined,
    docsPath: undefined,
    metaMessages: undefined,
    shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
      'already known',
    version: '2.22.13',
    data: undefined,
    raw: undefined,
    reason: 'already known',
    signature: undefined
  },
  details: undefined,
  docsPath: '/docs/contract/writeContract',
  metaMessages: [
    'Contract Call:',
    '  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669\n' +
      '  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)\n' +
      '  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)\n' +
      '  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159'
  ],
  shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
    'already known',
  version: '2.22.13',
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AddLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AdminChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Approval',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AuthorizedUpgradeSelf',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'BeaconUpgraded',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'DisableContractUpgrade',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [],
      name: 'EIP712DomainChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Initialized',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockDisabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockEnabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'OwnershipTransferred',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'RemoveLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Transfer',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'TransferAndLock',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Upgraded',
      type: 'event'
    },
    {
      inputs: [],
      name: 'DOMAIN_SEPARATOR',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'addLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'allowance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'approve',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'balanceOf',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burnFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'canTransferAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'canUpgradeAddress',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'decimals',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'decreaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableContractUpgrade',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableUpgrade',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'eip712Domain',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getAvailableBalance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getLockAmountAndUnlockAt',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'increaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'isLockActive',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensDisable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensEnable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'lockTransferAdmins',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'name',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'nonces',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'permit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'removeLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'setUpgradePermission',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transfer',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferAndLock',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferFrom',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'version',
      outputs: [Array],
      stateMutability: 'pure',
      type: 'function'
    }
  ],
  args: [
    '0xde184a6809898d81186def5c0823d2107c001da2',
    660000000000000000000000000n,
    3456000n
  ],
  contractAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  formattedArgs: undefined,
  functionName: 'transferAndLock',
  sender: '0x417Dd0DDAA54E651e304A12c9810173F57876159'
}
🔄 重试第 30/50 次transferAndLock (1/3)
🔄 执行第 30/50 次transferAndLock操作
❌ 第 28/50 次transferAndLock异常: ContractFunctionExecutionError: The contract function "transferAndLock" reverted with the following reason:
already known

Contract Call:
  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)
  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
    at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:36:12)
    at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
    ... 7 lines matching cause stack trace ...
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
  cause: ContractFunctionRevertedError: The contract function "transferAndLock" reverted with the following reason:
  already known
  
  Version: viem@2.22.13
      at eval (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:27:20)
      at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:35:7)
      at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async executeTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:192:26)
      at async Promise.all (index 2)
      at async processQueue (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:251:13)
      at async batchTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:256:5)
      at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:705:37)
      at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
      at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
    details: undefined,
    docsPath: undefined,
    metaMessages: undefined,
    shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
      'already known',
    version: '2.22.13',
    data: undefined,
    raw: undefined,
    reason: 'already known',
    signature: undefined
  },
  details: undefined,
  docsPath: '/docs/contract/writeContract',
  metaMessages: [
    'Contract Call:',
    '  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669\n' +
      '  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)\n' +
      '  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)\n' +
      '  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159'
  ],
  shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
    'already known',
  version: '2.22.13',
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AddLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AdminChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Approval',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AuthorizedUpgradeSelf',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'BeaconUpgraded',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'DisableContractUpgrade',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [],
      name: 'EIP712DomainChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Initialized',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockDisabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockEnabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'OwnershipTransferred',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'RemoveLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Transfer',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'TransferAndLock',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Upgraded',
      type: 'event'
    },
    {
      inputs: [],
      name: 'DOMAIN_SEPARATOR',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'addLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'allowance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'approve',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'balanceOf',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burnFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'canTransferAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'canUpgradeAddress',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'decimals',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'decreaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableContractUpgrade',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableUpgrade',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'eip712Domain',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getAvailableBalance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getLockAmountAndUnlockAt',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'increaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'isLockActive',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensDisable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensEnable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'lockTransferAdmins',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'name',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'nonces',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'permit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'removeLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'setUpgradePermission',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transfer',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferAndLock',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferFrom',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'version',
      outputs: [Array],
      stateMutability: 'pure',
      type: 'function'
    }
  ],
  args: [
    '0xde184a6809898d81186def5c0823d2107c001da2',
    660000000000000000000000000n,
    3456000n
  ],
  contractAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  formattedArgs: undefined,
  functionName: 'transferAndLock',
  sender: '0x417Dd0DDAA54E651e304A12c9810173F57876159'
}
🔄 重试第 28/50 次transferAndLock (1/3)
🔄 执行第 28/50 次transferAndLock操作
❌ 第 29/50 次transferAndLock异常: ContractFunctionExecutionError: The contract function "transferAndLock" reverted with the following reason:
already known

Contract Call:
  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)
  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
    at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:36:12)
    at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
    ... 7 lines matching cause stack trace ...
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
  cause: ContractFunctionRevertedError: The contract function "transferAndLock" reverted with the following reason:
  already known
  
  Version: viem@2.22.13
      at eval (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:27:20)
      at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:35:7)
      at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async executeTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:192:26)
      at async Promise.all (index 3)
      at async processQueue (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:251:13)
      at async batchTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:256:5)
      at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:705:37)
      at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
      at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
    details: undefined,
    docsPath: undefined,
    metaMessages: undefined,
    shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
      'already known',
    version: '2.22.13',
    data: undefined,
    raw: undefined,
    reason: 'already known',
    signature: undefined
  },
  details: undefined,
  docsPath: '/docs/contract/writeContract',
  metaMessages: [
    'Contract Call:',
    '  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669\n' +
      '  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)\n' +
      '  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)\n' +
      '  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159'
  ],
  shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
    'already known',
  version: '2.22.13',
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AddLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AdminChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Approval',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AuthorizedUpgradeSelf',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'BeaconUpgraded',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'DisableContractUpgrade',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [],
      name: 'EIP712DomainChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Initialized',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockDisabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockEnabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'OwnershipTransferred',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'RemoveLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Transfer',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'TransferAndLock',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Upgraded',
      type: 'event'
    },
    {
      inputs: [],
      name: 'DOMAIN_SEPARATOR',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'addLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'allowance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'approve',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'balanceOf',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burnFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'canTransferAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'canUpgradeAddress',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'decimals',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'decreaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableContractUpgrade',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableUpgrade',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'eip712Domain',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getAvailableBalance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getLockAmountAndUnlockAt',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'increaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'isLockActive',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensDisable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensEnable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'lockTransferAdmins',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'name',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'nonces',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'permit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'removeLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'setUpgradePermission',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transfer',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferAndLock',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferFrom',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'version',
      outputs: [Array],
      stateMutability: 'pure',
      type: 'function'
    }
  ],
  args: [
    '0xde184a6809898d81186def5c0823d2107c001da2',
    660000000000000000000000000n,
    3456000n
  ],
  contractAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  formattedArgs: undefined,
  functionName: 'transferAndLock',
  sender: '0x417Dd0DDAA54E651e304A12c9810173F57876159'
}
🔄 重试第 29/50 次transferAndLock (1/3)
🔄 执行第 29/50 次transferAndLock操作
📤 第 26/50 次transferAndLock交易已发送: 0xe002d2809f2341fe4777abf750782d3211b5a7402c0d5a6f6769d2f7a3509c9d
📤 第 28/50 次transferAndLock交易已发送: 0x34ba79eddabcc0060c0bc5fd1200f66ba83df4ed0a4284a5611b1c248f5b5b99
❌ 第 29/50 次transferAndLock异常: ContractFunctionExecutionError: The contract function "transferAndLock" reverted with the following reason:
already known

Contract Call:
  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)
  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
    at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:36:12)
    at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
    ... 7 lines matching cause stack trace ...
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
  cause: ContractFunctionRevertedError: The contract function "transferAndLock" reverted with the following reason:
  already known
  
  Version: viem@2.22.13
      at eval (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:27:20)
      at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:35:7)
      at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async executeTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:192:26)
      at async Promise.all (index 3)
      at async processQueue (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:251:13)
      at async batchTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:256:5)
      at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:705:37)
      at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
      at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
    details: undefined,
    docsPath: undefined,
    metaMessages: undefined,
    shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
      'already known',
    version: '2.22.13',
    data: undefined,
    raw: undefined,
    reason: 'already known',
    signature: undefined
  },
  details: undefined,
  docsPath: '/docs/contract/writeContract',
  metaMessages: [
    'Contract Call:',
    '  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669\n' +
      '  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)\n' +
      '  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)\n' +
      '  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159'
  ],
  shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
    'already known',
  version: '2.22.13',
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AddLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AdminChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Approval',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AuthorizedUpgradeSelf',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'BeaconUpgraded',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'DisableContractUpgrade',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [],
      name: 'EIP712DomainChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Initialized',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockDisabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockEnabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'OwnershipTransferred',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'RemoveLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Transfer',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'TransferAndLock',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Upgraded',
      type: 'event'
    },
    {
      inputs: [],
      name: 'DOMAIN_SEPARATOR',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'addLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'allowance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'approve',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'balanceOf',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burnFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'canTransferAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'canUpgradeAddress',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'decimals',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'decreaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableContractUpgrade',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableUpgrade',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'eip712Domain',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getAvailableBalance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getLockAmountAndUnlockAt',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'increaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'isLockActive',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensDisable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensEnable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'lockTransferAdmins',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'name',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'nonces',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'permit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'removeLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'setUpgradePermission',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transfer',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferAndLock',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferFrom',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'version',
      outputs: [Array],
      stateMutability: 'pure',
      type: 'function'
    }
  ],
  args: [
    '0xde184a6809898d81186def5c0823d2107c001da2',
    660000000000000000000000000n,
    3456000n
  ],
  contractAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  formattedArgs: undefined,
  functionName: 'transferAndLock',
  sender: '0x417Dd0DDAA54E651e304A12c9810173F57876159'
}
🔄 重试第 29/50 次transferAndLock (2/3)
🔄 执行第 29/50 次transferAndLock操作
❌ 第 30/50 次transferAndLock异常: ContractFunctionExecutionError: The contract function "transferAndLock" reverted with the following reason:
already known

Contract Call:
  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)
  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
    at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:36:12)
    at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
    ... 7 lines matching cause stack trace ...
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
  cause: ContractFunctionRevertedError: The contract function "transferAndLock" reverted with the following reason:
  already known
  
  Version: viem@2.22.13
      at eval (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:27:20)
      at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:35:7)
      at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async executeTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:192:26)
      at async Promise.all (index 4)
      at async processQueue (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:251:13)
      at async batchTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:256:5)
      at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:705:37)
      at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
      at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
    details: undefined,
    docsPath: undefined,
    metaMessages: undefined,
    shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
      'already known',
    version: '2.22.13',
    data: undefined,
    raw: undefined,
    reason: 'already known',
    signature: undefined
  },
  details: undefined,
  docsPath: '/docs/contract/writeContract',
  metaMessages: [
    'Contract Call:',
    '  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669\n' +
      '  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)\n' +
      '  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)\n' +
      '  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159'
  ],
  shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
    'already known',
  version: '2.22.13',
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AddLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AdminChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Approval',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AuthorizedUpgradeSelf',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'BeaconUpgraded',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'DisableContractUpgrade',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [],
      name: 'EIP712DomainChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Initialized',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockDisabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockEnabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'OwnershipTransferred',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'RemoveLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Transfer',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'TransferAndLock',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Upgraded',
      type: 'event'
    },
    {
      inputs: [],
      name: 'DOMAIN_SEPARATOR',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'addLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'allowance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'approve',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'balanceOf',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burnFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'canTransferAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'canUpgradeAddress',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'decimals',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'decreaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableContractUpgrade',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableUpgrade',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'eip712Domain',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getAvailableBalance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getLockAmountAndUnlockAt',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'increaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'isLockActive',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensDisable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensEnable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'lockTransferAdmins',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'name',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'nonces',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'permit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'removeLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'setUpgradePermission',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transfer',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferAndLock',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferFrom',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'version',
      outputs: [Array],
      stateMutability: 'pure',
      type: 'function'
    }
  ],
  args: [
    '0xde184a6809898d81186def5c0823d2107c001da2',
    660000000000000000000000000n,
    3456000n
  ],
  contractAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  formattedArgs: undefined,
  functionName: 'transferAndLock',
  sender: '0x417Dd0DDAA54E651e304A12c9810173F57876159'
}
🔄 重试第 30/50 次transferAndLock (2/3)
🔄 执行第 30/50 次transferAndLock操作
📤 第 29/50 次transferAndLock交易已发送: 0x0fe1c7496d0b9f7962f0d81bb27871252ca3417e063037d0b6cbfa87483e6a64
📤 第 30/50 次transferAndLock交易已发送: 0xf9fafc1d376bd9533a40cc646059124f3f02eb64721f2b375bb6d79ec9c3e2ef
✅ 第 27/50 次transferAndLock成功 - Hash: 0x6d538753a71603341dffb7327d7d128eac087c50667ad1cf7e19e4d4f5ae8ce5
✅ 第 26/50 次transferAndLock成功 - Hash: 0xe002d2809f2341fe4777abf750782d3211b5a7402c0d5a6f6769d2f7a3509c9d
✅ 第 29/50 次transferAndLock成功 - Hash: 0x0fe1c7496d0b9f7962f0d81bb27871252ca3417e063037d0b6cbfa87483e6a64
✅ 第 30/50 次transferAndLock成功 - Hash: 0xf9fafc1d376bd9533a40cc646059124f3f02eb64721f2b375bb6d79ec9c3e2ef
✅ 第 28/50 次transferAndLock成功 - Hash: 0x34ba79eddabcc0060c0bc5fd1200f66ba83df4ed0a4284a5611b1c248f5b5b99
✅ 批次处理完成，剩余任务: 20
🔄 开始处理批次，大小: 5
🔄 执行第 31/50 次transferAndLock操作
🔄 执行第 32/50 次transferAndLock操作
🔄 执行第 33/50 次transferAndLock操作
🔄 执行第 34/50 次transferAndLock操作
🔄 执行第 35/50 次transferAndLock操作
📤 第 32/50 次transferAndLock交易已发送: 0x18a598a21d9642001566c3c0f4a0bb82a14e1d0f0312e8ef25b9e2011ef2db41
❌ 第 33/50 次transferAndLock异常: ContractFunctionExecutionError: The contract function "transferAndLock" reverted with the following reason:
already known

Contract Call:
  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)
  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
    at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:36:12)
    at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
    ... 7 lines matching cause stack trace ...
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
  cause: ContractFunctionRevertedError: The contract function "transferAndLock" reverted with the following reason:
  already known
  
  Version: viem@2.22.13
      at eval (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:27:20)
      at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:35:7)
      at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async executeTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:192:26)
      at async Promise.all (index 2)
      at async processQueue (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:251:13)
      at async batchTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:256:5)
      at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:705:37)
      at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
      at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
    details: undefined,
    docsPath: undefined,
    metaMessages: undefined,
    shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
      'already known',
    version: '2.22.13',
    data: undefined,
    raw: undefined,
    reason: 'already known',
    signature: undefined
  },
  details: undefined,
  docsPath: '/docs/contract/writeContract',
  metaMessages: [
    'Contract Call:',
    '  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669\n' +
      '  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)\n' +
      '  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)\n' +
      '  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159'
  ],
  shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
    'already known',
  version: '2.22.13',
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AddLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AdminChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Approval',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AuthorizedUpgradeSelf',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'BeaconUpgraded',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'DisableContractUpgrade',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [],
      name: 'EIP712DomainChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Initialized',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockDisabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockEnabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'OwnershipTransferred',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'RemoveLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Transfer',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'TransferAndLock',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Upgraded',
      type: 'event'
    },
    {
      inputs: [],
      name: 'DOMAIN_SEPARATOR',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'addLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'allowance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'approve',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'balanceOf',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burnFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'canTransferAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'canUpgradeAddress',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'decimals',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'decreaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableContractUpgrade',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableUpgrade',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'eip712Domain',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getAvailableBalance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getLockAmountAndUnlockAt',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'increaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'isLockActive',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensDisable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensEnable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'lockTransferAdmins',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'name',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'nonces',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'permit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'removeLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'setUpgradePermission',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transfer',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferAndLock',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferFrom',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'version',
      outputs: [Array],
      stateMutability: 'pure',
      type: 'function'
    }
  ],
  args: [
    '0xde184a6809898d81186def5c0823d2107c001da2',
    660000000000000000000000000n,
    3456000n
  ],
  contractAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  formattedArgs: undefined,
  functionName: 'transferAndLock',
  sender: '0x417Dd0DDAA54E651e304A12c9810173F57876159'
}
🔄 重试第 33/50 次transferAndLock (1/3)
🔄 执行第 33/50 次transferAndLock操作
❌ 第 35/50 次transferAndLock异常: ContractFunctionExecutionError: The contract function "transferAndLock" reverted with the following reason:
already known

Contract Call:
  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)
  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
    at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:36:12)
    at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
    ... 7 lines matching cause stack trace ...
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
  cause: ContractFunctionRevertedError: The contract function "transferAndLock" reverted with the following reason:
  already known
  
  Version: viem@2.22.13
      at eval (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:27:20)
      at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:35:7)
      at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async executeTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:192:26)
      at async Promise.all (index 4)
      at async processQueue (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:251:13)
      at async batchTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:256:5)
      at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:705:37)
      at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
      at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
    details: undefined,
    docsPath: undefined,
    metaMessages: undefined,
    shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
      'already known',
    version: '2.22.13',
    data: undefined,
    raw: undefined,
    reason: 'already known',
    signature: undefined
  },
  details: undefined,
  docsPath: '/docs/contract/writeContract',
  metaMessages: [
    'Contract Call:',
    '  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669\n' +
      '  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)\n' +
      '  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)\n' +
      '  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159'
  ],
  shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
    'already known',
  version: '2.22.13',
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AddLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AdminChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Approval',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AuthorizedUpgradeSelf',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'BeaconUpgraded',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'DisableContractUpgrade',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [],
      name: 'EIP712DomainChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Initialized',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockDisabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockEnabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'OwnershipTransferred',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'RemoveLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Transfer',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'TransferAndLock',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Upgraded',
      type: 'event'
    },
    {
      inputs: [],
      name: 'DOMAIN_SEPARATOR',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'addLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'allowance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'approve',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'balanceOf',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burnFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'canTransferAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'canUpgradeAddress',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'decimals',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'decreaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableContractUpgrade',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableUpgrade',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'eip712Domain',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getAvailableBalance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getLockAmountAndUnlockAt',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'increaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'isLockActive',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensDisable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensEnable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'lockTransferAdmins',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'name',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'nonces',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'permit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'removeLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'setUpgradePermission',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transfer',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferAndLock',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferFrom',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'version',
      outputs: [Array],
      stateMutability: 'pure',
      type: 'function'
    }
  ],
  args: [
    '0xde184a6809898d81186def5c0823d2107c001da2',
    660000000000000000000000000n,
    3456000n
  ],
  contractAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  formattedArgs: undefined,
  functionName: 'transferAndLock',
  sender: '0x417Dd0DDAA54E651e304A12c9810173F57876159'
}
🔄 重试第 35/50 次transferAndLock (1/3)
🔄 执行第 35/50 次transferAndLock操作
❌ 第 34/50 次transferAndLock异常: ContractFunctionExecutionError: The contract function "transferAndLock" reverted with the following reason:
already known

Contract Call:
  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)
  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
    at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:36:12)
    at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
    ... 7 lines matching cause stack trace ...
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
  cause: ContractFunctionRevertedError: The contract function "transferAndLock" reverted with the following reason:
  already known
  
  Version: viem@2.22.13
      at eval (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:27:20)
      at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:35:7)
      at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async executeTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:192:26)
      at async Promise.all (index 3)
      at async processQueue (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:251:13)
      at async batchTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:256:5)
      at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:705:37)
      at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
      at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
    details: undefined,
    docsPath: undefined,
    metaMessages: undefined,
    shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
      'already known',
    version: '2.22.13',
    data: undefined,
    raw: undefined,
    reason: 'already known',
    signature: undefined
  },
  details: undefined,
  docsPath: '/docs/contract/writeContract',
  metaMessages: [
    'Contract Call:',
    '  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669\n' +
      '  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)\n' +
      '  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)\n' +
      '  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159'
  ],
  shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
    'already known',
  version: '2.22.13',
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AddLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AdminChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Approval',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AuthorizedUpgradeSelf',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'BeaconUpgraded',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'DisableContractUpgrade',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [],
      name: 'EIP712DomainChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Initialized',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockDisabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockEnabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'OwnershipTransferred',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'RemoveLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Transfer',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'TransferAndLock',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Upgraded',
      type: 'event'
    },
    {
      inputs: [],
      name: 'DOMAIN_SEPARATOR',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'addLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'allowance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'approve',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'balanceOf',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burnFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'canTransferAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'canUpgradeAddress',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'decimals',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'decreaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableContractUpgrade',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableUpgrade',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'eip712Domain',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getAvailableBalance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getLockAmountAndUnlockAt',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'increaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'isLockActive',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensDisable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensEnable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'lockTransferAdmins',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'name',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'nonces',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'permit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'removeLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'setUpgradePermission',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transfer',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferAndLock',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferFrom',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'version',
      outputs: [Array],
      stateMutability: 'pure',
      type: 'function'
    }
  ],
  args: [
    '0xde184a6809898d81186def5c0823d2107c001da2',
    660000000000000000000000000n,
    3456000n
  ],
  contractAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  formattedArgs: undefined,
  functionName: 'transferAndLock',
  sender: '0x417Dd0DDAA54E651e304A12c9810173F57876159'
}
🔄 重试第 34/50 次transferAndLock (1/3)
🔄 执行第 34/50 次transferAndLock操作
📤 第 31/50 次transferAndLock交易已发送: 0x02417fc0bf0acd118c0be67eb094867c80edc54e14a8e2c235aca455758b0d14
📤 第 34/50 次transferAndLock交易已发送: 0xef869fb738350070e7913ba416c37e1af273273b7ba8842d64896825260c0f7e
❌ 第 33/50 次transferAndLock异常: ContractFunctionExecutionError: The contract function "transferAndLock" reverted with the following reason:
already known

Contract Call:
  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)
  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
    at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:36:12)
    at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
    ... 7 lines matching cause stack trace ...
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
  cause: ContractFunctionRevertedError: The contract function "transferAndLock" reverted with the following reason:
  already known
  
  Version: viem@2.22.13
      at eval (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:27:20)
      at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:35:7)
      at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async executeTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:192:26)
      at async Promise.all (index 2)
      at async processQueue (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:251:13)
      at async batchTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:256:5)
      at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:705:37)
      at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
      at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
    details: undefined,
    docsPath: undefined,
    metaMessages: undefined,
    shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
      'already known',
    version: '2.22.13',
    data: undefined,
    raw: undefined,
    reason: 'already known',
    signature: undefined
  },
  details: undefined,
  docsPath: '/docs/contract/writeContract',
  metaMessages: [
    'Contract Call:',
    '  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669\n' +
      '  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)\n' +
      '  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)\n' +
      '  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159'
  ],
  shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
    'already known',
  version: '2.22.13',
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AddLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AdminChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Approval',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AuthorizedUpgradeSelf',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'BeaconUpgraded',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'DisableContractUpgrade',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [],
      name: 'EIP712DomainChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Initialized',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockDisabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockEnabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'OwnershipTransferred',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'RemoveLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Transfer',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'TransferAndLock',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Upgraded',
      type: 'event'
    },
    {
      inputs: [],
      name: 'DOMAIN_SEPARATOR',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'addLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'allowance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'approve',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'balanceOf',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burnFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'canTransferAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'canUpgradeAddress',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'decimals',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'decreaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableContractUpgrade',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableUpgrade',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'eip712Domain',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getAvailableBalance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getLockAmountAndUnlockAt',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'increaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'isLockActive',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensDisable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensEnable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'lockTransferAdmins',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'name',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'nonces',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'permit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'removeLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'setUpgradePermission',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transfer',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferAndLock',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferFrom',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'version',
      outputs: [Array],
      stateMutability: 'pure',
      type: 'function'
    }
  ],
  args: [
    '0xde184a6809898d81186def5c0823d2107c001da2',
    660000000000000000000000000n,
    3456000n
  ],
  contractAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  formattedArgs: undefined,
  functionName: 'transferAndLock',
  sender: '0x417Dd0DDAA54E651e304A12c9810173F57876159'
}
🔄 重试第 33/50 次transferAndLock (2/3)
🔄 执行第 33/50 次transferAndLock操作
📤 第 35/50 次transferAndLock交易已发送: 0x380d6fffa31629aeefec0e86e36702b949499e7a3315ac8fefd25853f6bad26f
📤 第 33/50 次transferAndLock交易已发送: 0xf6e7956d9d6c1b2b70ab966e169a4ab3b18506a8ab5babfc5b2d06a68460caca
✅ 第 32/50 次transferAndLock成功 - Hash: 0x18a598a21d9642001566c3c0f4a0bb82a14e1d0f0312e8ef25b9e2011ef2db41
✅ 第 33/50 次transferAndLock成功 - Hash: 0xf6e7956d9d6c1b2b70ab966e169a4ab3b18506a8ab5babfc5b2d06a68460caca
✅ 第 35/50 次transferAndLock成功 - Hash: 0x380d6fffa31629aeefec0e86e36702b949499e7a3315ac8fefd25853f6bad26f
✅ 第 31/50 次transferAndLock成功 - Hash: 0x02417fc0bf0acd118c0be67eb094867c80edc54e14a8e2c235aca455758b0d14
✅ 第 34/50 次transferAndLock成功 - Hash: 0xef869fb738350070e7913ba416c37e1af273273b7ba8842d64896825260c0f7e
✅ 批次处理完成，剩余任务: 15
🔄 开始处理批次，大小: 5
🔄 执行第 36/50 次transferAndLock操作
🔄 执行第 37/50 次transferAndLock操作
🔄 执行第 38/50 次transferAndLock操作
🔄 执行第 39/50 次transferAndLock操作
🔄 执行第 40/50 次transferAndLock操作
📤 第 36/50 次transferAndLock交易已发送: 0x9d779aa91456df4f7c93a411721a18f150617e6e47fe9a555f01dd426b1dc49d
❌ 第 40/50 次transferAndLock异常: ContractFunctionExecutionError: The contract function "transferAndLock" reverted with the following reason:
already known

Contract Call:
  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)
  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
    at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:36:12)
    at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
    ... 7 lines matching cause stack trace ...
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
  cause: ContractFunctionRevertedError: The contract function "transferAndLock" reverted with the following reason:
  already known
  
  Version: viem@2.22.13
      at eval (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:27:20)
      at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:35:7)
      at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async executeTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:192:26)
      at async Promise.all (index 4)
      at async processQueue (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:251:13)
      at async batchTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:256:5)
      at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:705:37)
      at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
      at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
    details: undefined,
    docsPath: undefined,
    metaMessages: undefined,
    shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
      'already known',
    version: '2.22.13',
    data: undefined,
    raw: undefined,
    reason: 'already known',
    signature: undefined
  },
  details: undefined,
  docsPath: '/docs/contract/writeContract',
  metaMessages: [
    'Contract Call:',
    '  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669\n' +
      '  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)\n' +
      '  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)\n' +
      '  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159'
  ],
  shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
    'already known',
  version: '2.22.13',
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AddLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AdminChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Approval',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AuthorizedUpgradeSelf',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'BeaconUpgraded',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'DisableContractUpgrade',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [],
      name: 'EIP712DomainChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Initialized',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockDisabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockEnabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'OwnershipTransferred',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'RemoveLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Transfer',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'TransferAndLock',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Upgraded',
      type: 'event'
    },
    {
      inputs: [],
      name: 'DOMAIN_SEPARATOR',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'addLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'allowance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'approve',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'balanceOf',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burnFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'canTransferAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'canUpgradeAddress',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'decimals',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'decreaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableContractUpgrade',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableUpgrade',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'eip712Domain',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getAvailableBalance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getLockAmountAndUnlockAt',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'increaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'isLockActive',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensDisable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensEnable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'lockTransferAdmins',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'name',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'nonces',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'permit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'removeLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'setUpgradePermission',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transfer',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferAndLock',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferFrom',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'version',
      outputs: [Array],
      stateMutability: 'pure',
      type: 'function'
    }
  ],
  args: [
    '0xde184a6809898d81186def5c0823d2107c001da2',
    660000000000000000000000000n,
    3456000n
  ],
  contractAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  formattedArgs: undefined,
  functionName: 'transferAndLock',
  sender: '0x417Dd0DDAA54E651e304A12c9810173F57876159'
}
🔄 重试第 40/50 次transferAndLock (1/3)
🔄 执行第 40/50 次transferAndLock操作
❌ 第 38/50 次transferAndLock异常: ContractFunctionExecutionError: The contract function "transferAndLock" reverted with the following reason:
already known

Contract Call:
  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)
  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
    at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:36:12)
    at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
    ... 7 lines matching cause stack trace ...
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
  cause: ContractFunctionRevertedError: The contract function "transferAndLock" reverted with the following reason:
  already known
  
  Version: viem@2.22.13
      at eval (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:27:20)
      at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:35:7)
      at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async executeTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:192:26)
      at async Promise.all (index 2)
      at async processQueue (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:251:13)
      at async batchTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:256:5)
      at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:705:37)
      at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
      at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
    details: undefined,
    docsPath: undefined,
    metaMessages: undefined,
    shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
      'already known',
    version: '2.22.13',
    data: undefined,
    raw: undefined,
    reason: 'already known',
    signature: undefined
  },
  details: undefined,
  docsPath: '/docs/contract/writeContract',
  metaMessages: [
    'Contract Call:',
    '  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669\n' +
      '  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)\n' +
      '  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)\n' +
      '  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159'
  ],
  shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
    'already known',
  version: '2.22.13',
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AddLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AdminChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Approval',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AuthorizedUpgradeSelf',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'BeaconUpgraded',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'DisableContractUpgrade',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [],
      name: 'EIP712DomainChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Initialized',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockDisabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockEnabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'OwnershipTransferred',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'RemoveLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Transfer',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'TransferAndLock',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Upgraded',
      type: 'event'
    },
    {
      inputs: [],
      name: 'DOMAIN_SEPARATOR',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'addLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'allowance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'approve',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'balanceOf',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burnFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'canTransferAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'canUpgradeAddress',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'decimals',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'decreaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableContractUpgrade',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableUpgrade',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'eip712Domain',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getAvailableBalance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getLockAmountAndUnlockAt',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'increaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'isLockActive',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensDisable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensEnable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'lockTransferAdmins',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'name',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'nonces',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'permit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'removeLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'setUpgradePermission',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transfer',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferAndLock',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferFrom',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'version',
      outputs: [Array],
      stateMutability: 'pure',
      type: 'function'
    }
  ],
  args: [
    '0xde184a6809898d81186def5c0823d2107c001da2',
    660000000000000000000000000n,
    3456000n
  ],
  contractAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  formattedArgs: undefined,
  functionName: 'transferAndLock',
  sender: '0x417Dd0DDAA54E651e304A12c9810173F57876159'
}
🔄 重试第 38/50 次transferAndLock (1/3)
🔄 执行第 38/50 次transferAndLock操作
❌ 第 39/50 次transferAndLock异常: ContractFunctionExecutionError: The contract function "transferAndLock" reverted with the following reason:
already known

Contract Call:
  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)
  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
    at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:36:12)
    at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
    ... 7 lines matching cause stack trace ...
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
  cause: ContractFunctionRevertedError: The contract function "transferAndLock" reverted with the following reason:
  already known
  
  Version: viem@2.22.13
      at eval (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:27:20)
      at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:35:7)
      at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async executeTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:192:26)
      at async Promise.all (index 3)
      at async processQueue (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:251:13)
      at async batchTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:256:5)
      at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:705:37)
      at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
      at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
    details: undefined,
    docsPath: undefined,
    metaMessages: undefined,
    shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
      'already known',
    version: '2.22.13',
    data: undefined,
    raw: undefined,
    reason: 'already known',
    signature: undefined
  },
  details: undefined,
  docsPath: '/docs/contract/writeContract',
  metaMessages: [
    'Contract Call:',
    '  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669\n' +
      '  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)\n' +
      '  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)\n' +
      '  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159'
  ],
  shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
    'already known',
  version: '2.22.13',
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AddLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AdminChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Approval',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AuthorizedUpgradeSelf',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'BeaconUpgraded',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'DisableContractUpgrade',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [],
      name: 'EIP712DomainChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Initialized',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockDisabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockEnabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'OwnershipTransferred',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'RemoveLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Transfer',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'TransferAndLock',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Upgraded',
      type: 'event'
    },
    {
      inputs: [],
      name: 'DOMAIN_SEPARATOR',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'addLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'allowance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'approve',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'balanceOf',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burnFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'canTransferAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'canUpgradeAddress',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'decimals',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'decreaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableContractUpgrade',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableUpgrade',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'eip712Domain',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getAvailableBalance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getLockAmountAndUnlockAt',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'increaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'isLockActive',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensDisable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensEnable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'lockTransferAdmins',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'name',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'nonces',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'permit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'removeLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'setUpgradePermission',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transfer',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferAndLock',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferFrom',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'version',
      outputs: [Array],
      stateMutability: 'pure',
      type: 'function'
    }
  ],
  args: [
    '0xde184a6809898d81186def5c0823d2107c001da2',
    660000000000000000000000000n,
    3456000n
  ],
  contractAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  formattedArgs: undefined,
  functionName: 'transferAndLock',
  sender: '0x417Dd0DDAA54E651e304A12c9810173F57876159'
}
🔄 重试第 39/50 次transferAndLock (1/3)
🔄 执行第 39/50 次transferAndLock操作
📤 第 37/50 次transferAndLock交易已发送: 0xcb072836880eeb4a863c130cb90c6c5210911b41b80bf065a430167192c915bd
❌ 第 38/50 次transferAndLock异常: ContractFunctionExecutionError: The contract function "transferAndLock" reverted with the following reason:
already known

Contract Call:
  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)
  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
    at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:36:12)
    at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
    ... 7 lines matching cause stack trace ...
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
  cause: ContractFunctionRevertedError: The contract function "transferAndLock" reverted with the following reason:
  already known
  
  Version: viem@2.22.13
      at eval (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:27:20)
      at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:35:7)
      at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async executeTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:192:26)
      at async Promise.all (index 2)
      at async processQueue (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:251:13)
      at async batchTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:256:5)
      at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:705:37)
      at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
      at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
    details: undefined,
    docsPath: undefined,
    metaMessages: undefined,
    shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
      'already known',
    version: '2.22.13',
    data: undefined,
    raw: undefined,
    reason: 'already known',
    signature: undefined
  },
  details: undefined,
  docsPath: '/docs/contract/writeContract',
  metaMessages: [
    'Contract Call:',
    '  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669\n' +
      '  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)\n' +
      '  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)\n' +
      '  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159'
  ],
  shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
    'already known',
  version: '2.22.13',
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AddLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AdminChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Approval',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AuthorizedUpgradeSelf',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'BeaconUpgraded',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'DisableContractUpgrade',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [],
      name: 'EIP712DomainChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Initialized',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockDisabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockEnabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'OwnershipTransferred',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'RemoveLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Transfer',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'TransferAndLock',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Upgraded',
      type: 'event'
    },
    {
      inputs: [],
      name: 'DOMAIN_SEPARATOR',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'addLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'allowance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'approve',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'balanceOf',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burnFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'canTransferAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'canUpgradeAddress',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'decimals',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'decreaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableContractUpgrade',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableUpgrade',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'eip712Domain',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getAvailableBalance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getLockAmountAndUnlockAt',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'increaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'isLockActive',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensDisable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensEnable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'lockTransferAdmins',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'name',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'nonces',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'permit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'removeLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'setUpgradePermission',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transfer',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferAndLock',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferFrom',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'version',
      outputs: [Array],
      stateMutability: 'pure',
      type: 'function'
    }
  ],
  args: [
    '0xde184a6809898d81186def5c0823d2107c001da2',
    660000000000000000000000000n,
    3456000n
  ],
  contractAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  formattedArgs: undefined,
  functionName: 'transferAndLock',
  sender: '0x417Dd0DDAA54E651e304A12c9810173F57876159'
}
🔄 重试第 38/50 次transferAndLock (2/3)
🔄 执行第 38/50 次transferAndLock操作
📤 第 40/50 次transferAndLock交易已发送: 0x9a312dfafb769cc98fb16c23b3c74387cd619f71c04399aa1b710c05d614460d
📤 第 39/50 次transferAndLock交易已发送: 0x6920d52bec7b2479bd7f4ebbaff1bd92fefed277a1d1ac6dec34cc11c727df6f
📤 第 38/50 次transferAndLock交易已发送: 0xea6f16a4ea9a6ee53d59689b098ab2b751bb8142aec072b371aedd012d00bc8e
✅ 第 36/50 次transferAndLock成功 - Hash: 0x9d779aa91456df4f7c93a411721a18f150617e6e47fe9a555f01dd426b1dc49d
✅ 第 38/50 次transferAndLock成功 - Hash: 0xea6f16a4ea9a6ee53d59689b098ab2b751bb8142aec072b371aedd012d00bc8e
✅ 第 37/50 次transferAndLock成功 - Hash: 0xcb072836880eeb4a863c130cb90c6c5210911b41b80bf065a430167192c915bd
✅ 第 40/50 次transferAndLock成功 - Hash: 0x9a312dfafb769cc98fb16c23b3c74387cd619f71c04399aa1b710c05d614460d
✅ 第 39/50 次transferAndLock成功 - Hash: 0x6920d52bec7b2479bd7f4ebbaff1bd92fefed277a1d1ac6dec34cc11c727df6f
✅ 批次处理完成，剩余任务: 10
🔄 开始处理批次，大小: 5
🔄 执行第 41/50 次transferAndLock操作
🔄 执行第 42/50 次transferAndLock操作
🔄 执行第 43/50 次transferAndLock操作
🔄 执行第 44/50 次transferAndLock操作
🔄 执行第 45/50 次transferAndLock操作
❌ 第 45/50 次transferAndLock异常: ContractFunctionExecutionError: The contract function "transferAndLock" reverted with the following reason:
already known

Contract Call:
  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)
  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
    at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:36:12)
    at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
    ... 7 lines matching cause stack trace ...
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
  cause: ContractFunctionRevertedError: The contract function "transferAndLock" reverted with the following reason:
  already known
  
  Version: viem@2.22.13
      at eval (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:27:20)
      at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:35:7)
      at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async executeTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:192:26)
      at async Promise.all (index 4)
      at async processQueue (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:251:13)
      at async batchTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:256:5)
      at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:705:37)
      at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
      at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
    details: undefined,
    docsPath: undefined,
    metaMessages: undefined,
    shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
      'already known',
    version: '2.22.13',
    data: undefined,
    raw: undefined,
    reason: 'already known',
    signature: undefined
  },
  details: undefined,
  docsPath: '/docs/contract/writeContract',
  metaMessages: [
    'Contract Call:',
    '  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669\n' +
      '  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)\n' +
      '  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)\n' +
      '  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159'
  ],
  shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
    'already known',
  version: '2.22.13',
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AddLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AdminChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Approval',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AuthorizedUpgradeSelf',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'BeaconUpgraded',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'DisableContractUpgrade',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [],
      name: 'EIP712DomainChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Initialized',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockDisabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockEnabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'OwnershipTransferred',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'RemoveLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Transfer',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'TransferAndLock',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Upgraded',
      type: 'event'
    },
    {
      inputs: [],
      name: 'DOMAIN_SEPARATOR',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'addLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'allowance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'approve',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'balanceOf',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burnFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'canTransferAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'canUpgradeAddress',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'decimals',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'decreaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableContractUpgrade',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableUpgrade',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'eip712Domain',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getAvailableBalance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getLockAmountAndUnlockAt',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'increaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'isLockActive',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensDisable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensEnable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'lockTransferAdmins',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'name',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'nonces',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'permit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'removeLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'setUpgradePermission',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transfer',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferAndLock',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferFrom',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'version',
      outputs: [Array],
      stateMutability: 'pure',
      type: 'function'
    }
  ],
  args: [
    '0xde184a6809898d81186def5c0823d2107c001da2',
    660000000000000000000000000n,
    3456000n
  ],
  contractAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  formattedArgs: undefined,
  functionName: 'transferAndLock',
  sender: '0x417Dd0DDAA54E651e304A12c9810173F57876159'
}
🔄 重试第 45/50 次transferAndLock (1/3)
🔄 执行第 45/50 次transferAndLock操作
📤 第 42/50 次transferAndLock交易已发送: 0x90340d04312aae0bc1e63e3592cd4aa993bad0642dc7715866b76ad036e24c6f
❌ 第 43/50 次transferAndLock异常: ContractFunctionExecutionError: The contract function "transferAndLock" reverted with the following reason:
already known

Contract Call:
  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)
  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
    at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:36:12)
    at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
    ... 7 lines matching cause stack trace ...
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
  cause: ContractFunctionRevertedError: The contract function "transferAndLock" reverted with the following reason:
  already known
  
  Version: viem@2.22.13
      at eval (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:27:20)
      at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:35:7)
      at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async executeTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:192:26)
      at async Promise.all (index 2)
      at async processQueue (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:251:13)
      at async batchTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:256:5)
      at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:705:37)
      at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
      at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
    details: undefined,
    docsPath: undefined,
    metaMessages: undefined,
    shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
      'already known',
    version: '2.22.13',
    data: undefined,
    raw: undefined,
    reason: 'already known',
    signature: undefined
  },
  details: undefined,
  docsPath: '/docs/contract/writeContract',
  metaMessages: [
    'Contract Call:',
    '  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669\n' +
      '  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)\n' +
      '  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)\n' +
      '  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159'
  ],
  shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
    'already known',
  version: '2.22.13',
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AddLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AdminChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Approval',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AuthorizedUpgradeSelf',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'BeaconUpgraded',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'DisableContractUpgrade',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [],
      name: 'EIP712DomainChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Initialized',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockDisabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockEnabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'OwnershipTransferred',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'RemoveLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Transfer',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'TransferAndLock',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Upgraded',
      type: 'event'
    },
    {
      inputs: [],
      name: 'DOMAIN_SEPARATOR',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'addLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'allowance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'approve',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'balanceOf',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burnFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'canTransferAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'canUpgradeAddress',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'decimals',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'decreaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableContractUpgrade',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableUpgrade',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'eip712Domain',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getAvailableBalance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getLockAmountAndUnlockAt',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'increaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'isLockActive',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensDisable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensEnable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'lockTransferAdmins',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'name',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'nonces',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'permit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'removeLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'setUpgradePermission',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transfer',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferAndLock',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferFrom',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'version',
      outputs: [Array],
      stateMutability: 'pure',
      type: 'function'
    }
  ],
  args: [
    '0xde184a6809898d81186def5c0823d2107c001da2',
    660000000000000000000000000n,
    3456000n
  ],
  contractAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  formattedArgs: undefined,
  functionName: 'transferAndLock',
  sender: '0x417Dd0DDAA54E651e304A12c9810173F57876159'
}
🔄 重试第 43/50 次transferAndLock (1/3)
🔄 执行第 43/50 次transferAndLock操作
📤 第 44/50 次transferAndLock交易已发送: 0x131baff1410f4a942723df24e5ffd582cc8ff9e42e4af791d1b59f8af2724ddb
📤 第 41/50 次transferAndLock交易已发送: 0x3c78786efd6ee0734df238c6841b5da6aeb7d602f70a4cf5644310b01ca16db7
📤 第 43/50 次transferAndLock交易已发送: 0x291a0061a6d3e028dab2ae855073606c95774825a25687ef02d221db362f759a
❌ 第 45/50 次transferAndLock异常: ContractFunctionExecutionError: The contract function "transferAndLock" reverted with the following reason:
already known

Contract Call:
  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)
  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
    at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:36:12)
    at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
    ... 7 lines matching cause stack trace ...
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
  cause: ContractFunctionRevertedError: The contract function "transferAndLock" reverted with the following reason:
  already known
  
  Version: viem@2.22.13
      at eval (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:27:20)
      at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:35:7)
      at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async executeTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:192:26)
      at async Promise.all (index 4)
      at async processQueue (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:251:13)
      at async batchTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:256:5)
      at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:705:37)
      at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
      at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
    details: undefined,
    docsPath: undefined,
    metaMessages: undefined,
    shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
      'already known',
    version: '2.22.13',
    data: undefined,
    raw: undefined,
    reason: 'already known',
    signature: undefined
  },
  details: undefined,
  docsPath: '/docs/contract/writeContract',
  metaMessages: [
    'Contract Call:',
    '  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669\n' +
      '  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)\n' +
      '  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)\n' +
      '  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159'
  ],
  shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
    'already known',
  version: '2.22.13',
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AddLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AdminChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Approval',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AuthorizedUpgradeSelf',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'BeaconUpgraded',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'DisableContractUpgrade',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [],
      name: 'EIP712DomainChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Initialized',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockDisabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockEnabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'OwnershipTransferred',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'RemoveLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Transfer',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'TransferAndLock',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Upgraded',
      type: 'event'
    },
    {
      inputs: [],
      name: 'DOMAIN_SEPARATOR',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'addLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'allowance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'approve',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'balanceOf',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burnFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'canTransferAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'canUpgradeAddress',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'decimals',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'decreaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableContractUpgrade',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableUpgrade',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'eip712Domain',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getAvailableBalance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getLockAmountAndUnlockAt',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'increaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'isLockActive',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensDisable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensEnable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'lockTransferAdmins',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'name',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'nonces',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'permit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'removeLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'setUpgradePermission',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transfer',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferAndLock',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferFrom',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'version',
      outputs: [Array],
      stateMutability: 'pure',
      type: 'function'
    }
  ],
  args: [
    '0xde184a6809898d81186def5c0823d2107c001da2',
    660000000000000000000000000n,
    3456000n
  ],
  contractAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  formattedArgs: undefined,
  functionName: 'transferAndLock',
  sender: '0x417Dd0DDAA54E651e304A12c9810173F57876159'
}
🔄 重试第 45/50 次transferAndLock (2/3)
🔄 执行第 45/50 次transferAndLock操作
📤 第 45/50 次transferAndLock交易已发送: 0x3b1292d68f6a3811e035aa8111953b0e842f21fad891eb8c36a4a6aae492383f
✅ 第 42/50 次transferAndLock成功 - Hash: 0x90340d04312aae0bc1e63e3592cd4aa993bad0642dc7715866b76ad036e24c6f
✅ 第 43/50 次transferAndLock成功 - Hash: 0x291a0061a6d3e028dab2ae855073606c95774825a25687ef02d221db362f759a
✅ 第 44/50 次transferAndLock成功 - Hash: 0x131baff1410f4a942723df24e5ffd582cc8ff9e42e4af791d1b59f8af2724ddb
✅ 第 41/50 次transferAndLock成功 - Hash: 0x3c78786efd6ee0734df238c6841b5da6aeb7d602f70a4cf5644310b01ca16db7
✅ 第 45/50 次transferAndLock成功 - Hash: 0x3b1292d68f6a3811e035aa8111953b0e842f21fad891eb8c36a4a6aae492383f
✅ 批次处理完成，剩余任务: 5
🔄 开始处理批次，大小: 5
🔄 执行第 46/50 次transferAndLock操作
🔄 执行第 47/50 次transferAndLock操作
🔄 执行第 48/50 次transferAndLock操作
🔄 执行第 49/50 次transferAndLock操作
🔄 执行第 50/50 次transferAndLock操作
📤 第 47/50 次transferAndLock交易已发送: 0x7a84af6a45d7a89c76e78b847e9da0ee2ad4543bb473eb84bc243a53cbb0a5ed
❌ 第 49/50 次transferAndLock异常: ContractFunctionExecutionError: The contract function "transferAndLock" reverted with the following reason:
already known

Contract Call:
  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)
  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
    at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:36:12)
    at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
    ... 7 lines matching cause stack trace ...
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
  cause: ContractFunctionRevertedError: The contract function "transferAndLock" reverted with the following reason:
  already known
  
  Version: viem@2.22.13
      at eval (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:27:20)
      at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:35:7)
      at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async executeTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:192:26)
      at async Promise.all (index 3)
      at async processQueue (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:251:13)
      at async batchTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:256:5)
      at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:705:37)
      at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
      at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
    details: undefined,
    docsPath: undefined,
    metaMessages: undefined,
    shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
      'already known',
    version: '2.22.13',
    data: undefined,
    raw: undefined,
    reason: 'already known',
    signature: undefined
  },
  details: undefined,
  docsPath: '/docs/contract/writeContract',
  metaMessages: [
    'Contract Call:',
    '  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669\n' +
      '  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)\n' +
      '  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)\n' +
      '  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159'
  ],
  shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
    'already known',
  version: '2.22.13',
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AddLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AdminChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Approval',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AuthorizedUpgradeSelf',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'BeaconUpgraded',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'DisableContractUpgrade',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [],
      name: 'EIP712DomainChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Initialized',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockDisabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockEnabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'OwnershipTransferred',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'RemoveLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Transfer',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'TransferAndLock',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Upgraded',
      type: 'event'
    },
    {
      inputs: [],
      name: 'DOMAIN_SEPARATOR',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'addLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'allowance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'approve',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'balanceOf',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burnFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'canTransferAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'canUpgradeAddress',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'decimals',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'decreaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableContractUpgrade',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableUpgrade',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'eip712Domain',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getAvailableBalance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getLockAmountAndUnlockAt',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'increaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'isLockActive',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensDisable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensEnable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'lockTransferAdmins',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'name',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'nonces',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'permit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'removeLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'setUpgradePermission',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transfer',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferAndLock',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferFrom',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'version',
      outputs: [Array],
      stateMutability: 'pure',
      type: 'function'
    }
  ],
  args: [
    '0xde184a6809898d81186def5c0823d2107c001da2',
    660000000000000000000000000n,
    3456000n
  ],
  contractAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  formattedArgs: undefined,
  functionName: 'transferAndLock',
  sender: '0x417Dd0DDAA54E651e304A12c9810173F57876159'
}
🔄 重试第 49/50 次transferAndLock (1/3)
🔄 执行第 49/50 次transferAndLock操作
❌ 第 48/50 次transferAndLock异常: ContractFunctionExecutionError: The contract function "transferAndLock" reverted with the following reason:
already known

Contract Call:
  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)
  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
    at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:36:12)
    at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
    ... 7 lines matching cause stack trace ...
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
  cause: ContractFunctionRevertedError: The contract function "transferAndLock" reverted with the following reason:
  already known
  
  Version: viem@2.22.13
      at eval (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:27:20)
      at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:35:7)
      at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async executeTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:192:26)
      at async Promise.all (index 2)
      at async processQueue (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:251:13)
      at async batchTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:256:5)
      at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:705:37)
      at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
      at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
    details: undefined,
    docsPath: undefined,
    metaMessages: undefined,
    shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
      'already known',
    version: '2.22.13',
    data: undefined,
    raw: undefined,
    reason: 'already known',
    signature: undefined
  },
  details: undefined,
  docsPath: '/docs/contract/writeContract',
  metaMessages: [
    'Contract Call:',
    '  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669\n' +
      '  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)\n' +
      '  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)\n' +
      '  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159'
  ],
  shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
    'already known',
  version: '2.22.13',
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AddLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AdminChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Approval',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AuthorizedUpgradeSelf',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'BeaconUpgraded',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'DisableContractUpgrade',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [],
      name: 'EIP712DomainChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Initialized',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockDisabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockEnabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'OwnershipTransferred',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'RemoveLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Transfer',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'TransferAndLock',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Upgraded',
      type: 'event'
    },
    {
      inputs: [],
      name: 'DOMAIN_SEPARATOR',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'addLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'allowance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'approve',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'balanceOf',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burnFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'canTransferAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'canUpgradeAddress',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'decimals',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'decreaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableContractUpgrade',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableUpgrade',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'eip712Domain',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getAvailableBalance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getLockAmountAndUnlockAt',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'increaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'isLockActive',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensDisable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensEnable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'lockTransferAdmins',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'name',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'nonces',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'permit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'removeLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'setUpgradePermission',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transfer',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferAndLock',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferFrom',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'version',
      outputs: [Array],
      stateMutability: 'pure',
      type: 'function'
    }
  ],
  args: [
    '0xde184a6809898d81186def5c0823d2107c001da2',
    660000000000000000000000000n,
    3456000n
  ],
  contractAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  formattedArgs: undefined,
  functionName: 'transferAndLock',
  sender: '0x417Dd0DDAA54E651e304A12c9810173F57876159'
}
🔄 重试第 48/50 次transferAndLock (1/3)
🔄 执行第 48/50 次transferAndLock操作
❌ 第 46/50 次transferAndLock异常: ContractFunctionExecutionError: The contract function "transferAndLock" reverted with the following reason:
already known

Contract Call:
  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)
  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
    at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:36:12)
    at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
    ... 7 lines matching cause stack trace ...
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
  cause: ContractFunctionRevertedError: The contract function "transferAndLock" reverted with the following reason:
  already known
  
  Version: viem@2.22.13
      at eval (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:27:20)
      at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:35:7)
      at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async executeTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:192:26)
      at async Promise.all (index 0)
      at async processQueue (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:251:13)
      at async batchTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:256:5)
      at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:705:37)
      at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
      at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
    details: undefined,
    docsPath: undefined,
    metaMessages: undefined,
    shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
      'already known',
    version: '2.22.13',
    data: undefined,
    raw: undefined,
    reason: 'already known',
    signature: undefined
  },
  details: undefined,
  docsPath: '/docs/contract/writeContract',
  metaMessages: [
    'Contract Call:',
    '  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669\n' +
      '  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)\n' +
      '  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)\n' +
      '  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159'
  ],
  shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
    'already known',
  version: '2.22.13',
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AddLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AdminChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Approval',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AuthorizedUpgradeSelf',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'BeaconUpgraded',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'DisableContractUpgrade',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [],
      name: 'EIP712DomainChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Initialized',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockDisabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockEnabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'OwnershipTransferred',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'RemoveLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Transfer',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'TransferAndLock',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Upgraded',
      type: 'event'
    },
    {
      inputs: [],
      name: 'DOMAIN_SEPARATOR',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'addLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'allowance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'approve',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'balanceOf',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burnFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'canTransferAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'canUpgradeAddress',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'decimals',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'decreaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableContractUpgrade',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableUpgrade',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'eip712Domain',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getAvailableBalance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getLockAmountAndUnlockAt',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'increaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'isLockActive',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensDisable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensEnable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'lockTransferAdmins',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'name',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'nonces',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'permit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'removeLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'setUpgradePermission',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transfer',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferAndLock',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferFrom',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'version',
      outputs: [Array],
      stateMutability: 'pure',
      type: 'function'
    }
  ],
  args: [
    '0xde184a6809898d81186def5c0823d2107c001da2',
    660000000000000000000000000n,
    3456000n
  ],
  contractAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  formattedArgs: undefined,
  functionName: 'transferAndLock',
  sender: '0x417Dd0DDAA54E651e304A12c9810173F57876159'
}
🔄 重试第 46/50 次transferAndLock (1/3)
🔄 执行第 46/50 次transferAndLock操作
📤 第 50/50 次transferAndLock交易已发送: 0x548afeba809a935216711daf19ecaf5f7b97e0ceef63e11364671c0bcd06ac75
📤 第 46/50 次transferAndLock交易已发送: 0x97caf66dc72adf6eaee988699d2da6caa71c7ca1a99ed5fe3d1fec42242b753b
❌ 第 48/50 次transferAndLock异常: ContractFunctionExecutionError: The contract function "transferAndLock" reverted with the following reason:
already known

Contract Call:
  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)
  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
    at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:36:12)
    at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
    ... 7 lines matching cause stack trace ...
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
  cause: ContractFunctionRevertedError: The contract function "transferAndLock" reverted with the following reason:
  already known
  
  Version: viem@2.22.13
      at eval (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:27:20)
      at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:35:7)
      at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async executeTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:192:26)
      at async Promise.all (index 2)
      at async processQueue (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:251:13)
      at async batchTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:256:5)
      at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:705:37)
      at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
      at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
    details: undefined,
    docsPath: undefined,
    metaMessages: undefined,
    shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
      'already known',
    version: '2.22.13',
    data: undefined,
    raw: undefined,
    reason: 'already known',
    signature: undefined
  },
  details: undefined,
  docsPath: '/docs/contract/writeContract',
  metaMessages: [
    'Contract Call:',
    '  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669\n' +
      '  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)\n' +
      '  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)\n' +
      '  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159'
  ],
  shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
    'already known',
  version: '2.22.13',
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AddLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AdminChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Approval',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AuthorizedUpgradeSelf',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'BeaconUpgraded',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'DisableContractUpgrade',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [],
      name: 'EIP712DomainChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Initialized',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockDisabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockEnabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'OwnershipTransferred',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'RemoveLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Transfer',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'TransferAndLock',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Upgraded',
      type: 'event'
    },
    {
      inputs: [],
      name: 'DOMAIN_SEPARATOR',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'addLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'allowance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'approve',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'balanceOf',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burnFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'canTransferAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'canUpgradeAddress',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'decimals',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'decreaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableContractUpgrade',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableUpgrade',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'eip712Domain',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getAvailableBalance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getLockAmountAndUnlockAt',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'increaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'isLockActive',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensDisable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensEnable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'lockTransferAdmins',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'name',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'nonces',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'permit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'removeLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'setUpgradePermission',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transfer',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferAndLock',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferFrom',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'version',
      outputs: [Array],
      stateMutability: 'pure',
      type: 'function'
    }
  ],
  args: [
    '0xde184a6809898d81186def5c0823d2107c001da2',
    660000000000000000000000000n,
    3456000n
  ],
  contractAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  formattedArgs: undefined,
  functionName: 'transferAndLock',
  sender: '0x417Dd0DDAA54E651e304A12c9810173F57876159'
}
🔄 重试第 48/50 次transferAndLock (2/3)
🔄 执行第 48/50 次transferAndLock操作
❌ 第 49/50 次transferAndLock异常: ContractFunctionExecutionError: The contract function "transferAndLock" reverted with the following reason:
already known

Contract Call:
  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)
  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
    at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:36:12)
    at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
    ... 7 lines matching cause stack trace ...
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
  cause: ContractFunctionRevertedError: The contract function "transferAndLock" reverted with the following reason:
  already known
  
  Version: viem@2.22.13
      at eval (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:27:20)
      at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:35:7)
      at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async executeTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:192:26)
      at async Promise.all (index 3)
      at async processQueue (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:251:13)
      at async batchTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:256:5)
      at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:705:37)
      at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
      at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
    details: undefined,
    docsPath: undefined,
    metaMessages: undefined,
    shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
      'already known',
    version: '2.22.13',
    data: undefined,
    raw: undefined,
    reason: 'already known',
    signature: undefined
  },
  details: undefined,
  docsPath: '/docs/contract/writeContract',
  metaMessages: [
    'Contract Call:',
    '  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669\n' +
      '  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)\n' +
      '  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)\n' +
      '  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159'
  ],
  shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
    'already known',
  version: '2.22.13',
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AddLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AdminChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Approval',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AuthorizedUpgradeSelf',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'BeaconUpgraded',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'DisableContractUpgrade',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [],
      name: 'EIP712DomainChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Initialized',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockDisabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockEnabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'OwnershipTransferred',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'RemoveLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Transfer',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'TransferAndLock',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Upgraded',
      type: 'event'
    },
    {
      inputs: [],
      name: 'DOMAIN_SEPARATOR',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'addLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'allowance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'approve',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'balanceOf',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burnFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'canTransferAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'canUpgradeAddress',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'decimals',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'decreaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableContractUpgrade',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableUpgrade',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'eip712Domain',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getAvailableBalance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getLockAmountAndUnlockAt',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'increaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'isLockActive',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensDisable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensEnable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'lockTransferAdmins',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'name',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'nonces',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'permit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'removeLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'setUpgradePermission',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transfer',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferAndLock',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferFrom',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'version',
      outputs: [Array],
      stateMutability: 'pure',
      type: 'function'
    }
  ],
  args: [
    '0xde184a6809898d81186def5c0823d2107c001da2',
    660000000000000000000000000n,
    3456000n
  ],
  contractAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  formattedArgs: undefined,
  functionName: 'transferAndLock',
  sender: '0x417Dd0DDAA54E651e304A12c9810173F57876159'
}
🔄 重试第 49/50 次transferAndLock (2/3)
🔄 执行第 49/50 次transferAndLock操作
📤 第 48/50 次transferAndLock交易已发送: 0x38aac16a53598817a5774e0f1835fa76a4d50d1eec4da53cf18f3f3cf5fd57a4
❌ 第 49/50 次transferAndLock异常: ContractFunctionExecutionError: The contract function "transferAndLock" reverted with the following reason:
already known

Contract Call:
  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)
  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)
  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159

Docs: https://viem.sh/docs/contract/writeContract
Version: viem@2.22.13
    at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:36:12)
    at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
    ... 7 lines matching cause stack trace ...
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
  cause: ContractFunctionRevertedError: The contract function "transferAndLock" reverted with the following reason:
  already known
  
  Version: viem@2.22.13
      at eval (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:27:20)
      at getContractError (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/utils/errors/getContractError.js:35:7)
      at writeContract (webpack-internal:///(rsc)/./node_modules/.pnpm/viem@2.22.13_bufferutil@4.0_2dda17e203ea070b2849fcffa3401c4c/node_modules/viem/_esm/actions/wallet/writeContract.js:85:98)
      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
      at async executeTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:192:26)
      at async Promise.all (index 3)
      at async processQueue (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:251:13)
      at async batchTransferAndLock (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:256:5)
      at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:705:37)
      at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
      at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24) {
    details: undefined,
    docsPath: undefined,
    metaMessages: undefined,
    shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
      'already known',
    version: '2.22.13',
    data: undefined,
    raw: undefined,
    reason: 'already known',
    signature: undefined
  },
  details: undefined,
  docsPath: '/docs/contract/writeContract',
  metaMessages: [
    'Contract Call:',
    '  address:   0x225278f3e11FD66E6f43e3d91d2cbC3238879669\n' +
      '  function:  transferAndLock(address to, uint256 value, uint256 lockSeconds)\n' +
      '  args:                     (0xde184a6809898d81186def5c0823d2107c001da2, 660000000000000000000000000, 3456000)\n' +
      '  sender:    0x417Dd0DDAA54E651e304A12c9810173F57876159'
  ],
  shortMessage: 'The contract function "transferAndLock" reverted with the following reason:\n' +
    'already known',
  version: '2.22.13',
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AddLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AdminChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Approval',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'AuthorizedUpgradeSelf',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'BeaconUpgraded',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'DisableContractUpgrade',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [],
      name: 'EIP712DomainChanged',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Initialized',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockDisabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'LockEnabled',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'OwnershipTransferred',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'RemoveLockTransferAdmin',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Transfer',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'TransferAndLock',
      type: 'event'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Upgraded',
      type: 'event'
    },
    {
      inputs: [],
      name: 'DOMAIN_SEPARATOR',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'addLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'allowance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'approve',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'balanceOf',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'burnFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'canTransferAmount',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'canUpgradeAddress',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'decimals',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'decreaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableContractUpgrade',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'disableUpgrade',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'eip712Domain',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getAvailableBalance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'getLockAmountAndUnlockAt',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'increaseAllowance',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'isLockActive',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensDisable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'lockTokensEnable',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'lockTransferAdmins',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'name',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'nonces',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'permit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'proxiableUUID',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'removeLockTransferAdmin',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'setUpgradePermission',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'symbol',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [],
      name: 'totalSupply',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transfer',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferAndLock',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferFrom',
      outputs: [Array],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeTo',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'upgradeToAndCall',
      outputs: [],
      stateMutability: 'payable',
      type: 'function'
    },
    {
      inputs: [],
      name: 'version',
      outputs: [Array],
      stateMutability: 'pure',
      type: 'function'
    }
  ],
  args: [
    '0xde184a6809898d81186def5c0823d2107c001da2',
    660000000000000000000000000n,
    3456000n
  ],
  contractAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  formattedArgs: undefined,
  functionName: 'transferAndLock',
  sender: '0x417Dd0DDAA54E651e304A12c9810173F57876159'
}
🔄 重试第 49/50 次transferAndLock (3/3)
🔄 执行第 49/50 次transferAndLock操作
📤 第 49/50 次transferAndLock交易已发送: 0x15f8a3e35b4c38ab38966771575e26239a89b1cbfa0ee62fc91de2af243912d2
✅ 第 47/50 次transferAndLock成功 - Hash: 0x7a84af6a45d7a89c76e78b847e9da0ee2ad4543bb473eb84bc243a53cbb0a5ed
✅ 第 49/50 次transferAndLock成功 - Hash: 0x15f8a3e35b4c38ab38966771575e26239a89b1cbfa0ee62fc91de2af243912d2
✅ 第 46/50 次transferAndLock成功 - Hash: 0x97caf66dc72adf6eaee988699d2da6caa71c7ca1a99ed5fe3d1fec42242b753b
✅ 第 50/50 次transferAndLock成功 - Hash: 0x548afeba809a935216711daf19ecaf5f7b97e0ceef63e11364671c0bcd06ac75
✅ 第 48/50 次transferAndLock成功 - Hash: 0x38aac16a53598817a5774e0f1835fa76a4d50d1eec4da53cf18f3f3cf5fd57a4
✅ 批次处理完成，剩余任务: 0
📊 批量transferAndLock执行结果:
  - 总数: 50
  - 成功: 50
  - 失败: 0
🔍 [DEBUG] 👤 批量锁定结果: 成功=50, 失败=0
🔍 [DEBUG] 👤 创建者批量分配结果: ✅ 全部成功
🏦 跳过IAO合约分配 (15%) - 恒源已自动完成此分配
🏦 IAO合约地址: 0xB2076716bC941D67431A2589c7cbA085D4b8b93E (已自动分配)
🔄 调用IAO合约的setRewardToken方法 - 设置奖励代币: 0x225278f3e11FD66E6f43e3d91d2cbC3238879669
✅ setRewardToken交易已提交: 0x3ded2aefd0fc0d28576ecc80fae46c80ea3638e415463dc4d116bec93fa005aa
✅ 奖励代币设置成功 - Token: 0x225278f3e11FD66E6f43e3d91d2cbC3238879669
🔍 [DEBUG] 🎁 [2/4] 分配给空投钱包 (2%): 2000000000 -> 0x8ef54e57dFB0b84Eb909072B699057Ef9517704a
🔍 [DEBUG] 📤 开始 airdrop 转账: 2000000000 tokens -> 0x8ef54e57dFB0b84Eb909072B699057Ef9517704a
🔍 [DEBUG] 📤 airdrop 转账已发送: 0xefe626c4c7c9e99878858bed8defb9d1522dfe62d7d0b7f29449f95d89822795
🔍 [DEBUG] ✅ airdrop 转账confirmed: 0xefe626c4c7c9e99878858bed8defb9d1522dfe62d7d0b7f29449f95d89822795
🔍 [DEBUG] airdrop 转账最终结果: {
  type: 'airdrop',
  amount: '2000000000',
  txHash: '0xefe626c4c7c9e99878858bed8defb9d1522dfe62d7d0b7f29449f95d89822795',
  status: 'confirmed',
  toAddress: '0x8ef54e57dFB0b84Eb909072B699057Ef9517704a'
}
🔍 [DEBUG] 🎁 空投钱包分配结果: ✅ 成功 - Hash: 0xefe626c4c7c9e99878858bed8defb9d1522dfe62d7d0b7f29449f95d89822795
⛏️ [3/4] 分配给AI挖矿合约 (40%): 40000000000 -> 0x6B0B8F74aaCe9731a2f5fc45c64bbd72075dBfDB
🔍 [DEBUG] 📤 开始 mining 转账: 40000000000 tokens -> 0x6B0B8F74aaCe9731a2f5fc45c64bbd72075dBfDB
🔍 [DEBUG] 📤 mining 转账已发送: 0x7e7c08c3b7158d957691a6a1166c6605e0eea5ec84bf5cd1a930f6f9ed6357db
🔍 [DEBUG] ✅ mining 转账confirmed: 0x7e7c08c3b7158d957691a6a1166c6605e0eea5ec84bf5cd1a930f6f9ed6357db
🔍 [DEBUG] mining 转账最终结果: {
  type: 'mining',
  amount: '40000000000',
  txHash: '0x7e7c08c3b7158d957691a6a1166c6605e0eea5ec84bf5cd1a930f6f9ed6357db',
  status: 'confirmed',
  toAddress: '0x6B0B8F74aaCe9731a2f5fc45c64bbd72075dBfDB'
}
⛏️ AI挖矿合约分配结果: ✅ 成功 - Hash: 0x7e7c08c3b7158d957691a6a1166c6605e0eea5ec84bf5cd1a930f6f9ed6357db
💧 [4/4] 添加DBCSwap流动性 (10%): 10000000000 代币
🏊 开始添加流动性 - 代币: 0x225278f3e11FD66E6f43e3d91d2cbC3238879669, 数量: 10000000000
🚀 开始流动性分发...
📊 Agent ID: fb051b0c-d4fd-4081-91bd-1269b906f9a4
🪙 代币地址: 0x225278f3e11FD66E6f43e3d91d2cbC3238879669
📈 总供应量: 100000000000
🧮 计算流动性参数 - 总供应量: 100000000000, IAO合约: 0xB2076716bC941D67431A2589c7cbA085D4b8b93E
🔍 查询IAO合约中的总投入XAA数量 - 合约地址: 0xB2076716bC941D67431A2589c7cbA085D4b8b93E
🏦 IAO合约地址: 0xB2076716bC941D67431A2589c7cbA085D4b8b93E
✅ 查询到总投入XAA数量: 99999.99999999999 XAA (100000000000000000000000 wei)
🔧 四舍五入后的XAA数量: 100000 XAA

✅ 验证计算结果:
  - 从XAA计算的流动性L: 51,816,718.902
  - 从代币计算的流动性L: 51,816,718.902
  - XAA误差: 0.000000%
  - 代币误差: 0.000000%
  - 价格倍数: 7.72x (相对于初始价格)
  - 总价格范围: 38.59x

========== 流动性价格配置 ==========
💰 代币数量:
  - 总供应量: 100000000000
  - IAO代币数量(15%): 15000000000
  - 流动性代币数量(10%): 10000000000
  - 原始XAA数量: 100000
  - 价格计算用XAA数量(100%): 100000
  - 实际使用XAA数量(95%): 95000

💰 价格计算:
  - 计算公式: XAA数量 / IAO代币数量
  - 基础价格 = 100000 / 15000000000 = 0.00001
  - 调整价格 = 0.00001 * 1.1 = 0.000011000000000000001

💰 价格和Tick设置:
  - 基础初始价格: 0.00001000
  - 调整后初始价格: 0.00001100 (1.1x of base)
    • 原始tick: -114182
    • 对齐后tick: -114190 (spacing: 10)
  - 最低价格: 0.00000220 (20.0% of initial)
    • 原始tick: -130278
    • 对齐后tick: -130280 (spacing: 10)
  - 最高价格: 0.00008491 (7.72x of initial)
    • 原始tick: -93745
    • 对齐后tick: -93750 (spacing: 10)
  - 计算方法: 新的Uniswap V3公式

📏 Tick配置:
  - Fee: 0.05% (tickSpacing: 10)
  - 初始tick到最低tick的距离: 16090
  - 初始tick到最高tick的距离: 20440
  - 总tick范围: 36530
  - 验证价格:
    • 最低价格 = 1.0001^-130280 = 0.00000220
    • 初始价格 = 1.0001^-114190 = 0.00001099
    • 最高价格 = 1.0001^-93750 = 0.00008486
===================================

�� 准备添加流动性: {
  tokenAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  tokenAmount: '10000000000',
  xaaAmount: '95000',
  priceRange: {
    initial: 0.000011000000000000001,
    min: 0.0000022000000000000005,
    max: 0.00008490883774736598
  }
}

========== 流动性参数验证 ==========
📊 代币信息:
  - 代币地址: 0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  - 代币数量: 10000000000
  - XAA数量: 95000

💰 价格设置:
  - 初始价格: 0.000011000000000000001
  - 最小价格: 0.0000022000000000000005 (20.0% of initial)
  - 最大价格: 0.00008490883774736598 (771.9% of initial)
💰 开始检查余额...
  - 代币地址: 0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  - 需要代币数量: 10000000000
  - 需要XAA数量: 95000
  - 钱包地址: 0x417Dd0DDAA54E651e304A12c9810173F57876159
💰 余额检查结果:
  - 代币余额: 10000000000 (需要: 10000000000) ✅
  - XAA余额: 572757.276870014134689602 (需要: 95000) ✅
✅ 池子地址: 0x3Ba354AE7Ac0E8bCa291E0B8861D62d9c0dc8Bc9
🏗️ 使用Uniswap价格初始化池子:
  - Uniswap价格: 0.000011000000000000001
  - 初始tick: -114182
  - sqrt价格: 0.003316601834597691
  - sqrtPriceX96: 262768269146613117263806464
💰 池子价格范围计算:
  - 初始价格: 0.000011000000000000001
  - 最小价格 (20%): 0.0000022000000000000005
  - 最大价格 (500%): 0.00005500000000000001
 ○ Compiling /api/user/profile ...
 ✓ Compiled /api/user/profile in 736ms (5520 modules)
✅ 池子初始化完成
✅ 池子初始化完成
📝 开始授权代币给Position Manager...
✅ 代币授权交易已提交: 0xafa8c3c4f1c432edeb332f74b9d5b67aca461f1db428a50600c61a101c596c23
⏳ 等待代币授权交易确认...
✅ 代币授权确认完成
📊 代币授权区块号: 3113434
📊 代币授权Gas使用: 184240
🔍 检查XAA授权前状态...
💰 当前XAA授权额度: 0
📝 开始授权XAA代币...
🔍 XAA代币地址: 0x8a88a1D2bD0a13BA245a4147b7e11Ef1A9d15C8a
🔍 Position Manager地址: 0xfCE792dd602fA70143e43e7556e8a92D762bA9FC
🔍 授权数量: 95000 XAA
🔍 钱包地址: 0x417Dd0DDAA54E651e304A12c9810173F57876159
✅ XAA授权交易已提交: 0x0e3204550ee5c6f84f93e70bd19c384aa5574954673953ab06479fff13235f96
⏳ 等待XAA授权交易确认...
⏳ 等待XAA授权交易确认...
✅ XAA授权确认完成
📊 XAA授权区块号: 3113435
📊 XAA授权Gas使用: 203882
✅ 代币授权完成
📊 价格范围设置:
  - 最小价格: 0.0000022000000000000005 -> tick: -130280
  - 最大价格: 0.00008490883774736598 -> tick: -93750
  - tick范围: 36530 ticks
🔍 池子状态查询:
  - 池子地址: 0x3Ba354AE7Ac0E8bCa291E0B8861D62d9c0dc8Bc9
  - sqrtPriceX96: 262768269146613117263806464
  - 当前tick: -114182
slippageMultiplier 0.995
amount0Desired 10000000000000000000000000000n
amount1Desired 95000000000000000000000n
amount0Min 9950000000000000036003905536n
amount1Min 94524999999999986106368n
mintParams {
  token0: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  token1: '0x8a88a1D2bD0a13BA245a4147b7e11Ef1A9d15C8a',
  fee: 500,
  tickLower: -130280,
  tickUpper: -93750,
  amount0Desired: 10000000000000000000000000000n,
  amount1Desired: 95000000000000000000000n,
  amount0Min: 9950000000000000036003905536n,
  amount1Min: 94524999999999986106368n,
  recipient: '0x417Dd0DDAA54E651e304A12c9810173F57876159',
  deadline: 1752853489n
}
❌ 池子操作失败: Error: test
    at PoolManager.mintLiquidity (webpack-internal:///(rsc)/./src/lib/pool-manager/index.ts:743:15)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async PoolManager.addLiquidity (webpack-internal:///(rsc)/./src/lib/pool-manager/index.ts:651:28)
    at async LiquidityDistributionManager.distributeLiquidity (webpack-internal:///(rsc)/./src/lib/token-distribution/liquidity-distribution.ts:285:28)
    at async addLiquidityToPool (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:291:24)
    at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:799:41)
    at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24)
❌ 流动性分发失败: Error: test
    at LiquidityDistributionManager.distributeLiquidity (webpack-internal:///(rsc)/./src/lib/token-distribution/liquidity-distribution.ts:287:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async addLiquidityToPool (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:291:24)
    at async distributeTokens (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:799:41)
    at async distributeTokensWithOptions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1335:20)
    at async processTokenDistributionTask (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:160:24)
❌ 流动性添加失败: test
💧 流动性添加结果: ❌ 失败 - Hash: N/A
📊 所有分配交易执行完成，共 4 笔交易
🔍 [DEBUG] 检查交易结果...
🔍 [DEBUG] 📊 分配结果汇总:
🔍 [DEBUG]   - 总交易数: 4
🔍 [DEBUG]   - 成功交易: 3 ✅
🔍 [DEBUG]   - 待确认交易: 0 ⏳
🔍 [DEBUG]   - 失败交易: 1 ❌
🔍 [DEBUG]   - 最终状态: PARTIAL_FAILED
🔍 [DEBUG] 所有交易详情:
🔍 [DEBUG]   1. creator - confirmed - 33000000000 -> 0xde184a6809898d81186def5c0823d2107c001da2
🔍 [DEBUG]      Hash: 0x4d276afb35e77b89d52c37fe201711d303484aa10020b0de7aa5b5a783dfcfd4
🔍 [DEBUG]   2. airdrop - confirmed - 2000000000 -> 0x8ef54e57dFB0b84Eb909072B699057Ef9517704a
🔍 [DEBUG]      Hash: 0xefe626c4c7c9e99878858bed8defb9d1522dfe62d7d0b7f29449f95d89822795
🔍 [DEBUG]   3. mining - confirmed - 40000000000 -> 0x6B0B8F74aaCe9731a2f5fc45c64bbd72075dBfDB
🔍 [DEBUG]      Hash: 0x7e7c08c3b7158d957691a6a1166c6605e0eea5ec84bf5cd1a930f6f9ed6357db
🔍 [DEBUG]   4. liquidity - failed - 10000000000 -> null
🔍 [DEBUG]      Hash: N/A
🔍 [DEBUG]      错误: test
🔍 [DEBUG]   1. liquidity - 10000000000 -> null
🔍 [DEBUG]      错误: test
🔍 [DEBUG] 💾 更新数据库任务状态: PARTIAL_FAILED
🔍 [DEBUG] 更新任务状态 - ID: d80a9aee-b4e1-4d40-a68f-02b60bec95a3, Status: PARTIAL_FAILED
✅ 任务状态已更新: d80a9aee-b4e1-4d40-a68f-02b60bec95a3 -> PARTIAL_FAILED
🔍 [DEBUG] ⚠️ 代币分配部分失败 - 共执行 4 笔交易，1 笔失败
🔍 [DEBUG] 最终返回结果: {
  success: false,
  taskId: 'd80a9aee-b4e1-4d40-a68f-02b60bec95a3',
  data: {
    transactions: [ [Object], [Object], [Object], [Object] ],
    totalDistributed: '100000000000'
  },
  error: '1 transactions failed'
}
🔍 [DEBUG] distributeTokens 返回结果: {
  success: false,
  taskId: 'd80a9aee-b4e1-4d40-a68f-02b60bec95a3',
  data: {
    transactions: [ [Object], [Object], [Object], [Object] ],
    totalDistributed: '100000000000'
  },
  error: '1 transactions failed'
}
📊 代币分发任务完成，状态: PARTIAL_FAILED
🔍 [DEBUG] ✅ 代币分配流程完成
� [DEBUG] �📊 分配结果摘要:
🔍 [DEBUG]   - 任务ID: d80a9aee-b4e1-4d40-a68f-02b60bec95a3
🔍 [DEBUG]   - 交易数量: 4
🔍 [DEBUG]   - 分配总量: 100000000000
🔍 [DEBUG]   - 最终状态: PARTIAL_FAILED
 ✓ Compiled in 866ms (5288 modules)
 ○ Compiling /api/agents/[id] ...
 ✓ Compiled /api/agents/[id] in 771ms (5446 modules)
[Agent详情API] 管理状态字段: {
  tokensDistributed: false,
  liquidityAdded: false,
  tokensBurned: false,
  ownerTransferred: false,
  miningOwnerTransferred: false
}
[Agent详情API] tokensDistributed类型: boolean, 值: false
[Agent详情状态计算] Agent: testn (fb051b0c-d4fd-4081-91bd-1269b906f9a4)
[Agent详情状态计算] 原始状态: TBA
[Agent详情状态计算] 当前时间戳: 1752852382 (2025-07-18T15:26:22.000Z)
[Agent详情状态计算] IAO开始时间: 1752851432 (2025-07-18T15:10:32.000Z)
[Agent详情状态计算] IAO结束时间: 1753110632 (2025-07-21T15:10:32.000Z)
[Agent详情状态计算] 代币地址: 0x225278f3e11FD66E6f43e3d91d2cbC3238879669
[Agent详情状态计算] 测试环境: false
[Agent详情状态计算] IAO进行中，状态: IAO_ONGOING
[Agent详情状态计算] 最终状态: IAO_ONGOING
[Agent详情状态计算] ==========================================
 ✓ Compiled /api/agents/[id]/tasks in 467ms (5523 modules)
 ○ Compiling /api/token/distribute ...
 ✓ Compiled /api/token/distribute in 1736ms (6036 modules)
🔄 开始重试任务: d80a9aee-b4e1-4d40-a68f-02b60bec95a3
🔄 开始重试任务: d80a9aee-b4e1-4d40-a68f-02b60bec95a3
✅ 找到任务: {
  id: 'd80a9aee-b4e1-4d40-a68f-02b60bec95a3',
  type: 'DISTRIBUTE_TOKENS',
  status: 'PARTIAL_FAILED',
  agentId: 'fb051b0c-d4fd-4081-91bd-1269b906f9a4'
}
[Agent详情API] 管理状态字段: {
  tokensDistributed: false,
  liquidityAdded: false,
  tokensBurned: false,
  ownerTransferred: false,
  miningOwnerTransferred: false
}
[Agent详情API] tokensDistributed类型: boolean, 值: false
[Agent详情状态计算] Agent: testn (fb051b0c-d4fd-4081-91bd-1269b906f9a4)
[Agent详情状态计算] 原始状态: TBA
[Agent详情状态计算] 当前时间戳: 1752852402 (2025-07-18T15:26:42.000Z)
[Agent详情状态计算] IAO开始时间: 1752851432 (2025-07-18T15:10:32.000Z)
[Agent详情状态计算] IAO结束时间: 1753110632 (2025-07-21T15:10:32.000Z)
[Agent详情状态计算] 代币地址: 0x225278f3e11FD66E6f43e3d91d2cbC3238879669
[Agent详情状态计算] 测试环境: false
[Agent详情状态计算] IAO进行中，状态: IAO_ONGOING
[Agent详情状态计算] 最终状态: IAO_ONGOING
[Agent详情状态计算] ==========================================
🪙 从 Agent 表获取代币地址: 0x225278f3e11FD66E6f43e3d91d2cbC3238879669
🔄 应用合并逻辑获取完整交易历史...
🔄 开始合并分发任务: 2
  处理任务 1/2: ID=d80a9aee-b4e1-4d40-a68f-02b60bec95a3, Status=PARTIAL_FAILED
    - 找到 4 个交易记录
      📝 记录新交易: creator - confirmed
      📝 记录新交易: airdrop - confirmed
      📝 记录新交易: mining - confirmed
      📝 记录新交易: liquidity - failed
  处理任务 2/2: ID=d6e63238-34c0-4b79-9cf0-1c05eca25066, Status=PARTIAL_FAILED
    - 找到 4 个交易记录
      ⭐ 用成功交易覆盖: creator
      ⭐ 用成功交易覆盖: airdrop
      ⭐ 用成功交易覆盖: mining
🎯 合并完成: 4 个交易，3 成功，1 失败
📋 合并后获得 4 个交易记录
🪙 任务代币地址: 0x225278f3e11FD66E6f43e3d91d2cbC3238879669
📋 交易详情: [
  { type: 'creator', status: 'confirmed', amount: '33000000000' },
  { type: 'airdrop', status: 'confirmed', amount: '2000000000' },
  { type: 'mining', status: 'confirmed', amount: '40000000000' },
  { type: 'liquidity', status: 'failed', amount: '10000000000' }
]
🔄 智能重试 1 笔失败的交易
✅ 跳过 3 笔已成功的交易
🔄 重试 liquidity 交易: 10000000000 -> null
🔄 重试流动性添加: 10000000000 代币
🏊 开始添加流动性 - 代币: 0x225278f3e11FD66E6f43e3d91d2cbC3238879669, 数量: 10000000000
🚀 开始流动性分发...
📊 Agent ID: fb051b0c-d4fd-4081-91bd-1269b906f9a4
🪙 代币地址: 0x225278f3e11FD66E6f43e3d91d2cbC3238879669
📈 总供应量: 100000000000
🧮 计算流动性参数 - 总供应量: 100000000000, IAO合约: 0xB2076716bC941D67431A2589c7cbA085D4b8b93E
🔍 查询IAO合约中的总投入XAA数量 - 合约地址: 0xB2076716bC941D67431A2589c7cbA085D4b8b93E
🏦 IAO合约地址: 0xB2076716bC941D67431A2589c7cbA085D4b8b93E
✅ 查询到总投入XAA数量: 99999.99999999999 XAA (100000000000000000000000 wei)
🔧 四舍五入后的XAA数量: 100000 XAA

✅ 验证计算结果:
  - 从XAA计算的流动性L: 51,816,718.902
  - 从代币计算的流动性L: 51,816,718.902
  - XAA误差: 0.000000%
  - 代币误差: 0.000000%
  - 价格倍数: 7.72x (相对于初始价格)
  - 总价格范围: 38.59x

========== 流动性价格配置 ==========
💰 代币数量:
  - 总供应量: 100000000000
  - IAO代币数量(15%): 15000000000
  - 流动性代币数量(10%): 10000000000
  - 原始XAA数量: 100000
  - 价格计算用XAA数量(100%): 100000
  - 实际使用XAA数量(95%): 95000

💰 价格计算:
  - 计算公式: XAA数量 / IAO代币数量
  - 基础价格 = 100000 / 15000000000 = 0.00001
  - 调整价格 = 0.00001 * 1.1 = 0.000011000000000000001

💰 价格和Tick设置:
  - 基础初始价格: 0.00001000
  - 调整后初始价格: 0.00001100 (1.1x of base)
    • 原始tick: -114182
    • 对齐后tick: -114190 (spacing: 10)
  - 最低价格: 0.00000220 (20.0% of initial)
    • 原始tick: -130278
    • 对齐后tick: -130280 (spacing: 10)
  - 最高价格: 0.00008491 (7.72x of initial)
    • 原始tick: -93745
    • 对齐后tick: -93750 (spacing: 10)
  - 计算方法: 新的Uniswap V3公式

📏 Tick配置:
  - Fee: 0.05% (tickSpacing: 10)
  - 初始tick到最低tick的距离: 16090
  - 初始tick到最高tick的距离: 20440
  - 总tick范围: 36530
  - 验证价格:
    • 最低价格 = 1.0001^-130280 = 0.00000220
    • 初始价格 = 1.0001^-114190 = 0.00001099
    • 最高价格 = 1.0001^-93750 = 0.00008486
===================================

�� 准备添加流动性: {
  tokenAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  tokenAmount: '10000000000',
  xaaAmount: '95000',
  priceRange: {
    initial: 0.000011000000000000001,
    min: 0.0000022000000000000005,
    max: 0.00008490883774736598
  }
}

========== 流动性参数验证 ==========
📊 代币信息:
  - 代币地址: 0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  - 代币数量: 10000000000
  - XAA数量: 95000

💰 价格设置:
  - 初始价格: 0.000011000000000000001
  - 最小价格: 0.0000022000000000000005 (20.0% of initial)
  - 最大价格: 0.00008490883774736598 (771.9% of initial)
💰 开始检查余额...
  - 代币地址: 0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  - 需要代币数量: 10000000000
  - 需要XAA数量: 95000
  - 钱包地址: 0x417Dd0DDAA54E651e304A12c9810173F57876159
💰 余额检查结果:
  - 代币余额: 10000000000 (需要: 10000000000) ✅
  - XAA余额: 572757.276870014134689602 (需要: 95000) ✅
✅ 池子地址: 0x3Ba354AE7Ac0E8bCa291E0B8861D62d9c0dc8Bc9
🔍 池子已初始化，当前价格 (token1/token0): 0.00001099984772925677
📊 价格比较:
  - 池子当前价格: 0.00001099984772925677
  - 期望Uniswap价格: 0.000011000000000000001
  - 价格差异: 0.00%
✅ 池子初始化完成
📝 开始授权代币给Position Manager...
✅ 代币授权交易已提交: 0xb36990098c567d5f914789ff7c929b7bfc115b8266134e807c34a5d98dfb0e55
⏳ 等待代币授权交易确认...
✅ 代币授权确认完成
📊 代币授权区块号: 3113455
📊 代币授权Gas使用: 184240
🔍 检查XAA授权前状态...
💰 当前XAA授权额度: 95000
🔄 重置XAA授权额度为0...
✅ XAA授权重置完成
📝 开始授权XAA代币...
🔍 XAA代币地址: 0x8a88a1D2bD0a13BA245a4147b7e11Ef1A9d15C8a
🔍 Position Manager地址: 0xfCE792dd602fA70143e43e7556e8a92D762bA9FC
🔍 授权数量: 95000 XAA
🔍 钱包地址: 0x417Dd0DDAA54E651e304A12c9810173F57876159
✅ XAA授权交易已提交: 0x61588d5fa1c94c457539233117428ac9fe3d53d604fe48cad0683a27a59f0f3d
⏳ 等待XAA授权交易确认...
⏳ 等待XAA授权交易确认...
✅ XAA授权确认完成
📊 XAA授权区块号: 3113457
📊 XAA授权Gas使用: 203882
✅ 代币授权完成
📊 价格范围设置:
  - 最小价格: 0.0000022000000000000005 -> tick: -130280
  - 最大价格: 0.00008490883774736598 -> tick: -93750
  - tick范围: 36530 ticks
🔍 池子状态查询:
  - 池子地址: 0x3Ba354AE7Ac0E8bCa291E0B8861D62d9c0dc8Bc9
  - sqrtPriceX96: 262768269146613117263806464
  - 当前tick: -114182
slippageMultiplier 0.995
amount0Desired 10000000000000000000000000000n
amount1Desired 95000000000000000000000n
amount0Min 9999999999999999583119736832n
amount1Min 94999999999999993708544n
mintParams {
  token0: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  token1: '0x8a88a1D2bD0a13BA245a4147b7e11Ef1A9d15C8a',
  fee: 500,
  tickLower: -130280,
  tickUpper: -93750,
  amount0Desired: 10000000000000000000000000000n,
  amount1Desired: 95000000000000000000000n,
  amount0Min: 9999999999999999583119736832n,
  amount1Min: 94999999999999993708544n,
  recipient: '0x417Dd0DDAA54E651e304A12c9810173F57876159',
  deadline: 1752853618n
}
❌ 池子操作失败: Error: test
    at PoolManager.mintLiquidity (webpack-internal:///(rsc)/./src/lib/pool-manager/index.ts:743:15)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async PoolManager.addLiquidity (webpack-internal:///(rsc)/./src/lib/pool-manager/index.ts:651:28)
    at async LiquidityDistributionManager.distributeLiquidity (webpack-internal:///(rsc)/./src/lib/token-distribution/liquidity-distribution.ts:285:28)
    at async addLiquidityToPool (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:291:24)
    at async retryFailedTransactions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1011:45)
    at async PATCH (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:312:24)
    at async E:\BeepBrainChain\XAIAgentPlatform\node_modules\.pnpm\next@14.0.4_react-dom@18.3.1_react@18.3.1__react@18.3.1\node_modules\next\dist\compiled\next-server\app-route.runtime.dev.js:6:63251
❌ 流动性分发失败: Error: test
    at LiquidityDistributionManager.distributeLiquidity (webpack-internal:///(rsc)/./src/lib/token-distribution/liquidity-distribution.ts:287:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async addLiquidityToPool (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:291:24)
    at async retryFailedTransactions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1011:45)
    at async PATCH (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:312:24)
    at async E:\BeepBrainChain\XAIAgentPlatform\node_modules\.pnpm\next@14.0.4_react-dom@18.3.1_react@18.3.1__react@18.3.1\node_modules\next\dist\compiled\next-server\app-route.runtime.dev.js:6:63251
❌ 流动性添加失败: test
❌ liquidity 重试结果: failed
📊 重试结果汇总:
  - 重试交易: 1
  - 重试成功: 0
  - 仍然失败: 1
🔍 [DEBUG] 更新任务状态 - ID: d80a9aee-b4e1-4d40-a68f-02b60bec95a3, Status: PARTIAL_FAILED
✅ 任务状态已更新: d80a9aee-b4e1-4d40-a68f-02b60bec95a3 -> PARTIAL_FAILED
 ✓ Compiled in 1306ms (11324 modules)
[Agent详情API] 管理状态字段: {
  tokensDistributed: false,
  liquidityAdded: false,
  tokensBurned: false,
  ownerTransferred: false,
  miningOwnerTransferred: false
}
[Agent详情API] tokensDistributed类型: boolean, 值: false
[Agent详情状态计算] Agent: testn (fb051b0c-d4fd-4081-91bd-1269b906f9a4)
[Agent详情状态计算] 原始状态: TBA
[Agent详情状态计算] 当前时间戳: 1752852451 (2025-07-18T15:27:31.000Z)
[Agent详情状态计算] IAO开始时间: 1752851432 (2025-07-18T15:10:32.000Z)
[Agent详情状态计算] IAO结束时间: 1753110632 (2025-07-21T15:10:32.000Z)
[Agent详情状态计算] 代币地址: 0x225278f3e11FD66E6f43e3d91d2cbC3238879669
[Agent详情状态计算] 测试环境: false
[Agent详情状态计算] IAO进行中，状态: IAO_ONGOING
[Agent详情状态计算] 最终状态: IAO_ONGOING
[Agent详情状态计算] ==========================================
 ✓ Compiled in 928ms (11324 modules)
[Agent详情API] 管理状态字段: {
  tokensDistributed: false,
  liquidityAdded: false,
  tokensBurned: false,
  ownerTransferred: false,
  miningOwnerTransferred: false
}
[Agent详情API] tokensDistributed类型: boolean, 值: false
[Agent详情状态计算] Agent: testn (fb051b0c-d4fd-4081-91bd-1269b906f9a4)
[Agent详情状态计算] 原始状态: TBA
[Agent详情状态计算] 当前时间戳: 1752852457 (2025-07-18T15:27:37.000Z)
[Agent详情状态计算] IAO开始时间: 1752851432 (2025-07-18T15:10:32.000Z)
[Agent详情状态计算] IAO结束时间: 1753110632 (2025-07-21T15:10:32.000Z)
[Agent详情状态计算] 代币地址: 0x225278f3e11FD66E6f43e3d91d2cbC3238879669
[Agent详情状态计算] 测试环境: false
[Agent详情状态计算] IAO进行中，状态: IAO_ONGOING
[Agent详情状态计算] 最终状态: IAO_ONGOING
[Agent详情状态计算] ==========================================
🔄 开始重试任务: d80a9aee-b4e1-4d40-a68f-02b60bec95a3
🔄 开始重试任务: d80a9aee-b4e1-4d40-a68f-02b60bec95a3
✅ 找到任务: {
  id: 'd80a9aee-b4e1-4d40-a68f-02b60bec95a3',
  type: 'DISTRIBUTE_TOKENS',
  status: 'PARTIAL_FAILED',
  agentId: 'fb051b0c-d4fd-4081-91bd-1269b906f9a4'
}
🪙 从 Agent 表获取代币地址: 0x225278f3e11FD66E6f43e3d91d2cbC3238879669
🔄 应用合并逻辑获取完整交易历史...
🔄 开始合并分发任务: 2
  处理任务 1/2: ID=d80a9aee-b4e1-4d40-a68f-02b60bec95a3, Status=PARTIAL_FAILED
    - 找到 4 个交易记录
      📝 记录新交易: creator - confirmed
      📝 记录新交易: airdrop - confirmed
      📝 记录新交易: mining - confirmed
      📝 记录新交易: liquidity - failed
  处理任务 2/2: ID=d6e63238-34c0-4b79-9cf0-1c05eca25066, Status=PARTIAL_FAILED
    - 找到 4 个交易记录
      ⭐ 用成功交易覆盖: creator
      ⭐ 用成功交易覆盖: airdrop
      ⭐ 用成功交易覆盖: mining
🎯 合并完成: 4 个交易，3 成功，1 失败
📋 合并后获得 4 个交易记录
🪙 任务代币地址: 0x225278f3e11FD66E6f43e3d91d2cbC3238879669
📋 交易详情: [
  { type: 'creator', status: 'confirmed', amount: '33000000000' },
  { type: 'airdrop', status: 'confirmed', amount: '2000000000' },
  { type: 'mining', status: 'confirmed', amount: '40000000000' },
  { type: 'liquidity', status: 'failed', amount: '10000000000' }
]
🔄 智能重试 1 笔失败的交易
✅ 跳过 3 笔已成功的交易
🔄 重试 liquidity 交易: 10000000000 -> null
🔄 重试流动性添加: 10000000000 代币
🏊 开始添加流动性 - 代币: 0x225278f3e11FD66E6f43e3d91d2cbC3238879669, 数量: 10000000000
🚀 开始流动性分发...
📊 Agent ID: fb051b0c-d4fd-4081-91bd-1269b906f9a4
🪙 代币地址: 0x225278f3e11FD66E6f43e3d91d2cbC3238879669
📈 总供应量: 100000000000
🧮 计算流动性参数 - 总供应量: 100000000000, IAO合约: 0xB2076716bC941D67431A2589c7cbA085D4b8b93E
🔍 查询IAO合约中的总投入XAA数量 - 合约地址: 0xB2076716bC941D67431A2589c7cbA085D4b8b93E
🏦 IAO合约地址: 0xB2076716bC941D67431A2589c7cbA085D4b8b93E
✅ 查询到总投入XAA数量: 99999.99999999999 XAA (100000000000000000000000 wei)
🔧 四舍五入后的XAA数量: 100000 XAA

✅ 验证计算结果:
  - 从XAA计算的流动性L: 51,816,718.902
  - 从代币计算的流动性L: 51,816,718.902
  - XAA误差: 0.000000%
  - 代币误差: 0.000000%
  - 价格倍数: 7.72x (相对于初始价格)
  - 总价格范围: 38.59x

========== 流动性价格配置 ==========
💰 代币数量:
  - 总供应量: 100000000000
  - IAO代币数量(15%): 15000000000
  - 流动性代币数量(10%): 10000000000
  - 原始XAA数量: 100000
  - 价格计算用XAA数量(100%): 100000
  - 实际使用XAA数量(95%): 95000

💰 价格计算:
  - 计算公式: XAA数量 / IAO代币数量
  - 基础价格 = 100000 / 15000000000 = 0.00001
  - 调整价格 = 0.00001 * 1.1 = 0.000011000000000000001

💰 价格和Tick设置:
  - 基础初始价格: 0.00001000
  - 调整后初始价格: 0.00001100 (1.1x of base)
    • 原始tick: -114182
    • 对齐后tick: -114190 (spacing: 10)
  - 最低价格: 0.00000220 (20.0% of initial)
    • 原始tick: -130278
    • 对齐后tick: -130280 (spacing: 10)
  - 最高价格: 0.00008491 (7.72x of initial)
    • 原始tick: -93745
    • 对齐后tick: -93750 (spacing: 10)
  - 计算方法: 新的Uniswap V3公式

📏 Tick配置:
  - Fee: 0.05% (tickSpacing: 10)
  - 初始tick到最低tick的距离: 16090
  - 初始tick到最高tick的距离: 20440
  - 总tick范围: 36530
  - 验证价格:
    • 最低价格 = 1.0001^-130280 = 0.00000220
    • 初始价格 = 1.0001^-114190 = 0.00001099
    • 最高价格 = 1.0001^-93750 = 0.00008486
===================================

�� 准备添加流动性: {
  tokenAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  tokenAmount: '10000000000',
  xaaAmount: '95000',
  priceRange: {
    initial: 0.000011000000000000001,
    min: 0.0000022000000000000005,
    max: 0.00008490883774736598
  }
}

========== 流动性参数验证 ==========
📊 代币信息:
  - 代币地址: 0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  - 代币数量: 10000000000
  - XAA数量: 95000

💰 价格设置:
  - 初始价格: 0.000011000000000000001
  - 最小价格: 0.0000022000000000000005 (20.0% of initial)
  - 最大价格: 0.00008490883774736598 (771.9% of initial)
💰 开始检查余额...
  - 代币地址: 0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  - 需要代币数量: 10000000000
  - 需要XAA数量: 95000
  - 钱包地址: 0x417Dd0DDAA54E651e304A12c9810173F57876159
💰 余额检查结果:
  - 代币余额: 10000000000 (需要: 10000000000) ✅
  - XAA余额: 572757.276870014134689602 (需要: 95000) ✅
✅ 池子地址: 0x3Ba354AE7Ac0E8bCa291E0B8861D62d9c0dc8Bc9
🔍 池子已初始化，当前价格 (token1/token0): 0.00001099984772925677
📊 价格比较:
  - 池子当前价格: 0.00001099984772925677
  - 期望Uniswap价格: 0.000011000000000000001
  - 价格差异: 0.00%
✅ 池子初始化完成
📝 开始授权代币给Position Manager...
✅ 代币授权交易已提交: 0x5cd62c072ad5150b2799f45d287e234b77f92dfc1af268e01b49badefbcee65d
⏳ 等待代币授权交易确认...
✅ 代币授权确认完成
📊 代币授权区块号: 3113466
📊 代币授权Gas使用: 184240
🔍 检查XAA授权前状态...
💰 当前XAA授权额度: 95000
🔄 重置XAA授权额度为0...
 ○ Compiling /api/user/profile ...
 ✓ Compiled /api/user/profile in 702ms (6038 modules)
✅ XAA授权重置完成
📝 开始授权XAA代币...
🔍 XAA代币地址: 0x8a88a1D2bD0a13BA245a4147b7e11Ef1A9d15C8a
🔍 Position Manager地址: 0xfCE792dd602fA70143e43e7556e8a92D762bA9FC
🔍 授权数量: 95000 XAA
🔍 钱包地址: 0x417Dd0DDAA54E651e304A12c9810173F57876159
✅ XAA授权交易已提交: 0xcd17e0c8b84f09ab7328a0a7ee9aec8849ef79f92f654da16276edc8a6137bd1
⏳ 等待XAA授权交易确认...
⏳ 等待XAA授权交易确认...
✅ XAA授权确认完成
📊 XAA授权区块号: 3113468
📊 XAA授权Gas使用: 203882
✅ 代币授权完成
📊 价格范围设置:
  - 最小价格: 0.0000022000000000000005 -> tick: -130280
  - 最大价格: 0.00008490883774736598 -> tick: -93750
  - tick范围: 36530 ticks
🔍 池子状态查询:
  - 池子地址: 0x3Ba354AE7Ac0E8bCa291E0B8861D62d9c0dc8Bc9
  - sqrtPriceX96: 262768269146613117263806464
  - 当前tick: -114182
mintParams {
  token0: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  token1: '0x8a88a1D2bD0a13BA245a4147b7e11Ef1A9d15C8a',
  fee: 500,
  tickLower: -130280,
  tickUpper: -93750,
  amount0Desired: 10000000000000000000000000000n,
  amount1Desired: 95000000000000000000000n,
  amount0Min: 10000000000000000000000000000n,
  amount1Min: 95000000000000000000000n,
  recipient: '0x417Dd0DDAA54E651e304A12c9810173F57876159',
  deadline: 1752853685n
}
❌ 池子操作失败: Error: test
    at PoolManager.mintLiquidity (webpack-internal:///(rsc)/./src/lib/pool-manager/index.ts:743:15)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async PoolManager.addLiquidity (webpack-internal:///(rsc)/./src/lib/pool-manager/index.ts:651:28)
    at async LiquidityDistributionManager.distributeLiquidity (webpack-internal:///(rsc)/./src/lib/token-distribution/liquidity-distribution.ts:285:28)
    at async addLiquidityToPool (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:291:24)
    at async retryFailedTransactions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1011:45)
    at async PATCH (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:312:24)
    at async E:\BeepBrainChain\XAIAgentPlatform\node_modules\.pnpm\next@14.0.4_react-dom@18.3.1_react@18.3.1__react@18.3.1\node_modules\next\dist\compiled\next-server\app-route.runtime.dev.js:6:63251
❌ 流动性分发失败: Error: test
    at LiquidityDistributionManager.distributeLiquidity (webpack-internal:///(rsc)/./src/lib/token-distribution/liquidity-distribution.ts:287:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async addLiquidityToPool (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:291:24)
    at async retryFailedTransactions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1011:45)
    at async PATCH (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:312:24)
    at async E:\BeepBrainChain\XAIAgentPlatform\node_modules\.pnpm\next@14.0.4_react-dom@18.3.1_react@18.3.1__react@18.3.1\node_modules\next\dist\compiled\next-server\app-route.runtime.dev.js:6:63251
❌ 流动性添加失败: test
❌ liquidity 重试结果: failed
📊 重试结果汇总:
  - 重试交易: 1
  - 重试成功: 0
  - 仍然失败: 1
🔍 [DEBUG] 更新任务状态 - ID: d80a9aee-b4e1-4d40-a68f-02b60bec95a3, Status: PARTIAL_FAILED
✅ 任务状态已更新: d80a9aee-b4e1-4d40-a68f-02b60bec95a3 -> PARTIAL_FAILED
 ✓ Compiled in 1569ms (10808 modules)
 ○ Compiling /api/agents/[id] ...
 ✓ Compiled /api/agents/[id] in 509ms (5523 modules)
[Agent详情API] 管理状态字段: {
  tokensDistributed: false,
  liquidityAdded: false,
  tokensBurned: false,
  ownerTransferred: false,
  miningOwnerTransferred: false
}
[Agent详情API] tokensDistributed类型: boolean, 值: false
[Agent详情状态计算] Agent: testn (fb051b0c-d4fd-4081-91bd-1269b906f9a4)
[Agent详情状态计算] 原始状态: TBA
[Agent详情状态计算] 当前时间戳: 1752852586 (2025-07-18T15:29:46.000Z)
[Agent详情状态计算] IAO开始时间: 1752851432 (2025-07-18T15:10:32.000Z)
[Agent详情状态计算] IAO结束时间: 1753110632 (2025-07-21T15:10:32.000Z)
[Agent详情状态计算] 代币地址: 0x225278f3e11FD66E6f43e3d91d2cbC3238879669
[Agent详情状态计算] 测试环境: false
[Agent详情状态计算] IAO进行中，状态: IAO_ONGOING
[Agent详情状态计算] 最终状态: IAO_ONGOING
[Agent详情状态计算] ==========================================
 ✓ Compiled /api/agents/[id]/tasks in 466ms (5525 modules)
 ○ Compiling /api/token/distribute ...
 ✓ Compiled /api/token/distribute in 739ms (6038 modules)
🔄 开始重试任务: d80a9aee-b4e1-4d40-a68f-02b60bec95a3
🔄 开始重试任务: d80a9aee-b4e1-4d40-a68f-02b60bec95a3
✅ 找到任务: {
  id: 'd80a9aee-b4e1-4d40-a68f-02b60bec95a3',
  type: 'DISTRIBUTE_TOKENS',
  status: 'PARTIAL_FAILED',
  agentId: 'fb051b0c-d4fd-4081-91bd-1269b906f9a4'
}
🪙 从 Agent 表获取代币地址: 0x225278f3e11FD66E6f43e3d91d2cbC3238879669
🔄 应用合并逻辑获取完整交易历史...
🔄 开始合并分发任务: 2
  处理任务 1/2: ID=d80a9aee-b4e1-4d40-a68f-02b60bec95a3, Status=PARTIAL_FAILED
    - 找到 4 个交易记录
      📝 记录新交易: creator - confirmed
      📝 记录新交易: airdrop - confirmed
      📝 记录新交易: mining - confirmed
      📝 记录新交易: liquidity - failed
  处理任务 2/2: ID=d6e63238-34c0-4b79-9cf0-1c05eca25066, Status=PARTIAL_FAILED
    - 找到 4 个交易记录
      ⭐ 用成功交易覆盖: creator
      ⭐ 用成功交易覆盖: airdrop
      ⭐ 用成功交易覆盖: mining
🎯 合并完成: 4 个交易，3 成功，1 失败
📋 合并后获得 4 个交易记录
🪙 任务代币地址: 0x225278f3e11FD66E6f43e3d91d2cbC3238879669
📋 交易详情: [
  { type: 'creator', status: 'confirmed', amount: '33000000000' },
  { type: 'airdrop', status: 'confirmed', amount: '2000000000' },
  { type: 'mining', status: 'confirmed', amount: '40000000000' },
  { type: 'liquidity', status: 'failed', amount: '10000000000' }
]
🔄 智能重试 1 笔失败的交易
✅ 跳过 3 笔已成功的交易
🔄 重试 liquidity 交易: 10000000000 -> null
🔄 重试流动性添加: 10000000000 代币
🏊 开始添加流动性 - 代币: 0x225278f3e11FD66E6f43e3d91d2cbC3238879669, 数量: 10000000000
[Agent详情API] 管理状态字段: {
  tokensDistributed: false,
  liquidityAdded: false,
  tokensBurned: false,
  ownerTransferred: false,
  miningOwnerTransferred: false
}
[Agent详情API] tokensDistributed类型: boolean, 值: false
[Agent详情状态计算] Agent: testn (fb051b0c-d4fd-4081-91bd-1269b906f9a4)
[Agent详情状态计算] 原始状态: TBA
[Agent详情状态计算] 当前时间戳: 1752852597 (2025-07-18T15:29:57.000Z)
[Agent详情状态计算] IAO开始时间: 1752851432 (2025-07-18T15:10:32.000Z)
[Agent详情状态计算] IAO结束时间: 1753110632 (2025-07-21T15:10:32.000Z)
[Agent详情状态计算] 代币地址: 0x225278f3e11FD66E6f43e3d91d2cbC3238879669
[Agent详情状态计算] 测试环境: false
[Agent详情状态计算] IAO进行中，状态: IAO_ONGOING
[Agent详情状态计算] 最终状态: IAO_ONGOING
[Agent详情状态计算] ==========================================
🚀 开始流动性分发...
📊 Agent ID: fb051b0c-d4fd-4081-91bd-1269b906f9a4
🪙 代币地址: 0x225278f3e11FD66E6f43e3d91d2cbC3238879669
📈 总供应量: 100000000000
🧮 计算流动性参数 - 总供应量: 100000000000, IAO合约: 0xB2076716bC941D67431A2589c7cbA085D4b8b93E
🔍 查询IAO合约中的总投入XAA数量 - 合约地址: 0xB2076716bC941D67431A2589c7cbA085D4b8b93E
🏦 IAO合约地址: 0xB2076716bC941D67431A2589c7cbA085D4b8b93E
✅ 查询到总投入XAA数量: 99999.99999999999 XAA (100000000000000000000000 wei)
🔧 四舍五入后的XAA数量: 100000 XAA

✅ 验证计算结果:
  - 从XAA计算的流动性L: 51,816,718.902
  - 从代币计算的流动性L: 51,816,718.902
  - XAA误差: 0.000000%
  - 代币误差: 0.000000%
  - 价格倍数: 7.72x (相对于初始价格)
  - 总价格范围: 38.59x

========== 流动性价格配置 ==========
💰 代币数量:
  - 总供应量: 100000000000
  - IAO代币数量(15%): 15000000000
  - 流动性代币数量(10%): 10000000000
  - 原始XAA数量: 100000
  - 价格计算用XAA数量(100%): 100000
  - 实际使用XAA数量(95%): 95000

💰 价格计算:
  - 计算公式: XAA数量 / IAO代币数量
  - 基础价格 = 100000 / 15000000000 = 0.00001
  - 调整价格 = 0.00001 * 1.1 = 0.000011000000000000001

💰 价格和Tick设置:
  - 基础初始价格: 0.00001000
  - 调整后初始价格: 0.00001100 (1.1x of base)
    • 原始tick: -114182
    • 对齐后tick: -114190 (spacing: 10)
  - 最低价格: 0.00000220 (20.0% of initial)
    • 原始tick: -130278
    • 对齐后tick: -130280 (spacing: 10)
  - 最高价格: 0.00008491 (7.72x of initial)
    • 原始tick: -93745
    • 对齐后tick: -93750 (spacing: 10)
  - 计算方法: 新的Uniswap V3公式

📏 Tick配置:
  - Fee: 0.05% (tickSpacing: 10)
  - 初始tick到最低tick的距离: 16090
  - 初始tick到最高tick的距离: 20440
  - 总tick范围: 36530
  - 验证价格:
    • 最低价格 = 1.0001^-130280 = 0.00000220
    • 初始价格 = 1.0001^-114190 = 0.00001099
    • 最高价格 = 1.0001^-93750 = 0.00008486
===================================

�� 准备添加流动性: {
  tokenAddress: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  tokenAmount: '10000000000',
  xaaAmount: '95000',
  priceRange: {
    initial: 0.000011000000000000001,
    min: 0.0000022000000000000005,
    max: 0.00008490883774736598
  }
}

========== 流动性参数验证 ==========
📊 代币信息:
  - 代币地址: 0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  - 代币数量: 10000000000
  - XAA数量: 95000

💰 价格设置:
  - 初始价格: 0.000011000000000000001
  - 最小价格: 0.0000022000000000000005 (20.0% of initial)
  - 最大价格: 0.00008490883774736598 (771.9% of initial)
💰 开始检查余额...
  - 代币地址: 0x225278f3e11FD66E6f43e3d91d2cbC3238879669
  - 需要代币数量: 10000000000
  - 需要XAA数量: 95000
  - 钱包地址: 0x417Dd0DDAA54E651e304A12c9810173F57876159
💰 余额检查结果:
  - 代币余额: 10000000000 (需要: 10000000000) ✅
  - XAA余额: 572757.276870014134689602 (需要: 95000) ✅
✅ 池子地址: 0x3Ba354AE7Ac0E8bCa291E0B8861D62d9c0dc8Bc9
🔍 池子已初始化，当前价格 (token1/token0): 0.00001099984772925677
📊 价格比较:
  - 池子当前价格: 0.00001099984772925677
  - 期望Uniswap价格: 0.000011000000000000001
  - 价格差异: 0.00%
✅ 池子初始化完成
📝 开始授权代币给Position Manager...
✅ 代币授权交易已提交: 0x7addbcdef9fc03087a6f900512dfa08d98bd8ef67e682a45b78a738278aca1ee
⏳ 等待代币授权交易确认...
✅ 代币授权确认完成
📊 代币授权区块号: 3113486
📊 代币授权Gas使用: 184240
🔍 检查XAA授权前状态...
💰 当前XAA授权额度: 95000
🔄 重置XAA授权额度为0...
✅ XAA授权重置完成
📝 开始授权XAA代币...
🔍 XAA代币地址: 0x8a88a1D2bD0a13BA245a4147b7e11Ef1A9d15C8a
🔍 Position Manager地址: 0xfCE792dd602fA70143e43e7556e8a92D762bA9FC
🔍 授权数量: 95000 XAA
🔍 钱包地址: 0x417Dd0DDAA54E651e304A12c9810173F57876159
✅ XAA授权交易已提交: 0x71428b0e16c4420e2d7d6e3cf5f8127a9195caa54d2a558ce74bf7b2cd709823
⏳ 等待XAA授权交易确认...
⏳ 等待XAA授权交易确认...
✅ XAA授权确认完成
📊 XAA授权区块号: 3113488
📊 XAA授权Gas使用: 203882
✅ 代币授权完成
📊 价格范围设置:
  - 最小价格: 0.0000022000000000000005 -> tick: -130280
  - 最大价格: 0.00008490883774736598 -> tick: -93750
  - tick范围: 36530 ticks
🔍 池子状态查询:
  - 池子地址: 0x3Ba354AE7Ac0E8bCa291E0B8861D62d9c0dc8Bc9
  - sqrtPriceX96: 262768269146613117263806464
  - 当前tick: -114182
mintParams {
  token0: '0x225278f3e11FD66E6f43e3d91d2cbC3238879669',
  token1: '0x8a88a1D2bD0a13BA245a4147b7e11Ef1A9d15C8a',
  fee: 500,
  tickLower: -130280,
  tickUpper: -93750,
  amount0Desired: 10000000000000000000000000000n,
  amount1Desired: 95000000000000000000000n,
  amount0Min: 10000000000000000000000000000n,
  amount1Min: 95000000000000000000000n,
  recipient: '0x417Dd0DDAA54E651e304A12c9810173F57876159',
  deadline: 1752853817n
}
❌ 池子操作失败: Error: test
    at PoolManager.mintLiquidity (webpack-internal:///(rsc)/./src/lib/pool-manager/index.ts:743:15)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async PoolManager.addLiquidity (webpack-internal:///(rsc)/./src/lib/pool-manager/index.ts:651:28)
    at async LiquidityDistributionManager.distributeLiquidity (webpack-internal:///(rsc)/./src/lib/token-distribution/liquidity-distribution.ts:285:28)
    at async addLiquidityToPool (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:291:24)
    at async retryFailedTransactions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1011:45)
    at async PATCH (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:312:24)
    at async E:\BeepBrainChain\XAIAgentPlatform\node_modules\.pnpm\next@14.0.4_react-dom@18.3.1_react@18.3.1__react@18.3.1\node_modules\next\dist\compiled\next-server\app-route.runtime.dev.js:6:63251
❌ 流动性分发失败: Error: test
    at LiquidityDistributionManager.distributeLiquidity (webpack-internal:///(rsc)/./src/lib/token-distribution/liquidity-distribution.ts:287:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async addLiquidityToPool (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:291:24)
    at async retryFailedTransactions (webpack-internal:///(rsc)/./src/lib/server-wallet/index.ts:1011:45)
    at async PATCH (webpack-internal:///(rsc)/./src/app/api/token/distribute/route.ts:312:24)
    at async E:\BeepBrainChain\XAIAgentPlatform\node_modules\.pnpm\next@14.0.4_react-dom@18.3.1_react@18.3.1__react@18.3.1\node_modules\next\dist\compiled\next-server\app-route.runtime.dev.js:6:63251
❌ 流动性添加失败: test
❌ liquidity 重试结果: failed
📊 重试结果汇总:
  - 重试交易: 1
  - 重试成功: 0
  - 仍然失败: 1
🔍 [DEBUG] 更新任务状态 - ID: d80a9aee-b4e1-4d40-a68f-02b60bec95a3, Status: PARTIAL_FAILED
✅ 任务状态已更新: d80a9aee-b4e1-4d40-a68f-02b60bec95a3 -> PARTIAL_FAILED
 ✓ Compiled in 1601ms (10808 modules)
 ○ Compiling /api/agents/[id] ...
 ✓ Compiled /api/agents/[id] in 517ms (5523 modules)
[Agent详情API] 管理状态字段: {
  tokensDistributed: false,
  liquidityAdded: false,
  tokensBurned: false,
  ownerTransferred: false,
  miningOwnerTransferred: false
}
[Agent详情API] tokensDistributed类型: boolean, 值: false
[Agent详情状态计算] Agent: testn (fb051b0c-d4fd-4081-91bd-1269b906f9a4)
[Agent详情状态计算] 原始状态: TBA
[Agent详情状态计算] 当前时间戳: 1752852704 (2025-07-18T15:31:44.000Z)
[Agent详情状态计算] IAO开始时间: 1752851432 (2025-07-18T15:10:32.000Z)
[Agent详情状态计算] IAO结束时间: 1753110632 (2025-07-21T15:10:32.000Z)
[Agent详情状态计算] 代币地址: 0x225278f3e11FD66E6f43e3d91d2cbC3238879669
[Agent详情状态计算] 测试环境: false
[Agent详情状态计算] IAO进行中，状态: IAO_ONGOING
[Agent详情状态计算] 最终状态: IAO_ONGOING
[Agent详情状态计算] ==========================================
